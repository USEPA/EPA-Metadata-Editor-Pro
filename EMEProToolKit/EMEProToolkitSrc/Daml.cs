//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace ArcGIS.Desktop.Framework {

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	public static partial class DAML {
		public static partial class Button {
			///<summary>Returns the id string for &quot;Topology&quot; (esri_topology_wizard_module:ShowCreateTopologyWizard, Catalog)</summary>
			public static string esri_GDBCreateTopologyButton {
				 get { return "esri_GDBCreateTopologyButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_propertyPage_module:ShowProjectItemProperties, Catalog)</summary>
			public static string esri_projectItemPropertiesButton {
				 get { return "esri_projectItemPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveProjectItem, Catalog)</summary>
			public static string esri_projectItemServerConnectionRemove {
				 get { return "esri_projectItemServerConnectionRemove"; }
			}
			///<summary>Returns the id string for &quot;Add Server&quot; (esri_geodatabase_module:AddExistingServerConnection, Catalog)</summary>
			public static string esri_projectItemAddExistingServerConnection {
				 get { return "esri_projectItemAddExistingServerConnection"; }
			}
			///<summary>Returns the id string for &quot;Add Cloud Storage Connection&quot; (esri_geodatabase_module:AddExistingACSConnection, Catalog)</summary>
			public static string esri_projectItemAddExistingACSConnection {
				 get { return "esri_projectItemAddExistingACSConnection"; }
			}
			///<summary>Returns the id string for &quot;Add Server&quot; (esri_geodatabase_module:AddExistingServerConnectionToFavorites, Catalog)</summary>
			public static string esri_projectItemAddExistingServerConnectionToFavorites {
				 get { return "esri_projectItemAddExistingServerConnectionToFavorites"; }
			}
			///<summary>Returns the id string for &quot;New ArcGIS Server Connection&quot; (esri_geodatabase_module:AddAGSConnection, Catalog)</summary>
			public static string esri_projectItemAddAGSConnection {
				 get { return "esri_projectItemAddAGSConnection"; }
			}
			///<summary>Returns the id string for &quot;New Cloud Storage Connection&quot; (esri_geodatabase_module:AddNewACSConnection, Catalog)</summary>
			public static string esri_projectItemAddNewACSConnection {
				 get { return "esri_projectItemAddNewACSConnection"; }
			}
			///<summary>Returns the id string for &quot;New ArcGIS Server Connection&quot; (esri_geodatabase_module:AddAGSConnectionToFavorites, Catalog)</summary>
			public static string esri_projectItemAddAGSConnectionToFavorites {
				 get { return "esri_projectItemAddAGSConnectionToFavorites"; }
			}
			///<summary>Returns the id string for &quot;New WCS Server Connection&quot; (esri_geodatabase_module:AddWCSConnection, Catalog)</summary>
			public static string esri_projectItemAddWCSConnection {
				 get { return "esri_projectItemAddWCSConnection"; }
			}
			///<summary>Returns the id string for &quot;New WMS Server Connection&quot; (esri_geodatabase_module:AddWMSConnection, Catalog)</summary>
			public static string esri_projectItemAddWMSConnection {
				 get { return "esri_projectItemAddWMSConnection"; }
			}
			///<summary>Returns the id string for &quot;New WFS Server Connection&quot; (esri_geodatabase_module:AddWFSConnection, Catalog)</summary>
			public static string esri_projectItemAddWFSConnection {
				 get { return "esri_projectItemAddWFSConnection"; }
			}
			///<summary>Returns the id string for &quot;New WMTS Server Connection&quot; (esri_geodatabase_module:AddWMTSConnection, Catalog)</summary>
			public static string esri_projectItemAddWMTSConnection {
				 get { return "esri_projectItemAddWMTSConnection"; }
			}
			///<summary>Returns the id string for &quot;New Statistical Data Collection&quot; (esri_businessAnalyst_Module:NewSDCXOnClick, Catalog)</summary>
			public static string esri_projectItemCreateStatisticalDataCollectionButton {
				 get { return "esri_projectItemCreateStatisticalDataCollectionButton"; }
			}
			///<summary>Returns the id string for &quot;Add Statistical Data Collection&quot; (esri_businessAnalyst_Module:AddSDCXOnClick, Catalog)</summary>
			public static string esri_projectItemAddExistingStatisticalDataCollection {
				 get { return "esri_projectItemAddExistingStatisticalDataCollection"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveProjectItem, Catalog)</summary>
			public static string esri_projectItemStatisticalDataCollectionRemove {
				 get { return "esri_projectItemStatisticalDataCollectionRemove"; }
			}
			///<summary>Returns the id string for &quot;Add Folder Connection&quot; (AddFolderConnectionCmd, Catalog)</summary>
			public static string esri_folderConnectionAddButton {
				 get { return "esri_folderConnectionAddButton"; }
			}
			///<summary>Returns the id string for &quot;Create Folder Connection&quot; (AddExistingFolderConnectionCmd, Catalog)</summary>
			public static string esri_folderConnectionAddExistingButton {
				 get { return "esri_folderConnectionAddExistingButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveProjectItem, Catalog)</summary>
			public static string esri_folderConnectionRemoveButton {
				 get { return "esri_folderConnectionRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveProjectItem, Catalog)</summary>
			public static string esri_locatorsConnectionRemoveButton {
				 get { return "esri_locatorsConnectionRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_database_module:DeleteItem, Catalog)</summary>
			public static string esri_DeleteItem {
				 get { return "esri_DeleteItem"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_database_module:GetDatabaseProperties, Catalog)</summary>
			public static string esri_SqlitePropertiesButton {
				 get { return "esri_SqlitePropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveProjectItem, Catalog)</summary>
			public static string esri_GDBRemoveButton {
				 get { return "esri_GDBRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Dataset&quot; (esri_geoprocessing_module:Commands.gdbCreateFeatureDataset, Catalog)</summary>
			public static string esri_GDBCreateFeatureDatasetButton {
				 get { return "esri_GDBCreateFeatureDatasetButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class&quot; (esri_geodatabase_module:gdbImportFeatureClassToFeatureClass, Catalog)</summary>
			public static string esri_GDBImportFeatureClassButton {
				 get { return "esri_GDBImportFeatureClassButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class(es)&quot; (esri_geodatabase_module:gdbImportFeatureClassToFeatureClasses, Catalog)</summary>
			public static string esri_GDBImportFeatureClassesButton {
				 get { return "esri_GDBImportFeatureClassesButton"; }
			}
			///<summary>Returns the id string for &quot;Table&quot; (esri_geodatabase_module:gdbImportTableToTable, Catalog)</summary>
			public static string esri_GDBImportTableButton {
				 get { return "esri_GDBImportTableButton"; }
			}
			///<summary>Returns the id string for &quot;Table(s)&quot; (esri_geodatabase_module:gdbImportTableToTables, Catalog)</summary>
			public static string esri_GDBImportTablesButton {
				 get { return "esri_GDBImportTablesButton"; }
			}
			///<summary>Returns the id string for &quot;XML Workspace Document&quot; (esri_geodatabase_module:gdbImportXMLDocumentToGeodatabase, Catalog)</summary>
			public static string esri_GDBImportXMLWorkspaceDocumentsButton {
				 get { return "esri_GDBImportXMLWorkspaceDocumentsButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class(es) To CAD...&quot; (esri_geodatabase_module:gdbExportFeatureClassToCAD, Catalog)</summary>
			public static string esri_GDBFeatureClassesExportToCADButton {
				 get { return "esri_GDBFeatureClassesExportToCADButton"; }
			}
			///<summary>Returns the id string for &quot;Shapefile(s) To CAD...&quot; (esri_geodatabase_module:gdbExportFeatureClassToCAD, Catalog)</summary>
			public static string esri_GDBShapeExportToCADButton {
				 get { return "esri_GDBShapeExportToCADButton"; }
			}
			///<summary>Returns the id string for &quot;Table To Table...&quot; (esri_geodatabase_module:gdbExportTableToTableGDB, Catalog)</summary>
			public static string esri_GDBTableExportToTableButton {
				 get { return "esri_GDBTableExportToTableButton"; }
			}
			///<summary>Returns the id string for &quot;Table(s) To Geodatabase...&quot; (esri_geodatabase_module:gdbExportTableToGeodatabase, Catalog)</summary>
			public static string esri_GDBTablesExportToGeodatabaseButton {
				 get { return "esri_GDBTablesExportToGeodatabaseButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class To Feature Class...&quot; (esri_geodatabase_module:gdbExportFeatureClassToFeatureClass, Catalog)</summary>
			public static string esri_GDBFeatureClassExportToFeatureClassButton {
				 get { return "esri_GDBFeatureClassExportToFeatureClassButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class(es) To Geodatabase...&quot; (esri_geodatabase_module:gdbExportFeatureClassToGeodatabase, Catalog)</summary>
			public static string esri_GDBFeatureClassesExportToGeodatabaseButton {
				 get { return "esri_GDBFeatureClassesExportToGeodatabaseButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class To Shapefile...&quot; (esri_geodatabase_module:gdbExportFeatureClassToFeatureClassForShapefile, Catalog)</summary>
			public static string esri_GDBFeatureClassExportToShapefileButton {
				 get { return "esri_GDBFeatureClassExportToShapefileButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class(es) To Shapefile(s)...&quot; (esri_geodatabase_module:gdbExportFeatureClassToShapfile, Catalog)</summary>
			public static string esri_GDBFeatureClassesExportToShapefileButton {
				 get { return "esri_GDBFeatureClassesExportToShapefileButton"; }
			}
			///<summary>Returns the id string for &quot;Table To dBASE...&quot; (esri_geodatabase_module:gdbExportTableToTable, Catalog)</summary>
			public static string esri_GDBTableExportTodBASEButton {
				 get { return "esri_GDBTableExportTodBASEButton"; }
			}
			///<summary>Returns the id string for &quot;Table To Point Feature Class...&quot; (esri_geodatabase_module:gdbExportXYTableToPointFeatureClass, Catalog)</summary>
			public static string esri_GDBTableExportToPointFeatureClassButton {
				 get { return "esri_GDBTableExportToPointFeatureClassButton"; }
			}
			///<summary>Returns the id string for &quot;Table To Line Feature Class...&quot; (esri_geodatabase_module:gdbExportXYTableToLineFeatureClass, Catalog)</summary>
			public static string esri_GDBTableExportToLineFeatureClassButton {
				 get { return "esri_GDBTableExportToLineFeatureClassButton"; }
			}
			///<summary>Returns the id string for &quot;Table To Ellipse Feature Class...&quot; (esri_geodatabase_module:gdbExportTableToEllipseFeatureClass, Catalog)</summary>
			public static string esri_GDBTableExportToEllipseFeatureClassButton {
				 get { return "esri_GDBTableExportToEllipseFeatureClassButton"; }
			}
			///<summary>Returns the id string for &quot;Table(s) To dBASE...&quot; (esri_geodatabase_module:gdbExportTablesTodBASEfiles, Catalog)</summary>
			public static string esri_GDBTablesExportTodBASEButton {
				 get { return "esri_GDBTablesExportTodBASEButton"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase To XML Workspace Document...&quot; (esri_geodatabase_module:gdbExportGeodatabaseToXMLDocument, Catalog)</summary>
			public static string esri_GDBGeodatabaseExportToXMLWorkspaceDocumentsButton {
				 get { return "esri_GDBGeodatabaseExportToXMLWorkspaceDocumentsButton"; }
			}
			///<summary>Returns the id string for &quot;Table To XML Workspace Document...&quot; (esri_geodatabase_module:gdbExportGeodatabaseToXMLDocument, Catalog)</summary>
			public static string esri_GDBTableExportToXMLWorkspaceDocumentsButton {
				 get { return "esri_GDBTableExportToXMLWorkspaceDocumentsButton"; }
			}
			///<summary>Returns the id string for &quot;Raster To XML Workspace Document...&quot; (esri_geodatabase_module:gdbExportGeodatabaseToXMLDocument, Catalog)</summary>
			public static string esri_GDBRasterDatasetExportToXMLWorkspaceDocumentsButton {
				 get { return "esri_GDBRasterDatasetExportToXMLWorkspaceDocumentsButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class(es) To XML Workspace Document...&quot; (esri_geodatabase_module:gdbExportGeodatabaseToXMLDocument, Catalog)</summary>
			public static string esri_GDBFeatureClassesExportToXMLWorkspaceDocumentsButton {
				 get { return "esri_GDBFeatureClassesExportToXMLWorkspaceDocumentsButton"; }
			}
			///<summary>Returns the id string for &quot;Load Data&quot; (esri_geodatabase_module:gdbLoadDataToFeatureClassOrTable, Catalog)</summary>
			public static string esri_GDBFeatureClassAndTableLoadDataButton {
				 get { return "esri_GDBFeatureClassAndTableLoadDataButton"; }
			}
			///<summary>Returns the id string for &quot;Feature Class&quot; (esri_geodatabase_module:gdbLaunchCreateFeatureClassWizard, Catalog)</summary>
			public static string esri_GDBCreateFeatureClassButton {
				 get { return "esri_GDBCreateFeatureClassButton"; }
			}
			///<summary>Returns the id string for &quot;Table&quot; (esri_geodatabase_module:gdbLaunchCreateStandAloneTableWizard, Catalog)</summary>
			public static string esri_GDBCreateTableButton {
				 get { return "esri_GDBCreateTableButton"; }
			}
			///<summary>Returns the id string for &quot;Shapefile&quot; (esri_geoprocessing_module:Commands.gdbCreateShapeFile, Catalog)</summary>
			public static string esri_GDBShapeFileButton {
				 get { return "esri_GDBShapeFileButton"; }
			}
			///<summary>Returns the id string for &quot;GeoPackage&quot; (esri_geoprocessing_module:Commands.gdbCreateGeoPackage, Catalog)</summary>
			public static string esri_GDBCreateNewGeoPackageButton {
				 get { return "esri_GDBCreateNewGeoPackageButton"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (esri_geoprocessing_module:Commands.gdbCreateUnregisteredView, Catalog)</summary>
			public static string esri_GDBCreateDatabaseViewButton {
				 get { return "esri_GDBCreateDatabaseViewButton"; }
			}
			///<summary>Returns the id string for &quot;Relationship Class&quot; (esri_geoprocessing_module:Commands.gdbCreateRelationshipClass, Catalog)</summary>
			public static string esri_GDBCreateRelationshipClassButton {
				 get { return "esri_GDBCreateRelationshipClassButton"; }
			}
			///<summary>Returns the id string for &quot;Raster Dataset&quot; (esri_geoprocessing_module:Commands.gdbCreateRasterDataset, Catalog)</summary>
			public static string esri_GDBCreateRasterDatasetButton {
				 get { return "esri_GDBCreateRasterDatasetButton"; }
			}
			///<summary>Returns the id string for &quot;Mosaic Dataset&quot; (esri_geoprocessing_module:Commands.gdbCreateMosaicDataset, Catalog)</summary>
			public static string esri_GDBCreateMosaicDatasetButton {
				 get { return "esri_GDBCreateMosaicDatasetButton"; }
			}
			///<summary>Returns the id string for &quot;Locator&quot; (esri_geoprocessing_module:Commands.gdbCreateAddressLocator, Catalog)</summary>
			public static string esri_GDBCreateAddressLocatorButton {
				 get { return "esri_GDBCreateAddressLocatorButton"; }
			}
			///<summary>Returns the id string for &quot;Composite Locator&quot; (esri_geoprocessing_module:Commands.gdbCreateCompositeAddressLocator, Catalog)</summary>
			public static string esri_GDBCreateCompositeAddressLocatorButton {
				 get { return "esri_GDBCreateCompositeAddressLocatorButton"; }
			}
			///<summary>Returns the id string for &quot;Toolbox&quot; (esri_geoprocessing_module:Commands.NewToolbox, Catalog)</summary>
			public static string esri_GDBCreateNewToolboxButton {
				 get { return "esri_GDBCreateNewToolboxButton"; }
			}
			///<summary>Returns the id string for &quot;Toolbox&quot; (esri_geoprocessing_module:Commands.NewToolboxInFolder, Catalog)</summary>
			public static string esri_GDBCreateNewToolboxButtonInFolder {
				 get { return "esri_GDBCreateNewToolboxButtonInFolder"; }
			}
			///<summary>Returns the id string for &quot;SAModels&quot; (esri_samodels_module:Commands.NewSAModelsInFolder, Catalog)</summary>
			public static string esri_CreateSAModelButton {
				 get { return "esri_CreateSAModelButton"; }
			}
			///<summary>Returns the id string for &quot;Python Toolbox&quot; (esri_geoprocessing_module:Commands.NewPythonToolbox, Catalog)</summary>
			public static string esri_GDBCreateNewPythonToolboxButton {
				 get { return "esri_GDBCreateNewPythonToolboxButton"; }
			}
			///<summary>Returns the id string for &quot;Python Toolbox&quot; (esri_geoprocessing_module:Commands.NewPythonToolboxInFolder, Catalog)</summary>
			public static string esri_GDBCreateNewPythonToolboxButtonInFolder {
				 get { return "esri_GDBCreateNewPythonToolboxButtonInFolder"; }
			}
			///<summary>Returns the id string for &quot;File Geodatabase&quot; (CreateFileGeodatabaseCmd, Catalog)</summary>
			public static string esri_GDBCreateNewFileGeodatabaseButton {
				 get { return "esri_GDBCreateNewFileGeodatabaseButton"; }
			}
			///<summary>Returns the id string for &quot;LAS Dataset&quot; (CreateLasDatasetCmd, Catalog)</summary>
			public static string esri_GDBCreateNewLasDatasetButton {
				 get { return "esri_GDBCreateNewLasDatasetButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Framework.PasteCMD, Catalog)</summary>
			public static string esri_GDBPasteToFeatureDataset {
				 get { return "esri_GDBPasteToFeatureDataset"; }
			}
			///<summary>Returns the id string for &quot;Paste Special&quot; (esri_database_module:GDBPasteSpecial, Catalog)</summary>
			public static string esri_GDBPasteSpecialToFeatureDataset {
				 get { return "esri_GDBPasteSpecialToFeatureDataset"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Framework.PasteCMD, Catalog)</summary>
			public static string esri_GDBPasteToDatabase {
				 get { return "esri_GDBPasteToDatabase"; }
			}
			///<summary>Returns the id string for &quot;Paste Special&quot; (esri_database_module:GDBPasteSpecial, Catalog)</summary>
			public static string esri_GDBPasteSpecialToDatabase {
				 get { return "esri_GDBPasteSpecialToDatabase"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Framework.PasteCMD, Catalog)</summary>
			public static string esri_GDBPasteToWorkspace {
				 get { return "esri_GDBPasteToWorkspace"; }
			}
			///<summary>Returns the id string for &quot;Paste Special&quot; (esri_database_module:GDBPasteSpecial, Catalog)</summary>
			public static string esri_GDBPasteSpecialToWorkspace {
				 get { return "esri_GDBPasteSpecialToWorkspace"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Framework.PasteCMD, Catalog)</summary>
			public static string esri_GDBPasteToFolder {
				 get { return "esri_GDBPasteToFolder"; }
			}
			///<summary>Returns the id string for &quot;Add Diagram Template&quot; (esri_geoprocessing_module:Commands.gdbCreateDiagramTemplate, Catalog)</summary>
			public static string esri_GDBNewDiagramTemplate {
				 get { return "esri_GDBNewDiagramTemplate"; }
			}
			///<summary>Returns the id string for &quot;Alter Diagram Template&quot; (esri_geoprocessing_module:Commands.gdbAlterDiagramTemplate, Catalog)</summary>
			public static string esri_GDBAlterDiagramTemplate {
				 get { return "esri_GDBAlterDiagramTemplate"; }
			}
			///<summary>Returns the id string for &quot;Delete Diagram Template&quot; (esri_geoprocessing_module:Commands.gdbDeleteDiagramTemplate, Catalog)</summary>
			public static string esri_GDBDeleteDiagramTemplate {
				 get { return "esri_GDBDeleteDiagramTemplate"; }
			}
			///<summary>Returns the id string for &quot;Parcel Fabric&quot; (esri_geoprocessing_module:Commands.gdbCreateParcelDataset, Catalog)</summary>
			public static string esri_GDBCreateParcelFabricButton {
				 get { return "esri_GDBCreateParcelFabricButton"; }
			}
			///<summary>Returns the id string for &quot;Add Parcel Type&quot; (esri_geoprocessing_module:Commands.gdbAddParcelType, Catalog)</summary>
			public static string esri_GDBAddParcelTypeButton {
				 get { return "esri_GDBAddParcelTypeButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Parcel Type&quot; (esri_geoprocessing_module:Commands.gdbRemoveParcelType, Catalog)</summary>
			public static string esri_GDBRemoveParcelTypeButton {
				 get { return "esri_GDBRemoveParcelTypeButton"; }
			}
			///<summary>Returns the id string for &quot;Enable Parcel Topology&quot; (esri_geoprocessing_module:Commands.gdbEnableParcelTopology, Catalog)</summary>
			public static string esri_GDBEnableParcelTopologyButton {
				 get { return "esri_GDBEnableParcelTopologyButton"; }
			}
			///<summary>Returns the id string for &quot;Disable Parcel Topology&quot; (esri_geoprocessing_module:Commands.gdbDisableParcelTopology, Catalog)</summary>
			public static string esri_GDBDisableParcelTopologyButton {
				 get { return "esri_GDBDisableParcelTopologyButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_itemInfoAddToProjectButton {
				 get { return "esri_itemInfoAddToProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (esri_mapping:ShowLocatorProperties, Catalog)</summary>
			public static string esri_mapping_LocatorProperties {
				 get { return "esri_mapping_LocatorProperties"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (esri_mapping:ShowLocatorProperties, Catalog)</summary>
			public static string esri_mapping_LocatorEagleProperties {
				 get { return "esri_mapping_LocatorEagleProperties"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (esri_mapping:ShowLocatorProperties, Catalog)</summary>
			public static string esri_mapping_compositeLocatorProperties {
				 get { return "esri_mapping_compositeLocatorProperties"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (esri_mapping:ShowLocatorProperties, Catalog)</summary>
			public static string esri_mapping_portalLocatorProperties {
				 get { return "esri_mapping_portalLocatorProperties"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (esri_mapping:ShowLocatorProperties, Catalog)</summary>
			public static string esri_mapping_serverLocatorProperties {
				 get { return "esri_mapping_serverLocatorProperties"; }
			}
			///<summary>Returns the id string for &quot;Annotation Feature Class Properties&quot; (esri_mapping:ShowAnnotationFeatureClassDockPane, Catalog)</summary>
			public static string esri_mapping_annotationFeatureClassProperties {
				 get { return "esri_mapping_annotationFeatureClassProperties"; }
			}
			///<summary>Returns the id string for &quot;Dimension Feature Class Properties&quot; (esri_mapping:ShowAnnotationFeatureClassDockPane, Catalog)</summary>
			public static string esri_mapping_dimensionFeatureClassProperties {
				 get { return "esri_mapping_dimensionFeatureClassProperties"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_itemInfoAddPackageToProjectButton {
				 get { return "esri_itemInfoAddPackageToProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveFavorite, Catalog)</summary>
			public static string esri_removeFavoriteButton {
				 get { return "esri_removeFavoriteButton"; }
			}
			///<summary>Returns the id string for &quot;Make Default&quot; (esri_geodatabase_module:MakeFolderConnectionProjectItemDefault, Catalog)</summary>
			public static string esri_folderConnectionMakeDefaultButton {
				 get { return "esri_folderConnectionMakeDefaultButton"; }
			}
			///<summary>Returns the id string for &quot;Make Default&quot; (esri_geodatabase_module:MakeGeodatabaseProjectItemDefault, Catalog)</summary>
			public static string esri_GDBMakeDefaultButton {
				 get { return "esri_GDBMakeDefaultButton"; }
			}
			///<summary>Returns the id string for &quot;Connection Properties&quot; (esri_database_module:GetDatabaseConnectionProperties, Catalog)</summary>
			public static string esri_GDBDatabaseConnectionPropertiesButton {
				 get { return "esri_GDBDatabaseConnectionPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Connection Properties&quot; (esri_database_module:GetGeodatabaseConnectionProperties, Catalog)</summary>
			public static string esri_GDBGeoDatabaseConnectionPropertiesButton {
				 get { return "esri_GDBGeoDatabaseConnectionPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_database_module:GetDatabaseProperties, Catalog)</summary>
			public static string esri_DatabasePropertiesButton {
				 get { return "esri_DatabasePropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;View Metadata&quot; (ArcGIS.Desktop.Internal.Catalog.ViewMetadataButton, Catalog)</summary>
			public static string esri_projectItemViewMetadata {
				 get { return "esri_projectItemViewMetadata"; }
			}
			///<summary>Returns the id string for &quot;Edit Metadata&quot; (ArcGIS.Desktop.Internal.Catalog.EditMetadataButton, Catalog)</summary>
			public static string esri_projectItemEditMetadata {
				 get { return "esri_projectItemEditMetadata"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_database_module:EGDBDelete, Catalog)</summary>
			public static string esri_EGDBRemoveButton {
				 get { return "esri_EGDBRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_database_module:GetDatabaseProperties, Catalog)</summary>
			public static string esri_FileGDBPropertiesButton {
				 get { return "esri_FileGDBPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Add Parcel Type&quot; (esri_database_module:ParcelAddType, Catalog)</summary>
			public static string esri_projectAddParcelType {
				 get { return "esri_projectAddParcelType"; }
			}
			///<summary>Returns the id string for &quot;Import And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_mapItemMxdImportOpenButton {
				 get { return "esri_mapItemMxdImportOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Add And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_mapItemMAPXImportOpenButton {
				 get { return "esri_mapItemMAPXImportOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Add And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_layoutItemPAGXImportOpenButton {
				 get { return "esri_layoutItemPAGXImportOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Add And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_reportItemRPTXImportOpenButton {
				 get { return "esri_reportItemRPTXImportOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Add And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_taskItemTaskImportOpenButton {
				 get { return "esri_taskItemTaskImportOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Add And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_packageItemUnpackOpenButton {
				 get { return "esri_packageItemUnpackOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Add And Open&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_webMapItemAddToProjectButton {
				 get { return "esri_webMapItemAddToProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Open Notebook&quot; (esri_geoprocessing_module:Commands.OnOpenNotebook, Catalog)</summary>
			public static string esri_notebookOpenButton {
				 get { return "esri_notebookOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Download&quot; (esri_geodatabase_module:DownloadNotebook, Catalog)</summary>
			public static string esri_notebookDownloadButton {
				 get { return "esri_notebookDownloadButton"; }
			}
			///<summary>Returns the id string for &quot;Add Notebook&quot; (esri_geodatabase_module:AddExistingNotebook, Catalog)</summary>
			public static string esri_GDBAddExistingPythonNotebookButton {
				 get { return "esri_GDBAddExistingPythonNotebookButton"; }
			}
			///<summary>Returns the id string for &quot;New Notebook&quot; (esri_geodatabase_module:AddNotebookWithBrowser, Catalog)</summary>
			public static string esri_GDBCreateNewPythonNotebookButton {
				 get { return "esri_GDBCreateNewPythonNotebookButton"; }
			}
			///<summary>Returns the id string for &quot;Notebook&quot; (esri_geodatabase_module:AddNewNotebook, Catalog)</summary>
			public static string esri_GDBCreateNewPythonNotebookButtonInFolder {
				 get { return "esri_GDBCreateNewPythonNotebookButtonInFolder"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_projectItemAddToProjectButton {
				 get { return "esri_projectItemAddToProjectButton"; }
			}
			///<summary>Returns the id string for &quot;New File Geodatabase&quot; (esri_database_module:AddNewGeodatabase, Catalog)</summary>
			public static string esri_geodatabase_newGeoDatabaseButton {
				 get { return "esri_geodatabase_newGeoDatabaseButton"; }
			}
			///<summary>Returns the id string for &quot;New File Geodatabase&quot; (esri_database_module:AddNewGeodatabase, Catalog)</summary>
			public static string esri_geodatabase_newGeoDatabaseButton_contextMenu {
				 get { return "esri_geodatabase_newGeoDatabaseButton_contextMenu"; }
			}
			///<summary>Returns the id string for &quot;New File Geodatabase&quot; (esri_database_module:AddNewGeodatabaseToFavorites, Catalog)</summary>
			public static string esri_geodatabase_newGeoDatabaseToFavoritesButton {
				 get { return "esri_geodatabase_newGeoDatabaseToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;Add Database&quot; (esri_database_module:AddExistingGeodatabase, Catalog)</summary>
			public static string esri_geodatabase_existingGeoDatabaseButton {
				 get { return "esri_geodatabase_existingGeoDatabaseButton"; }
			}
			///<summary>Returns the id string for &quot;Add Database&quot; (esri_database_module:AddExistingGeodatabaseToFavorites, Catalog)</summary>
			public static string esri_geodatabase_existingGeoDatabaseToFavoritesButton {
				 get { return "esri_geodatabase_existingGeoDatabaseToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;New Database Connection&quot; (esri_geodatabase_module:AddDatabaseConnection, Catalog)</summary>
			public static string esri_geodatabase_databaseConnectionButton {
				 get { return "esri_geodatabase_databaseConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New Database Connection&quot; (esri_geodatabase_module:AddDatabaseConnection, Catalog)</summary>
			public static string esri_geodatabase_databaseConnectionButton_contextMenu {
				 get { return "esri_geodatabase_databaseConnectionButton_contextMenu"; }
			}
			///<summary>Returns the id string for &quot;New Database Connection&quot; (esri_geodatabase_module:AddDatabaseConnectionToFavorites, Catalog)</summary>
			public static string esri_geodatabase_databaseConnectionToFavoritesButton {
				 get { return "esri_geodatabase_databaseConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;Add Folder&quot; (AddFolderConnectionCmd, Catalog)</summary>
			public static string esri_geodatabase_addFolderConnectionButton {
				 get { return "esri_geodatabase_addFolderConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New Notebook&quot; (esri_geodatabase_module:AddNewNotebookItem, Catalog)</summary>
			public static string esri_layouts_AddNotebook {
				 get { return "esri_layouts_AddNotebook"; }
			}
			///<summary>Returns the id string for &quot;Add Folder&quot; (esri_geodatabase_module:AddFolderConnectionToFavorites, Catalog)</summary>
			public static string esri_geodatabase_addFolderConnectionToFavoritesButton {
				 get { return "esri_geodatabase_addFolderConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;Add Locator&quot; (esri_database_module:AddLocator, Catalog)</summary>
			public static string esri_geodatabase_addLocatorButton {
				 get { return "esri_geodatabase_addLocatorButton"; }
			}
			///<summary>Returns the id string for &quot;Refresh Locators&quot; (esri_database_module:RefreshLocators, Catalog)</summary>
			public static string esri_geodatabase_refreshLocatorsButton {
				 get { return "esri_geodatabase_refreshLocatorsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Server&quot; (esri_geodatabase_module:AddExistingServerConnection, Catalog)</summary>
			public static string esri_mapping_AddExistingServerConnectionButton {
				 get { return "esri_mapping_AddExistingServerConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;Add Server&quot; (esri_geodatabase_module:AddExistingServerConnectionToFavorites, Catalog)</summary>
			public static string esri_mapping_AddExistingServerConnectionToFavoritesButton {
				 get { return "esri_mapping_AddExistingServerConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;New ArcGIS Server&quot; (esri_geodatabase_module:AddAGSConnection, Catalog)</summary>
			public static string esri_mapping_AGSConnectionButton {
				 get { return "esri_mapping_AGSConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New ArcGIS Server&quot; (esri_geodatabase_module:AddAGSConnectionToFavorites, Catalog)</summary>
			public static string esri_mapping_AGSConnectionToFavoritesButton {
				 get { return "esri_mapping_AGSConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;New WCS Server&quot; (esri_geodatabase_module:AddWCSConnection, Catalog)</summary>
			public static string esri_mapping_WCSConnectionButton {
				 get { return "esri_mapping_WCSConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New WCS Server&quot; (esri_geodatabase_module:AddWCSConnectionToFavorites, Catalog)</summary>
			public static string esri_mapping_WCSConnectionToFavoritesButton {
				 get { return "esri_mapping_WCSConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;New WMS Server&quot; (esri_geodatabase_module:AddWMSConnection, Catalog)</summary>
			public static string esri_mapping_WMSConnectionButton {
				 get { return "esri_mapping_WMSConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New WFS Server&quot; (esri_geodatabase_module:AddWFSConnection, Catalog)</summary>
			public static string esri_mapping_WFSConnectionButton {
				 get { return "esri_mapping_WFSConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New WMS Server&quot; (esri_geodatabase_module:AddWMSConnectionToFavorites, Catalog)</summary>
			public static string esri_mapping_WMSConnectionToFavoritesButton {
				 get { return "esri_mapping_WMSConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;New WFS Server&quot; (esri_geodatabase_module:AddWFSConnectionToFavorites, Catalog)</summary>
			public static string esri_mapping_WFSConnectionToFavoritesButton {
				 get { return "esri_mapping_WFSConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;New WMTS Server&quot; (esri_geodatabase_module:AddWMTSConnection, Catalog)</summary>
			public static string esri_mapping_WMTSConnectionButton {
				 get { return "esri_mapping_WMTSConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;New WMTS Server&quot; (esri_geodatabase_module:AddWMTSConnectionToFavorites, Catalog)</summary>
			public static string esri_mapping_WMTSConnectionToFavoritesButton {
				 get { return "esri_mapping_WMTSConnectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;Add Statistical Data Collection&quot; (esri_geodatabase_module:AddExistingStatisticalDataCollectionToFavorites, Catalog)</summary>
			public static string esri_mapping_AddExistingStatisticalDataCollectionToFavoritesButton {
				 get { return "esri_mapping_AddExistingStatisticalDataCollectionToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_geodatabase_module:openDomainsView, Catalog)</summary>
			public static string esri_DomainsViewButton {
				 get { return "esri_DomainsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_geodatabase_module:openDomainsView, Catalog)</summary>
			public static string esri_WorkspaceDomainsViewButton {
				 get { return "esri_WorkspaceDomainsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (esri_geodatabase_module:openFieldsView, Catalog)</summary>
			public static string esri_FieldsViewButton {
				 get { return "esri_FieldsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (esri_geodatabase_module:openSubtypesView, Catalog)</summary>
			public static string esri_SubtypesViewButton {
				 get { return "esri_SubtypesViewButton"; }
			}
			///<summary>Returns the id string for &quot;Versions&quot; (esri_geodatabase_module:openVersionsView, Catalog)</summary>
			public static string esri_VersionsViewButton {
				 get { return "esri_VersionsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Manage Replicas&quot; (esri_geodatabase_module:gdbLaunchManageReplicasPane, Catalog)</summary>
			public static string esri_ReplicasViewButton {
				 get { return "esri_ReplicasViewButton"; }
			}
			///<summary>Returns the id string for &quot;Create Replica&quot; (esri_geodatabase_module:createReplica, Catalog)</summary>
			public static string esri_CreateReplicaButton {
				 get { return "esri_CreateReplicaButton"; }
			}
			///<summary>Returns the id string for &quot;Synchronize Changes&quot; (esri_geodatabase_module:synchronizeChanges, Catalog)</summary>
			public static string esri_SynchronizeReplicasButton {
				 get { return "esri_SynchronizeReplicasButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (esri_geodatabase_module:openAttributeRulesView, Catalog)</summary>
			public static string esri_AttributeRulesViewButton {
				 get { return "esri_AttributeRulesViewButton"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (esri_geodatabase_module:openContingentValuesView, Catalog)</summary>
			public static string esri_ContingentValueButton {
				 get { return "esri_ContingentValueButton"; }
			}
			///<summary>Returns the id string for &quot;Register As Versioned...&quot; (esri_geodatabase_module:registerAsVersioned, Catalog)</summary>
			public static string esri_RegisterAsVersionedButton {
				 get { return "esri_RegisterAsVersionedButton"; }
			}
			///<summary>Returns the id string for &quot;Unregister As Versioned&quot; (esri_geodatabase_module:unregisterAsVersioned, Catalog)</summary>
			public static string esri_UnregisterAsVersionedButton {
				 get { return "esri_UnregisterAsVersionedButton"; }
			}
			///<summary>Returns the id string for &quot;Enable Archiving&quot; (esri_geodatabase_module:enableArchiving, Catalog)</summary>
			public static string esri_EnableArchivingButton {
				 get { return "esri_EnableArchivingButton"; }
			}
			///<summary>Returns the id string for &quot;Disable Archiving&quot; (esri_geodatabase_module:disableArchiving, Catalog)</summary>
			public static string esri_DisableArchivingButton {
				 get { return "esri_DisableArchivingButton"; }
			}
			///<summary>Returns the id string for &quot;Enable Editor Tracking&quot; (esri_geodatabase_module:enableEditorTracking, Catalog)</summary>
			public static string esri_EnableEditorTrackingButton {
				 get { return "esri_EnableEditorTrackingButton"; }
			}
			///<summary>Returns the id string for &quot;Disable Editor Tracking&quot; (esri_geodatabase_module:disableEditorTracking, Catalog)</summary>
			public static string esri_DisableEditorTrackingButton {
				 get { return "esri_DisableEditorTrackingButton"; }
			}
			///<summary>Returns the id string for &quot;Enable Attachments&quot; (esri_geodatabase_module:enableAttachments, Catalog)</summary>
			public static string esri_EnableAttachmentsButton {
				 get { return "esri_EnableAttachmentsButton"; }
			}
			///<summary>Returns the id string for &quot;Disable Attachments&quot; (esri_geodatabase_module:disableAttachments, Catalog)</summary>
			public static string esri_DisableAttachementsButton {
				 get { return "esri_DisableAttachementsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Global IDs&quot; (esri_geodatabase_module:addGlobalIDs, Catalog)</summary>
			public static string esri_AddGlobalIDButton {
				 get { return "esri_AddGlobalIDButton"; }
			}
			///<summary>Returns the id string for &quot;Register with Geodatabase&quot; (esri_geodatabase_module:registerWithGdb, Catalog)</summary>
			public static string esri_RegisterWithGdbButton {
				 get { return "esri_RegisterWithGdbButton"; }
			}
			///<summary>Returns the id string for &quot;Privileges...&quot; (esri_geodatabase_module:managePrivileges, Catalog)</summary>
			public static string esri_PrivilegesButton {
				 get { return "esri_PrivilegesButton"; }
			}
			///<summary>Returns the id string for &quot;Compress&quot; (esri_geodatabase_module:compressFileGdb, Catalog)</summary>
			public static string esri_CompressFileGdbButton {
				 get { return "esri_CompressFileGdbButton"; }
			}
			///<summary>Returns the id string for &quot;Compact&quot; (esri_database_module:CompactFileGdb, Catalog)</summary>
			public static string esri_CompactFileGdbButton {
				 get { return "esri_CompactFileGdbButton"; }
			}
			///<summary>Returns the id string for &quot;Uncompress&quot; (esri_geodatabase_module:uncompressFileGdb, Catalog)</summary>
			public static string esri_UncompressFileGdbButton {
				 get { return "esri_UncompressFileGdbButton"; }
			}
			///<summary>Returns the id string for &quot;Compress&quot; (esri_geodatabase_module:compressFileGdb, Catalog)</summary>
			public static string esri_CompressFileGdbItemButton {
				 get { return "esri_CompressFileGdbItemButton"; }
			}
			///<summary>Returns the id string for &quot;Uncompress&quot; (esri_geodatabase_module:uncompressFileGdb, Catalog)</summary>
			public static string esri_UncompressFileGdbItemButton {
				 get { return "esri_UncompressFileGdbItemButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_mapping:AddOnlineStyle, Catalog)</summary>
			public static string esri_mapping_AddOnlineStyleButton {
				 get { return "esri_mapping_AddOnlineStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Open tool&quot; (esri_geoprocessing_module:Commands.OnOpenPortalTool, Catalog)</summary>
			public static string esri_geoprocessing_openSubTool {
				 get { return "esri_geoprocessing_openSubTool"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_geoprocessing_module:Commands.OnAddPortalPackageToProject, Catalog)</summary>
			public static string esri_geoprocessing_addPortalPackageToProject {
				 get { return "esri_geoprocessing_addPortalPackageToProject"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_core_module:AddProjectItem, Catalog)</summary>
			public static string esri_favoriteItemAddToProjectButton {
				 get { return "esri_favoriteItemAddToProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Add To New Projects&quot; (esri_core_module:AddItemToNewProjects, Catalog)</summary>
			public static string esri_favoriteItemAddToNewProjectsButton {
				 get { return "esri_favoriteItemAddToNewProjectsButton"; }
			}
			///<summary>Returns the id string for &quot;Add To New Projects&quot; (esri_core_module:RemoveFavoriteItemForNewProjects, Catalog)</summary>
			public static string esri_favoriteItemRemoveFromNewProjectButton {
				 get { return "esri_favoriteItemRemoveFromNewProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Scene Layer Package&quot; (LaunchCreateSceneLayerWizardCmd, Catalog)</summary>
			public static string esri_catalog_CreateSceneLayerPackageButton {
				 get { return "esri_catalog_CreateSceneLayerPackageButton"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Manage Replicas&quot; (ArcGIS.Desktop.Internal.Catalog.DistributedGeodatabase.ManageReplicas.ManageReplicasDockPaneViewModel, Catalog)</summary>
			public static string esri_geodatabase_ManageReplicasDockPane {
				 get { return "esri_geodatabase_ManageReplicasDockPane"; }
			}
			///<summary>Returns the id string for &quot;Create Feature Class&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.CreateFeatureClassDockPaneViewModel, Catalog)</summary>
			public static string esri_geodatabase_createFeatureClassDockPane {
				 get { return "esri_geodatabase_createFeatureClassDockPane"; }
			}
			///<summary>Returns the id string for &quot;Create Table&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateTable.CreateStandAloneTableDockPaneViewModel, Catalog)</summary>
			public static string esri_geodatabase_createTableDockPane {
				 get { return "esri_geodatabase_createTableDockPane"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Delete&quot; (GeoDatabaseModule+DeleteDynamicMenu, Catalog)</summary>
			public static string esri_projectItemDeleteDynamicMenu {
				 get { return "esri_projectItemDeleteDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Design Views&quot; (OpenDesignViewDynamicMenu, Catalog)</summary>
			public static string esri_projectItemOpenDesignViewMenu {
				 get { return "esri_projectItemOpenDesignViewMenu"; }
			}
			///<summary>Returns the id string for &quot;Domains View&quot; (OpenDesignViewDomainsDynamicMenu, Catalog)</summary>
			public static string esri_projectItemOpenDesignViewDomainsMenu {
				 get { return "esri_projectItemOpenDesignViewDomainsMenu"; }
			}
			///<summary>Returns the id string for &quot;Fields View&quot; (OpenDesignViewFieldsDynamicMenu, Catalog)</summary>
			public static string esri_projectItemOpenDesignViewFieldsMenu {
				 get { return "esri_projectItemOpenDesignViewFieldsMenu"; }
			}
			///<summary>Returns the id string for &quot;Subtypes View&quot; (OpenDesignViewSubtypesDynamicMenu, Catalog)</summary>
			public static string esri_projectItemOpenDesignViewSubtypesMenu {
				 get { return "esri_projectItemOpenDesignViewSubtypesMenu"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules View&quot; (OpenDesignViewAttributeRulesDynamicMenu, Catalog)</summary>
			public static string esri_projectItemOpenDesignViewAttributeRulesMenu {
				 get { return "esri_projectItemOpenDesignViewAttributeRulesMenu"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values View&quot; (OpenDesignViewContingentValuesDynamicMenu, Catalog)</summary>
			public static string esri_projectItemOpenDesignViewContingentValueMenu {
				 get { return "esri_projectItemOpenDesignViewContingentValueMenu"; }
			}
			///<summary>Returns the id string for &quot;Locators Menu&quot; (LocatorFileDynamicMenu, Catalog)</summary>
			public static string esri_projectItemLocatorsMenu {
				 get { return "esri_projectItemLocatorsMenu"; }
			}
			///<summary>Returns the id string for &quot;Add or Remove New Projects&quot; (OpenFavoritesPersistDynamicMenu, Catalog)</summary>
			public static string esri_favoritesItemPersistDynamicMenu {
				 get { return "esri_favoritesItemPersistDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Add or Remove New Projects&quot; (OpenFavoritesGeodatabasePropertyDynamicMenu, Catalog)</summary>
			public static string esri_favoritesGeodatabasePropertyMenu {
				 get { return "esri_favoritesGeodatabasePropertyMenu"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;Gallery&quot; (ArcGIS.Desktop.Catalog.LayerTemplateGalleryViewModel, Catalog)</summary>
			public static string esri_layerTemplateGallery {
				 get { return "esri_layerTemplateGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Layer Templates&quot; (Group, Catalog)</summary>
			public static string esri_project_layerTemplate {
				 get { return "esri_project_layerTemplate"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (Group, Catalog)</summary>
			public static string esri_core_Folders_Project {
				 get { return "esri_core_Folders_Project"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Group, Catalog)</summary>
			public static string esri_core_Folders_Group {
				 get { return "esri_core_Folders_Group"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (Group, Catalog)</summary>
			public static string esri_database_New {
				 get { return "esri_database_New"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Group, Catalog)</summary>
			public static string esri_database_Create_Group {
				 get { return "esri_database_Create_Group"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_geodatabase_serverConnectionContainer&quot; (ArcGIS.Desktop.Internal.Catalog.ServerConnectionContainer, Catalog)</summary>
			public static string esri_geodatabase_serverConnectionContainer {
				 get { return "esri_geodatabase_serverConnectionContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_cloudStorageConnectionContainer&quot; (ArcGIS.Desktop.Internal.Catalog.CloudStorageConnectionContainer, Catalog)</summary>
			public static string esri_geodatabase_cloudStorageConnectionContainer {
				 get { return "esri_geodatabase_cloudStorageConnectionContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_statisticalDataCollectionContainer&quot; (ArcGIS.Desktop.Internal.Catalog.StatisticalDataCollectionContainer, Catalog)</summary>
			public static string esri_geodatabase_statisticalDataCollectionContainer {
				 get { return "esri_geodatabase_statisticalDataCollectionContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_targetMarketingContainer&quot; (ArcGIS.Desktop.Internal.Catalog.TargetMarketingContainer, Catalog)</summary>
			public static string esri_geodatabase_targetMarketingContainer {
				 get { return "esri_geodatabase_targetMarketingContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_huffModelContainer&quot; (ArcGIS.Desktop.Internal.Catalog.HuffModelContainer, Catalog)</summary>
			public static string esri_geodatabase_huffModelContainer {
				 get { return "esri_geodatabase_huffModelContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_businessAnalystContainer&quot; (ArcGIS.Desktop.Internal.Catalog.BusinessAnalystContainer, Catalog)</summary>
			public static string esri_geodatabase_businessAnalystContainer {
				 get { return "esri_geodatabase_businessAnalystContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_locatorsContainer&quot; (ArcGIS.Desktop.Internal.Catalog.LocatorsConnectionContainer, Catalog)</summary>
			public static string esri_geodatabase_locatorsContainer {
				 get { return "esri_geodatabase_locatorsContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_findProviderSettingsContainer&quot; (ArcGIS.Desktop.Internal.Catalog.FindProviderSettingsContainer, Catalog)</summary>
			public static string esri_geodatabase_findProviderSettingsContainer {
				 get { return "esri_geodatabase_findProviderSettingsContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_Online&quot; (ArcGIS.Desktop.Internal.Catalog.OnlinePlaces, Catalog)</summary>
			public static string esri_browsePlaces_Online {
				 get { return "esri_browsePlaces_Online"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_Online_UserContent&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectEmptyProvider, Catalog)</summary>
			public static string esri_browsePlaces_Online_UserContent {
				 get { return "esri_browsePlaces_Online_UserContent"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_Online_UserGroups&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectEmptyProvider, Catalog)</summary>
			public static string esri_browsePlaces_Online_UserGroups {
				 get { return "esri_browsePlaces_Online_UserGroups"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_Online_FeaturedItems&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectEmptyProvider, Catalog)</summary>
			public static string esri_browsePlaces_Online_FeaturedItems {
				 get { return "esri_browsePlaces_Online_FeaturedItems"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_Online_LivingAtlas&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectEmptyProvider, Catalog)</summary>
			public static string esri_browsePlaces_Online_LivingAtlas {
				 get { return "esri_browsePlaces_Online_LivingAtlas"; }
			}
			///<summary>Returns the id string for &quot;esri_core_itemCategory_dataSet&quot; (ArcGIS.Desktop.Catalog.ItemCategoryDataSet, Catalog)</summary>
			public static string esri_core_itemCategory_dataSet {
				 get { return "esri_core_itemCategory_dataSet"; }
			}
			///<summary>Returns the id string for &quot;esri_core_itemCategory_dataStore&quot; (ArcGIS.Desktop.Catalog.ItemCategoryDataStore, Catalog)</summary>
			public static string esri_core_itemCategory_dataStore {
				 get { return "esri_core_itemCategory_dataStore"; }
			}
			///<summary>Returns the id string for &quot;acs_cloudStorageFolder&quot; (Component, Catalog)</summary>
			public static string acs_cloudStorageFolder {
				 get { return "acs_cloudStorageFolder"; }
			}
			///<summary>Returns the id string for &quot;ags_serverFolder&quot; (Component, Catalog)</summary>
			public static string ags_serverFolder {
				 get { return "ags_serverFolder"; }
			}
			///<summary>Returns the id string for &quot;bimfile_dataset&quot; (Component, Catalog)</summary>
			public static string bimfile_dataset {
				 get { return "bimfile_dataset"; }
			}
			///<summary>Returns the id string for &quot;bimfile_featureclass_multipatch&quot; (Component, Catalog)</summary>
			public static string bimfile_featureclass_multipatch {
				 get { return "bimfile_featureclass_multipatch"; }
			}
			///<summary>Returns the id string for &quot;bimfile_featureclass_point&quot; (Component, Catalog)</summary>
			public static string bimfile_featureclass_point {
				 get { return "bimfile_featureclass_point"; }
			}
			///<summary>Returns the id string for &quot;bimfile_workspace&quot; (Component, Catalog)</summary>
			public static string bimfile_workspace {
				 get { return "bimfile_workspace"; }
			}
			///<summary>Returns the id string for &quot;cad_dataset&quot; (Component, Catalog)</summary>
			public static string cad_dataset {
				 get { return "cad_dataset"; }
			}
			///<summary>Returns the id string for &quot;cad_dataset_dgn&quot; (Component, Catalog)</summary>
			public static string cad_dataset_dgn {
				 get { return "cad_dataset_dgn"; }
			}
			///<summary>Returns the id string for &quot;cad_dataset_dwg&quot; (Component, Catalog)</summary>
			public static string cad_dataset_dwg {
				 get { return "cad_dataset_dwg"; }
			}
			///<summary>Returns the id string for &quot;cad_dataset_dxf&quot; (Component, Catalog)</summary>
			public static string cad_dataset_dxf {
				 get { return "cad_dataset_dxf"; }
			}
			///<summary>Returns the id string for &quot;cad_fc_annotation&quot; (Component, Catalog)</summary>
			public static string cad_fc_annotation {
				 get { return "cad_fc_annotation"; }
			}
			///<summary>Returns the id string for &quot;cad_fc_multipatch&quot; (Component, Catalog)</summary>
			public static string cad_fc_multipatch {
				 get { return "cad_fc_multipatch"; }
			}
			///<summary>Returns the id string for &quot;cad_fc_point&quot; (Component, Catalog)</summary>
			public static string cad_fc_point {
				 get { return "cad_fc_point"; }
			}
			///<summary>Returns the id string for &quot;cad_fc_polygon&quot; (Component, Catalog)</summary>
			public static string cad_fc_polygon {
				 get { return "cad_fc_polygon"; }
			}
			///<summary>Returns the id string for &quot;cad_fc_polyline&quot; (Component, Catalog)</summary>
			public static string cad_fc_polyline {
				 get { return "cad_fc_polyline"; }
			}
			///<summary>Returns the id string for &quot;cim_layer&quot; (Component, Catalog)</summary>
			public static string cim_layer {
				 get { return "cim_layer"; }
			}
			///<summary>Returns the id string for &quot;cim_layout&quot; (Component, Catalog)</summary>
			public static string cim_layout {
				 get { return "cim_layout"; }
			}
			///<summary>Returns the id string for &quot;cim_map_basemap&quot; (Component, Catalog)</summary>
			public static string cim_map_basemap {
				 get { return "cim_map_basemap"; }
			}
			///<summary>Returns the id string for &quot;cim_map_globe&quot; (Component, Catalog)</summary>
			public static string cim_map_globe {
				 get { return "cim_map_globe"; }
			}
			///<summary>Returns the id string for &quot;cim_map_map&quot; (Component, Catalog)</summary>
			public static string cim_map_map {
				 get { return "cim_map_map"; }
			}
			///<summary>Returns the id string for &quot;cim_map_scene&quot; (Component, Catalog)</summary>
			public static string cim_map_scene {
				 get { return "cim_map_scene"; }
			}
			///<summary>Returns the id string for &quot;cim_map_stereo&quot; (Component, Catalog)</summary>
			public static string cim_map_stereo {
				 get { return "cim_map_stereo"; }
			}
			///<summary>Returns the id string for &quot;cim_standalonetable&quot; (Component, Catalog)</summary>
			public static string cim_standalonetable {
				 get { return "cim_standalonetable"; }
			}
			///<summary>Returns the id string for &quot;cim_wks_egdb&quot; (Component, Catalog)</summary>
			public static string cim_wks_egdb {
				 get { return "cim_wks_egdb"; }
			}
			///<summary>Returns the id string for &quot;cloudStorageConnection_acs&quot; (Component, Catalog)</summary>
			public static string cloudStorageConnection_acs {
				 get { return "cloudStorageConnection_acs"; }
			}
			///<summary>Returns the id string for &quot;core_style&quot; (Component, Catalog)</summary>
			public static string core_style {
				 get { return "core_style"; }
			}
			///<summary>Returns the id string for &quot;database_egdb&quot; (Component, Catalog)</summary>
			public static string database_egdb {
				 get { return "database_egdb"; }
			}
			///<summary>Returns the id string for &quot;database_excel&quot; (Component, Catalog)</summary>
			public static string database_excel {
				 get { return "database_excel"; }
			}
			///<summary>Returns the id string for &quot;database_fgdb&quot; (Component, Catalog)</summary>
			public static string database_fgdb {
				 get { return "database_fgdb"; }
			}
			///<summary>Returns the id string for &quot;database_mgdb&quot; (Component, Catalog)</summary>
			public static string database_mgdb {
				 get { return "database_mgdb"; }
			}
			///<summary>Returns the id string for &quot;database_sqlite&quot; (Component, Catalog)</summary>
			public static string database_sqlite {
				 get { return "database_sqlite"; }
			}
			///<summary>Returns the id string for &quot;dataset_egdb&quot; (Component, Catalog)</summary>
			public static string dataset_egdb {
				 get { return "dataset_egdb"; }
			}
			///<summary>Returns the id string for &quot;dataset_fgdb&quot; (Component, Catalog)</summary>
			public static string dataset_fgdb {
				 get { return "dataset_fgdb"; }
			}
			///<summary>Returns the id string for &quot;dataset_mgdb&quot; (Component, Catalog)</summary>
			public static string dataset_mgdb {
				 get { return "dataset_mgdb"; }
			}
			///<summary>Returns the id string for &quot;egdb_cadastral&quot; (Component, Catalog)</summary>
			public static string egdb_cadastral {
				 get { return "egdb_cadastral"; }
			}
			///<summary>Returns the id string for &quot;egdb_diagram_dataset&quot; (Component, Catalog)</summary>
			public static string egdb_diagram_dataset {
				 get { return "egdb_diagram_dataset"; }
			}
			///<summary>Returns the id string for &quot;egdb_facility_network&quot; (Component, Catalog)</summary>
			public static string egdb_facility_network {
				 get { return "egdb_facility_network"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_annotation&quot; (Component, Catalog)</summary>
			public static string egdb_fc_annotation {
				 get { return "egdb_fc_annotation"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_dimension&quot; (Component, Catalog)</summary>
			public static string egdb_fc_dimension {
				 get { return "egdb_fc_dimension"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_general&quot; (Component, Catalog)</summary>
			public static string egdb_fc_general {
				 get { return "egdb_fc_general"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_line&quot; (Component, Catalog)</summary>
			public static string egdb_fc_line {
				 get { return "egdb_fc_line"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_multipatch&quot; (Component, Catalog)</summary>
			public static string egdb_fc_multipatch {
				 get { return "egdb_fc_multipatch"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_multipoint&quot; (Component, Catalog)</summary>
			public static string egdb_fc_multipoint {
				 get { return "egdb_fc_multipoint"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_point&quot; (Component, Catalog)</summary>
			public static string egdb_fc_point {
				 get { return "egdb_fc_point"; }
			}
			///<summary>Returns the id string for &quot;egdb_fc_polygon&quot; (Component, Catalog)</summary>
			public static string egdb_fc_polygon {
				 get { return "egdb_fc_polygon"; }
			}
			///<summary>Returns the id string for &quot;egdb_gn&quot; (Component, Catalog)</summary>
			public static string egdb_gn {
				 get { return "egdb_gn"; }
			}
			///<summary>Returns the id string for &quot;egdb_network&quot; (Component, Catalog)</summary>
			public static string egdb_network {
				 get { return "egdb_network"; }
			}
			///<summary>Returns the id string for &quot;egdb_network_diagram&quot; (Component, Catalog)</summary>
			public static string egdb_network_diagram {
				 get { return "egdb_network_diagram"; }
			}
			///<summary>Returns the id string for &quot;egdb_parcel_dataset&quot; (Component, Catalog)</summary>
			public static string egdb_parcel_dataset {
				 get { return "egdb_parcel_dataset"; }
			}
			///<summary>Returns the id string for &quot;egdb_relationship&quot; (Component, Catalog)</summary>
			public static string egdb_relationship {
				 get { return "egdb_relationship"; }
			}
			///<summary>Returns the id string for &quot;egdb_table&quot; (Component, Catalog)</summary>
			public static string egdb_table {
				 get { return "egdb_table"; }
			}
			///<summary>Returns the id string for &quot;egdb_terrain&quot; (Component, Catalog)</summary>
			public static string egdb_terrain {
				 get { return "egdb_terrain"; }
			}
			///<summary>Returns the id string for &quot;egdb_topology&quot; (Component, Catalog)</summary>
			public static string egdb_topology {
				 get { return "egdb_topology"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_Computer&quot; (Component, Catalog)</summary>
			public static string esri_browsePlaces_Computer {
				 get { return "esri_browsePlaces_Computer"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_OnlineLivingAtlasPlace&quot; (Component, Catalog)</summary>
			public static string esri_browsePlaces_OnlineLivingAtlasPlace {
				 get { return "esri_browsePlaces_OnlineLivingAtlasPlace"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces_OnlineSearch&quot; (Component, Catalog)</summary>
			public static string esri_browsePlaces_OnlineSearch {
				 get { return "esri_browsePlaces_OnlineSearch"; }
			}
			///<summary>Returns the id string for &quot;excel_table&quot; (Component, Catalog)</summary>
			public static string excel_table {
				 get { return "excel_table"; }
			}
			///<summary>Returns the id string for &quot;fgdb_cadastral&quot; (Component, Catalog)</summary>
			public static string fgdb_cadastral {
				 get { return "fgdb_cadastral"; }
			}
			///<summary>Returns the id string for &quot;fgdb_diagram_dataset&quot; (Component, Catalog)</summary>
			public static string fgdb_diagram_dataset {
				 get { return "fgdb_diagram_dataset"; }
			}
			///<summary>Returns the id string for &quot;fgdb_facility_network&quot; (Component, Catalog)</summary>
			public static string fgdb_facility_network {
				 get { return "fgdb_facility_network"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_annotation&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_annotation {
				 get { return "fgdb_fc_annotation"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_dimension&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_dimension {
				 get { return "fgdb_fc_dimension"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_general&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_general {
				 get { return "fgdb_fc_general"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_line&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_line {
				 get { return "fgdb_fc_line"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_multipatch&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_multipatch {
				 get { return "fgdb_fc_multipatch"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_multipoint&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_multipoint {
				 get { return "fgdb_fc_multipoint"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_point&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_point {
				 get { return "fgdb_fc_point"; }
			}
			///<summary>Returns the id string for &quot;fgdb_fc_polygon&quot; (Component, Catalog)</summary>
			public static string fgdb_fc_polygon {
				 get { return "fgdb_fc_polygon"; }
			}
			///<summary>Returns the id string for &quot;fgdb_gn&quot; (Component, Catalog)</summary>
			public static string fgdb_gn {
				 get { return "fgdb_gn"; }
			}
			///<summary>Returns the id string for &quot;fgdb_network&quot; (Component, Catalog)</summary>
			public static string fgdb_network {
				 get { return "fgdb_network"; }
			}
			///<summary>Returns the id string for &quot;fgdb_network_diagram&quot; (Component, Catalog)</summary>
			public static string fgdb_network_diagram {
				 get { return "fgdb_network_diagram"; }
			}
			///<summary>Returns the id string for &quot;fgdb_parcel_dataset&quot; (Component, Catalog)</summary>
			public static string fgdb_parcel_dataset {
				 get { return "fgdb_parcel_dataset"; }
			}
			///<summary>Returns the id string for &quot;fgdb_relationship&quot; (Component, Catalog)</summary>
			public static string fgdb_relationship {
				 get { return "fgdb_relationship"; }
			}
			///<summary>Returns the id string for &quot;fgdb_table&quot; (Component, Catalog)</summary>
			public static string fgdb_table {
				 get { return "fgdb_table"; }
			}
			///<summary>Returns the id string for &quot;fgdb_terrain&quot; (Component, Catalog)</summary>
			public static string fgdb_terrain {
				 get { return "fgdb_terrain"; }
			}
			///<summary>Returns the id string for &quot;fgdb_topology&quot; (Component, Catalog)</summary>
			public static string fgdb_topology {
				 get { return "fgdb_topology"; }
			}
			///<summary>Returns the id string for &quot;file_3ds&quot; (Component, Catalog)</summary>
			public static string file_3ds {
				 get { return "file_3ds"; }
			}
			///<summary>Returns the id string for &quot;file_aprx&quot; (Component, Catalog)</summary>
			public static string file_aprx {
				 get { return "file_aprx"; }
			}
			///<summary>Returns the id string for &quot;file_aptx&quot; (Component, Catalog)</summary>
			public static string file_aptx {
				 get { return "file_aptx"; }
			}
			///<summary>Returns the id string for &quot;file_avi&quot; (Component, Catalog)</summary>
			public static string file_avi {
				 get { return "file_avi"; }
			}
			///<summary>Returns the id string for &quot;file_bat&quot; (Component, Catalog)</summary>
			public static string file_bat {
				 get { return "file_bat"; }
			}
			///<summary>Returns the id string for &quot;file_cal&quot; (Component, Catalog)</summary>
			public static string file_cal {
				 get { return "file_cal"; }
			}
			///<summary>Returns the id string for &quot;file_clr&quot; (Component, Catalog)</summary>
			public static string file_clr {
				 get { return "file_clr"; }
			}
			///<summary>Returns the id string for &quot;file_cmd&quot; (Component, Catalog)</summary>
			public static string file_cmd {
				 get { return "file_cmd"; }
			}
			///<summary>Returns the id string for &quot;file_com&quot; (Component, Catalog)</summary>
			public static string file_com {
				 get { return "file_com"; }
			}
			///<summary>Returns the id string for &quot;file_dae&quot; (Component, Catalog)</summary>
			public static string file_dae {
				 get { return "file_dae"; }
			}
			///<summary>Returns the id string for &quot;file_dic&quot; (Component, Catalog)</summary>
			public static string file_dic {
				 get { return "file_dic"; }
			}
			///<summary>Returns the id string for &quot;file_eat&quot; (Component, Catalog)</summary>
			public static string file_eat {
				 get { return "file_eat"; }
			}
			///<summary>Returns the id string for &quot;file_emf&quot; (Component, Catalog)</summary>
			public static string file_emf {
				 get { return "file_emf"; }
			}
			///<summary>Returns the id string for &quot;file_esriTask&quot; (Component, Catalog)</summary>
			public static string file_esriTask {
				 get { return "file_esriTask"; }
			}
			///<summary>Returns the id string for &quot;file_exe&quot; (Component, Catalog)</summary>
			public static string file_exe {
				 get { return "file_exe"; }
			}
			///<summary>Returns the id string for &quot;file_fdp&quot; (Component, Catalog)</summary>
			public static string file_fdp {
				 get { return "file_fdp"; }
			}
			///<summary>Returns the id string for &quot;file_flt&quot; (Component, Catalog)</summary>
			public static string file_flt {
				 get { return "file_flt"; }
			}
			///<summary>Returns the id string for &quot;file_fmw&quot; (Component, Catalog)</summary>
			public static string file_fmw {
				 get { return "file_fmw"; }
			}
			///<summary>Returns the id string for &quot;file_general&quot; (Component, Catalog)</summary>
			public static string file_general {
				 get { return "file_general"; }
			}
			///<summary>Returns the id string for &quot;file_geojson&quot; (Component, Catalog)</summary>
			public static string file_geojson {
				 get { return "file_geojson"; }
			}
			///<summary>Returns the id string for &quot;file_glb&quot; (Component, Catalog)</summary>
			public static string file_glb {
				 get { return "file_glb"; }
			}
			///<summary>Returns the id string for &quot;file_gltf&quot; (Component, Catalog)</summary>
			public static string file_gltf {
				 get { return "file_gltf"; }
			}
			///<summary>Returns the id string for &quot;file_gpx&quot; (Component, Catalog)</summary>
			public static string file_gpx {
				 get { return "file_gpx"; }
			}
			///<summary>Returns the id string for &quot;file_gsg&quot; (Component, Catalog)</summary>
			public static string file_gsg {
				 get { return "file_gsg"; }
			}
			///<summary>Returns the id string for &quot;file_h264&quot; (Component, Catalog)</summary>
			public static string file_h264 {
				 get { return "file_h264"; }
			}
			///<summary>Returns the id string for &quot;file_html&quot; (Component, Catalog)</summary>
			public static string file_html {
				 get { return "file_html"; }
			}
			///<summary>Returns the id string for &quot;file_ipynb&quot; (Component, Catalog)</summary>
			public static string file_ipynb {
				 get { return "file_ipynb"; }
			}
			///<summary>Returns the id string for &quot;file_json&quot; (Component, Catalog)</summary>
			public static string file_json {
				 get { return "file_json"; }
			}
			///<summary>Returns the id string for &quot;file_kml&quot; (Component, Catalog)</summary>
			public static string file_kml {
				 get { return "file_kml"; }
			}
			///<summary>Returns the id string for &quot;file_kmz&quot; (Component, Catalog)</summary>
			public static string file_kmz {
				 get { return "file_kmz"; }
			}
			///<summary>Returns the id string for &quot;file_las&quot; (Component, Catalog)</summary>
			public static string file_las {
				 get { return "file_las"; }
			}
			///<summary>Returns the id string for &quot;file_lasd&quot; (Component, Catalog)</summary>
			public static string file_lasd {
				 get { return "file_lasd"; }
			}
			///<summary>Returns the id string for &quot;file_laz&quot; (Component, Catalog)</summary>
			public static string file_laz {
				 get { return "file_laz"; }
			}
			///<summary>Returns the id string for &quot;file_lpk&quot; (Component, Catalog)</summary>
			public static string file_lpk {
				 get { return "file_lpk"; }
			}
			///<summary>Returns the id string for &quot;file_lpk_schema&quot; (Component, Catalog)</summary>
			public static string file_lpk_schema {
				 get { return "file_lpk_schema"; }
			}
			///<summary>Returns the id string for &quot;file_lpkx&quot; (Component, Catalog)</summary>
			public static string file_lpkx {
				 get { return "file_lpkx"; }
			}
			///<summary>Returns the id string for &quot;file_lpkx_schema&quot; (Component, Catalog)</summary>
			public static string file_lpkx_schema {
				 get { return "file_lpkx_schema"; }
			}
			///<summary>Returns the id string for &quot;file_lxp&quot; (Component, Catalog)</summary>
			public static string file_lxp {
				 get { return "file_lxp"; }
			}
			///<summary>Returns the id string for &quot;file_lyrx&quot; (Component, Catalog)</summary>
			public static string file_lyrx {
				 get { return "file_lyrx"; }
			}
			///<summary>Returns the id string for &quot;file_m21&quot; (Component, Catalog)</summary>
			public static string file_m21 {
				 get { return "file_m21"; }
			}
			///<summary>Returns the id string for &quot;file_mkv&quot; (Component, Catalog)</summary>
			public static string file_mkv {
				 get { return "file_mkv"; }
			}
			///<summary>Returns the id string for &quot;file_mov&quot; (Component, Catalog)</summary>
			public static string file_mov {
				 get { return "file_mov"; }
			}
			///<summary>Returns the id string for &quot;file_mp2&quot; (Component, Catalog)</summary>
			public static string file_mp2 {
				 get { return "file_mp2"; }
			}
			///<summary>Returns the id string for &quot;file_mp4&quot; (Component, Catalog)</summary>
			public static string file_mp4 {
				 get { return "file_mp4"; }
			}
			///<summary>Returns the id string for &quot;file_mpeg&quot; (Component, Catalog)</summary>
			public static string file_mpeg {
				 get { return "file_mpeg"; }
			}
			///<summary>Returns the id string for &quot;file_mpeg2&quot; (Component, Catalog)</summary>
			public static string file_mpeg2 {
				 get { return "file_mpeg2"; }
			}
			///<summary>Returns the id string for &quot;file_mpeg4&quot; (Component, Catalog)</summary>
			public static string file_mpeg4 {
				 get { return "file_mpeg4"; }
			}
			///<summary>Returns the id string for &quot;file_mpeg-4&quot; (Component, Catalog)</summary>
			public static string file_mpeg_4 {
				 get { return "file_mpeg-4"; }
			}
			///<summary>Returns the id string for &quot;file_mpg&quot; (Component, Catalog)</summary>
			public static string file_mpg {
				 get { return "file_mpg"; }
			}
			///<summary>Returns the id string for &quot;file_mpg2&quot; (Component, Catalog)</summary>
			public static string file_mpg2 {
				 get { return "file_mpg2"; }
			}
			///<summary>Returns the id string for &quot;file_mpg4&quot; (Component, Catalog)</summary>
			public static string file_mpg4 {
				 get { return "file_mpg4"; }
			}
			///<summary>Returns the id string for &quot;file_mt2s&quot; (Component, Catalog)</summary>
			public static string file_mt2s {
				 get { return "file_mt2s"; }
			}
			///<summary>Returns the id string for &quot;file_netcdf&quot; (Component, Catalog)</summary>
			public static string file_netcdf {
				 get { return "file_netcdf"; }
			}
			///<summary>Returns the id string for &quot;file_obj&quot; (Component, Catalog)</summary>
			public static string file_obj {
				 get { return "file_obj"; }
			}
			///<summary>Returns the id string for &quot;file_oic&quot; (Component, Catalog)</summary>
			public static string file_oic {
				 get { return "file_oic"; }
			}
			///<summary>Returns the id string for &quot;file_osgb&quot; (Component, Catalog)</summary>
			public static string file_osgb {
				 get { return "file_osgb"; }
			}
			///<summary>Returns the id string for &quot;file_pdf&quot; (Component, Catalog)</summary>
			public static string file_pdf {
				 get { return "file_pdf"; }
			}
			///<summary>Returns the id string for &quot;file_ppkx&quot; (Component, Catalog)</summary>
			public static string file_ppkx {
				 get { return "file_ppkx"; }
			}
			///<summary>Returns the id string for &quot;file_ps&quot; (Component, Catalog)</summary>
			public static string file_ps {
				 get { return "file_ps"; }
			}
			///<summary>Returns the id string for &quot;file_py&quot; (Component, Catalog)</summary>
			public static string file_py {
				 get { return "file_py"; }
			}
			///<summary>Returns the id string for &quot;file_r_stats&quot; (Component, Catalog)</summary>
			public static string file_r_stats {
				 get { return "file_r_stats"; }
			}
			///<summary>Returns the id string for &quot;file_rfm&quot; (Component, Catalog)</summary>
			public static string file_rfm {
				 get { return "file_rfm"; }
			}
			///<summary>Returns the id string for &quot;file_rmp&quot; (Component, Catalog)</summary>
			public static string file_rmp {
				 get { return "file_rmp"; }
			}
			///<summary>Returns the id string for &quot;file_rpk&quot; (Component, Catalog)</summary>
			public static string file_rpk {
				 get { return "file_rpk"; }
			}
			///<summary>Returns the id string for &quot;file_rul&quot; (Component, Catalog)</summary>
			public static string file_rul {
				 get { return "file_rul"; }
			}
			///<summary>Returns the id string for &quot;file_skp&quot; (Component, Catalog)</summary>
			public static string file_skp {
				 get { return "file_skp"; }
			}
			///<summary>Returns the id string for &quot;file_spk&quot; (Component, Catalog)</summary>
			public static string file_spk {
				 get { return "file_spk"; }
			}
			///<summary>Returns the id string for &quot;file_style&quot; (Component, Catalog)</summary>
			public static string file_style {
				 get { return "file_style"; }
			}
			///<summary>Returns the id string for &quot;file_stylx&quot; (Component, Catalog)</summary>
			public static string file_stylx {
				 get { return "file_stylx"; }
			}
			///<summary>Returns the id string for &quot;file_svg&quot; (Component, Catalog)</summary>
			public static string file_svg {
				 get { return "file_svg"; }
			}
			///<summary>Returns the id string for &quot;file_swm&quot; (Component, Catalog)</summary>
			public static string file_swm {
				 get { return "file_swm"; }
			}
			///<summary>Returns the id string for &quot;file_tpk&quot; (Component, Catalog)</summary>
			public static string file_tpk {
				 get { return "file_tpk"; }
			}
			///<summary>Returns the id string for &quot;file_tpkx&quot; (Component, Catalog)</summary>
			public static string file_tpkx {
				 get { return "file_tpkx"; }
			}
			///<summary>Returns the id string for &quot;file_ts&quot; (Component, Catalog)</summary>
			public static string file_ts {
				 get { return "file_ts"; }
			}
			///<summary>Returns the id string for &quot;file_vtpk&quot; (Component, Catalog)</summary>
			public static string file_vtpk {
				 get { return "file_vtpk"; }
			}
			///<summary>Returns the id string for &quot;file_wld&quot; (Component, Catalog)</summary>
			public static string file_wld {
				 get { return "file_wld"; }
			}
			///<summary>Returns the id string for &quot;file_wld3&quot; (Component, Catalog)</summary>
			public static string file_wld3 {
				 get { return "file_wld3"; }
			}
			///<summary>Returns the id string for &quot;file_wrl&quot; (Component, Catalog)</summary>
			public static string file_wrl {
				 get { return "file_wrl"; }
			}
			///<summary>Returns the id string for &quot;file_xslt&quot; (Component, Catalog)</summary>
			public static string file_xslt {
				 get { return "file_xslt"; }
			}
			///<summary>Returns the id string for &quot;file_zip&quot; (Component, Catalog)</summary>
			public static string file_zip {
				 get { return "file_zip"; }
			}
			///<summary>Returns the id string for &quot;folder_general&quot; (Component, Catalog)</summary>
			public static string folder_general {
				 get { return "folder_general"; }
			}
			///<summary>Returns the id string for &quot;geoprocessing_gpk&quot; (Component, Catalog)</summary>
			public static string geoprocessing_gpk {
				 get { return "geoprocessing_gpk"; }
			}
			///<summary>Returns the id string for &quot;geoprocessing_gpkx&quot; (Component, Catalog)</summary>
			public static string geoprocessing_gpkx {
				 get { return "geoprocessing_gpkx"; }
			}
			///<summary>Returns the id string for &quot;layer_feature&quot; (Component, Catalog)</summary>
			public static string layer_feature {
				 get { return "layer_feature"; }
			}
			///<summary>Returns the id string for &quot;layer_general&quot; (Component, Catalog)</summary>
			public static string layer_general {
				 get { return "layer_general"; }
			}
			///<summary>Returns the id string for &quot;layer_globe&quot; (Component, Catalog)</summary>
			public static string layer_globe {
				 get { return "layer_globe"; }
			}
			///<summary>Returns the id string for &quot;layer_nmc&quot; (Component, Catalog)</summary>
			public static string layer_nmc {
				 get { return "layer_nmc"; }
			}
			///<summary>Returns the id string for &quot;layer_raster&quot; (Component, Catalog)</summary>
			public static string layer_raster {
				 get { return "layer_raster"; }
			}
			///<summary>Returns the id string for &quot;layer_service&quot; (Component, Catalog)</summary>
			public static string layer_service {
				 get { return "layer_service"; }
			}
			///<summary>Returns the id string for &quot;layer_tin&quot; (Component, Catalog)</summary>
			public static string layer_tin {
				 get { return "layer_tin"; }
			}
			///<summary>Returns the id string for &quot;locator_eagle&quot; (Component, Catalog)</summary>
			public static string locator_eagle {
				 get { return "locator_eagle"; }
			}
			///<summary>Returns the id string for &quot;locator_egdb&quot; (Component, Catalog)</summary>
			public static string locator_egdb {
				 get { return "locator_egdb"; }
			}
			///<summary>Returns the id string for &quot;locator_fgdb&quot; (Component, Catalog)</summary>
			public static string locator_fgdb {
				 get { return "locator_fgdb"; }
			}
			///<summary>Returns the id string for &quot;locator_file&quot; (Component, Catalog)</summary>
			public static string locator_file {
				 get { return "locator_file"; }
			}
			///<summary>Returns the id string for &quot;locator_gcpk&quot; (Component, Catalog)</summary>
			public static string locator_gcpk {
				 get { return "locator_gcpk"; }
			}
			///<summary>Returns the id string for &quot;locator_general&quot; (Component, Catalog)</summary>
			public static string locator_general {
				 get { return "locator_general"; }
			}
			///<summary>Returns the id string for &quot;locator_general_composite&quot; (Component, Catalog)</summary>
			public static string locator_general_composite {
				 get { return "locator_general_composite"; }
			}
			///<summary>Returns the id string for &quot;locator_portal&quot; (Component, Catalog)</summary>
			public static string locator_portal {
				 get { return "locator_portal"; }
			}
			///<summary>Returns the id string for &quot;locator_portal_item&quot; (Component, Catalog)</summary>
			public static string locator_portal_item {
				 get { return "locator_portal_item"; }
			}
			///<summary>Returns the id string for &quot;locator_server&quot; (Component, Catalog)</summary>
			public static string locator_server {
				 get { return "locator_server"; }
			}
			///<summary>Returns the id string for &quot;locator_xy&quot; (Component, Catalog)</summary>
			public static string locator_xy {
				 get { return "locator_xy"; }
			}
			///<summary>Returns the id string for &quot;map_3dd&quot; (Component, Catalog)</summary>
			public static string map_3dd {
				 get { return "map_3dd"; }
			}
			///<summary>Returns the id string for &quot;map_bpk&quot; (Component, Catalog)</summary>
			public static string map_bpk {
				 get { return "map_bpk"; }
			}
			///<summary>Returns the id string for &quot;map_general&quot; (Component, Catalog)</summary>
			public static string map_general {
				 get { return "map_general"; }
			}
			///<summary>Returns the id string for &quot;map_mapx&quot; (Component, Catalog)</summary>
			public static string map_mapx {
				 get { return "map_mapx"; }
			}
			///<summary>Returns the id string for &quot;map_mmpk&quot; (Component, Catalog)</summary>
			public static string map_mmpk {
				 get { return "map_mmpk"; }
			}
			///<summary>Returns the id string for &quot;map_mpk&quot; (Component, Catalog)</summary>
			public static string map_mpk {
				 get { return "map_mpk"; }
			}
			///<summary>Returns the id string for &quot;map_mpkx&quot; (Component, Catalog)</summary>
			public static string map_mpkx {
				 get { return "map_mpkx"; }
			}
			///<summary>Returns the id string for &quot;map_msd&quot; (Component, Catalog)</summary>
			public static string map_msd {
				 get { return "map_msd"; }
			}
			///<summary>Returns the id string for &quot;map_mspk&quot; (Component, Catalog)</summary>
			public static string map_mspk {
				 get { return "map_mspk"; }
			}
			///<summary>Returns the id string for &quot;map_mxd&quot; (Component, Catalog)</summary>
			public static string map_mxd {
				 get { return "map_mxd"; }
			}
			///<summary>Returns the id string for &quot;map_pagx&quot; (Component, Catalog)</summary>
			public static string map_pagx {
				 get { return "map_pagx"; }
			}
			///<summary>Returns the id string for &quot;map_rptx&quot; (Component, Catalog)</summary>
			public static string map_rptx {
				 get { return "map_rptx"; }
			}
			///<summary>Returns the id string for &quot;map_sxd&quot; (Component, Catalog)</summary>
			public static string map_sxd {
				 get { return "map_sxd"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_annotation&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_annotation {
				 get { return "mgdb_fc_annotation"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_dimension&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_dimension {
				 get { return "mgdb_fc_dimension"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_general&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_general {
				 get { return "mgdb_fc_general"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_line&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_line {
				 get { return "mgdb_fc_line"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_multipatch&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_multipatch {
				 get { return "mgdb_fc_multipatch"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_multipoint&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_multipoint {
				 get { return "mgdb_fc_multipoint"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_point&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_point {
				 get { return "mgdb_fc_point"; }
			}
			///<summary>Returns the id string for &quot;mgdb_fc_polygon&quot; (Component, Catalog)</summary>
			public static string mgdb_fc_polygon {
				 get { return "mgdb_fc_polygon"; }
			}
			///<summary>Returns the id string for &quot;mgdb_relationship&quot; (Component, Catalog)</summary>
			public static string mgdb_relationship {
				 get { return "mgdb_relationship"; }
			}
			///<summary>Returns the id string for &quot;mgdb_table&quot; (Component, Catalog)</summary>
			public static string mgdb_table {
				 get { return "mgdb_table"; }
			}
			///<summary>Returns the id string for &quot;mosaic_dataset_egdb&quot; (Component, Catalog)</summary>
			public static string mosaic_dataset_egdb {
				 get { return "mosaic_dataset_egdb"; }
			}
			///<summary>Returns the id string for &quot;mosaic_dataset_fgdb&quot; (Component, Catalog)</summary>
			public static string mosaic_dataset_fgdb {
				 get { return "mosaic_dataset_fgdb"; }
			}
			///<summary>Returns the id string for &quot;mosaic_dataset_general&quot; (Component, Catalog)</summary>
			public static string mosaic_dataset_general {
				 get { return "mosaic_dataset_general"; }
			}
			///<summary>Returns the id string for &quot;network_general&quot; (Component, Catalog)</summary>
			public static string network_general {
				 get { return "network_general"; }
			}
			///<summary>Returns the id string for &quot;portal_aptx&quot; (Component, Catalog)</summary>
			public static string portal_aptx {
				 get { return "portal_aptx"; }
			}
			///<summary>Returns the id string for &quot;portal_bpk&quot; (Component, Catalog)</summary>
			public static string portal_bpk {
				 get { return "portal_bpk"; }
			}
			///<summary>Returns the id string for &quot;portal_feed&quot; (Component, Catalog)</summary>
			public static string portal_feed {
				 get { return "portal_feed"; }
			}
			///<summary>Returns the id string for &quot;portal_folder&quot; (Component, Catalog)</summary>
			public static string portal_folder {
				 get { return "portal_folder"; }
			}
			///<summary>Returns the id string for &quot;portal_gcpk&quot; (Component, Catalog)</summary>
			public static string portal_gcpk {
				 get { return "portal_gcpk"; }
			}
			///<summary>Returns the id string for &quot;portal_gpk&quot; (Component, Catalog)</summary>
			public static string portal_gpk {
				 get { return "portal_gpk"; }
			}
			///<summary>Returns the id string for &quot;portal_gpkx&quot; (Component, Catalog)</summary>
			public static string portal_gpkx {
				 get { return "portal_gpkx"; }
			}
			///<summary>Returns the id string for &quot;portal_group&quot; (Component, Catalog)</summary>
			public static string portal_group {
				 get { return "portal_group"; }
			}
			///<summary>Returns the id string for &quot;portal_ipynb&quot; (Component, Catalog)</summary>
			public static string portal_ipynb {
				 get { return "portal_ipynb"; }
			}
			///<summary>Returns the id string for &quot;portal_item&quot; (Component, Catalog)</summary>
			public static string portal_item {
				 get { return "portal_item"; }
			}
			///<summary>Returns the id string for &quot;portal_kml&quot; (Component, Catalog)</summary>
			public static string portal_kml {
				 get { return "portal_kml"; }
			}
			///<summary>Returns the id string for &quot;portal_kmz&quot; (Component, Catalog)</summary>
			public static string portal_kmz {
				 get { return "portal_kmz"; }
			}
			///<summary>Returns the id string for &quot;portal_livingatlas&quot; (Component, Catalog)</summary>
			public static string portal_livingatlas {
				 get { return "portal_livingatlas"; }
			}
			///<summary>Returns the id string for &quot;portal_lpk&quot; (Component, Catalog)</summary>
			public static string portal_lpk {
				 get { return "portal_lpk"; }
			}
			///<summary>Returns the id string for &quot;portal_lpk_schema&quot; (Component, Catalog)</summary>
			public static string portal_lpk_schema {
				 get { return "portal_lpk_schema"; }
			}
			///<summary>Returns the id string for &quot;portal_lpkx&quot; (Component, Catalog)</summary>
			public static string portal_lpkx {
				 get { return "portal_lpkx"; }
			}
			///<summary>Returns the id string for &quot;portal_lpkx_schema&quot; (Component, Catalog)</summary>
			public static string portal_lpkx_schema {
				 get { return "portal_lpkx_schema"; }
			}
			///<summary>Returns the id string for &quot;portal_lyr&quot; (Component, Catalog)</summary>
			public static string portal_lyr {
				 get { return "portal_lyr"; }
			}
			///<summary>Returns the id string for &quot;portal_lyrx&quot; (Component, Catalog)</summary>
			public static string portal_lyrx {
				 get { return "portal_lyrx"; }
			}
			///<summary>Returns the id string for &quot;portal_mapx&quot; (Component, Catalog)</summary>
			public static string portal_mapx {
				 get { return "portal_mapx"; }
			}
			///<summary>Returns the id string for &quot;portal_mmpk&quot; (Component, Catalog)</summary>
			public static string portal_mmpk {
				 get { return "portal_mmpk"; }
			}
			///<summary>Returns the id string for &quot;portal_mpk&quot; (Component, Catalog)</summary>
			public static string portal_mpk {
				 get { return "portal_mpk"; }
			}
			///<summary>Returns the id string for &quot;portal_mpkx&quot; (Component, Catalog)</summary>
			public static string portal_mpkx {
				 get { return "portal_mpkx"; }
			}
			///<summary>Returns the id string for &quot;portal_mspk&quot; (Component, Catalog)</summary>
			public static string portal_mspk {
				 get { return "portal_mspk"; }
			}
			///<summary>Returns the id string for &quot;portal_netcdf&quot; (Component, Catalog)</summary>
			public static string portal_netcdf {
				 get { return "portal_netcdf"; }
			}
			///<summary>Returns the id string for &quot;portal_oic&quot; (Component, Catalog)</summary>
			public static string portal_oic {
				 get { return "portal_oic"; }
			}
			///<summary>Returns the id string for &quot;portal_pagx&quot; (Component, Catalog)</summary>
			public static string portal_pagx {
				 get { return "portal_pagx"; }
			}
			///<summary>Returns the id string for &quot;portal_ppkx&quot; (Component, Catalog)</summary>
			public static string portal_ppkx {
				 get { return "portal_ppkx"; }
			}
			///<summary>Returns the id string for &quot;portal_rft&quot; (Component, Catalog)</summary>
			public static string portal_rft {
				 get { return "portal_rft"; }
			}
			///<summary>Returns the id string for &quot;portal_rpk&quot; (Component, Catalog)</summary>
			public static string portal_rpk {
				 get { return "portal_rpk"; }
			}
			///<summary>Returns the id string for &quot;portal_spk&quot; (Component, Catalog)</summary>
			public static string portal_spk {
				 get { return "portal_spk"; }
			}
			///<summary>Returns the id string for &quot;portal_stylx&quot; (Component, Catalog)</summary>
			public static string portal_stylx {
				 get { return "portal_stylx"; }
			}
			///<summary>Returns the id string for &quot;portal_sub_table&quot; (Component, Catalog)</summary>
			public static string portal_sub_table {
				 get { return "portal_sub_table"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature {
				 get { return "portal_sublayer_feature"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_anno&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_anno {
				 get { return "portal_sublayer_feature_anno"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_dimension&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_dimension {
				 get { return "portal_sublayer_feature_dimension"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted {
				 get { return "portal_sublayer_feature_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted_anno&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted_anno {
				 get { return "portal_sublayer_feature_hosted_anno"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted_dimension&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted_dimension {
				 get { return "portal_sublayer_feature_hosted_dimension"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted_line&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted_line {
				 get { return "portal_sublayer_feature_hosted_line"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted_multipatch&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted_multipatch {
				 get { return "portal_sublayer_feature_hosted_multipatch"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted_point&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted_point {
				 get { return "portal_sublayer_feature_hosted_point"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_hosted_polygon&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_hosted_polygon {
				 get { return "portal_sublayer_feature_hosted_polygon"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_line&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_line {
				 get { return "portal_sublayer_feature_line"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_multipatch&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_multipatch {
				 get { return "portal_sublayer_feature_multipatch"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_point&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_point {
				 get { return "portal_sublayer_feature_point"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_feature_polygon&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_feature_polygon {
				 get { return "portal_sublayer_feature_polygon"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_group_map&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_group_map {
				 get { return "portal_sublayer_group_map"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_group_map_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_group_map_hosted {
				 get { return "portal_sublayer_group_map_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_group_parceldataset&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_group_parceldataset {
				 get { return "portal_sublayer_group_parceldataset"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_group_parceldataset_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_group_parceldataset_hosted {
				 get { return "portal_sublayer_group_parceldataset_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_group_utilitynetwork&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_group_utilitynetwork {
				 get { return "portal_sublayer_group_utilitynetwork"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_group_utilitynetwork_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_group_utilitynetwork_hosted {
				 get { return "portal_sublayer_group_utilitynetwork_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_image&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_image {
				 get { return "portal_sublayer_image"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_map&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_map {
				 get { return "portal_sublayer_map"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_map_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_map_hosted {
				 get { return "portal_sublayer_map_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_mapimage&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_mapimage {
				 get { return "portal_sublayer_mapimage"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_parceldataset&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_parceldataset {
				 get { return "portal_sublayer_parceldataset"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_parceldataset_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_parceldataset_hosted {
				 get { return "portal_sublayer_parceldataset_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_scene&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_scene {
				 get { return "portal_sublayer_scene"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_utilitynetwork&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_utilitynetwork {
				 get { return "portal_sublayer_utilitynetwork"; }
			}
			///<summary>Returns the id string for &quot;portal_sublayer_utilitynetwork_hosted&quot; (Component, Catalog)</summary>
			public static string portal_sublayer_utilitynetwork_hosted {
				 get { return "portal_sublayer_utilitynetwork_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_subtool&quot; (Component, Catalog)</summary>
			public static string portal_subtool {
				 get { return "portal_subtool"; }
			}
			///<summary>Returns the id string for &quot;portal_task&quot; (Component, Catalog)</summary>
			public static string portal_task {
				 get { return "portal_task"; }
			}
			///<summary>Returns the id string for &quot;portal_rptx&quot; (Component, Catalog)</summary>
			public static string portal_rptx {
				 get { return "portal_rptx"; }
			}
			///<summary>Returns the id string for &quot;portal_tpk&quot; (Component, Catalog)</summary>
			public static string portal_tpk {
				 get { return "portal_tpk"; }
			}
			///<summary>Returns the id string for &quot;portal_tpkx&quot; (Component, Catalog)</summary>
			public static string portal_tpkx {
				 get { return "portal_tpkx"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore {
				 get { return "portal_url_datastore"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore_dataset&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore_dataset {
				 get { return "portal_url_datastore_dataset"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore_featureclass&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore_featureclass {
				 get { return "portal_url_datastore_featureclass"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore_featureclass_point&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore_featureclass_point {
				 get { return "portal_url_datastore_featureclass_point"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore_featureclass_polygon&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore_featureclass_polygon {
				 get { return "portal_url_datastore_featureclass_polygon"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore_featureclass_polyline&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore_featureclass_polyline {
				 get { return "portal_url_datastore_featureclass_polyline"; }
			}
			///<summary>Returns the id string for &quot;portal_url_datastore_table&quot; (Component, Catalog)</summary>
			public static string portal_url_datastore_table {
				 get { return "portal_url_datastore_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_elevationservice&quot; (Component, Catalog)</summary>
			public static string portal_url_elevationservice {
				 get { return "portal_url_elevationservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featurecollection&quot; (Component, Catalog)</summary>
			public static string portal_url_featurecollection {
				 get { return "portal_url_featurecollection"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice {
				 get { return "portal_url_featureservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_hosted {
				 get { return "portal_url_featureservice_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_hosted_spatiotemporal&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_hosted_spatiotemporal {
				 get { return "portal_url_featureservice_hosted_spatiotemporal"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_hosted_spatiotemporal_table&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_hosted_spatiotemporal_table {
				 get { return "portal_url_featureservice_hosted_spatiotemporal_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_hosted_table&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_hosted_table {
				 get { return "portal_url_featureservice_hosted_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_hosted_view&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_hosted_view {
				 get { return "portal_url_featureservice_hosted_view"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_spatiotemporal&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_spatiotemporal {
				 get { return "portal_url_featureservice_spatiotemporal"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_spatiotemporal_table&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_spatiotemporal_table {
				 get { return "portal_url_featureservice_spatiotemporal_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_featureservice_table&quot; (Component, Catalog)</summary>
			public static string portal_url_featureservice_table {
				 get { return "portal_url_featureservice_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_geocodingservice&quot; (Component, Catalog)</summary>
			public static string portal_url_geocodingservice {
				 get { return "portal_url_geocodingservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_imageservice&quot; (Component, Catalog)</summary>
			public static string portal_url_imageservice {
				 get { return "portal_url_imageservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_mapimage&quot; (Component, Catalog)</summary>
			public static string portal_url_mapimage {
				 get { return "portal_url_mapimage"; }
			}
			///<summary>Returns the id string for &quot;portal_url_mapimage_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_mapimage_hosted {
				 get { return "portal_url_mapimage_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_mapservice&quot; (Component, Catalog)</summary>
			public static string portal_url_mapservice {
				 get { return "portal_url_mapservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_mapservice_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_mapservice_hosted {
				 get { return "portal_url_mapservice_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_na_route_layer&quot; (Component, Catalog)</summary>
			public static string portal_url_na_route_layer {
				 get { return "portal_url_na_route_layer"; }
			}
			///<summary>Returns the id string for &quot;portal_url_naservice&quot; (Component, Catalog)</summary>
			public static string portal_url_naservice {
				 get { return "portal_url_naservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_ogcwfs&quot; (Component, Catalog)</summary>
			public static string portal_url_ogcwfs {
				 get { return "portal_url_ogcwfs"; }
			}
			///<summary>Returns the id string for &quot;portal_url_ogcwms&quot; (Component, Catalog)</summary>
			public static string portal_url_ogcwms {
				 get { return "portal_url_ogcwms"; }
			}
			///<summary>Returns the id string for &quot;portal_url_ogcwmts&quot; (Component, Catalog)</summary>
			public static string portal_url_ogcwmts {
				 get { return "portal_url_ogcwmts"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice {
				 get { return "portal_url_sceneservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_Building&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_Building {
				 get { return "portal_url_sceneservice_Building"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_IntegratedMesh&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_IntegratedMesh {
				 get { return "portal_url_sceneservice_IntegratedMesh"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_Line&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_Line {
				 get { return "portal_url_sceneservice_Line"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_MultiPatch&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_MultiPatch {
				 get { return "portal_url_sceneservice_MultiPatch"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_Point&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_Point {
				 get { return "portal_url_sceneservice_Point"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_PointCloud&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_PointCloud {
				 get { return "portal_url_sceneservice_PointCloud"; }
			}
			///<summary>Returns the id string for &quot;portal_url_sceneservice_Polygon&quot; (Component, Catalog)</summary>
			public static string portal_url_sceneservice_Polygon {
				 get { return "portal_url_sceneservice_Polygon"; }
			}
			///<summary>Returns the id string for &quot;portal_url_spatiotemporal&quot; (Component, Catalog)</summary>
			public static string portal_url_spatiotemporal {
				 get { return "portal_url_spatiotemporal"; }
			}
			///<summary>Returns the id string for &quot;portal_url_spatiotemporal_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_spatiotemporal_hosted {
				 get { return "portal_url_spatiotemporal_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_spatiotemporal_table&quot; (Component, Catalog)</summary>
			public static string portal_url_spatiotemporal_table {
				 get { return "portal_url_spatiotemporal_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_spatiotemporal_table_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_spatiotemporal_table_hosted {
				 get { return "portal_url_spatiotemporal_table_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_streamservice&quot; (Component, Catalog)</summary>
			public static string portal_url_streamservice {
				 get { return "portal_url_streamservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_streamservice_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_streamservice_hosted {
				 get { return "portal_url_streamservice_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_table&quot; (Component, Catalog)</summary>
			public static string portal_url_table {
				 get { return "portal_url_table"; }
			}
			///<summary>Returns the id string for &quot;portal_url_table_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_table_hosted {
				 get { return "portal_url_table_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_vectortileservice&quot; (Component, Catalog)</summary>
			public static string portal_url_vectortileservice {
				 get { return "portal_url_vectortileservice"; }
			}
			///<summary>Returns the id string for &quot;portal_url_vectortileservice_hosted&quot; (Component, Catalog)</summary>
			public static string portal_url_vectortileservice_hosted {
				 get { return "portal_url_vectortileservice_hosted"; }
			}
			///<summary>Returns the id string for &quot;portal_url_webmap&quot; (Component, Catalog)</summary>
			public static string portal_url_webmap {
				 get { return "portal_url_webmap"; }
			}
			///<summary>Returns the id string for &quot;portal_url_webscene&quot; (Component, Catalog)</summary>
			public static string portal_url_webscene {
				 get { return "portal_url_webscene"; }
			}
			///<summary>Returns the id string for &quot;portal_url_webstyle&quot; (Component, Catalog)</summary>
			public static string portal_url_webstyle {
				 get { return "portal_url_webstyle"; }
			}
			///<summary>Returns the id string for &quot;portal_url_webtoolbox&quot; (Component, Catalog)</summary>
			public static string portal_url_webtoolbox {
				 get { return "portal_url_webtoolbox"; }
			}
			///<summary>Returns the id string for &quot;portal_vtpk&quot; (Component, Catalog)</summary>
			public static string portal_vtpk {
				 get { return "portal_vtpk"; }
			}
			///<summary>Returns the id string for &quot;prjfile_general&quot; (Component, Catalog)</summary>
			public static string prjfile_general {
				 get { return "prjfile_general"; }
			}
			///<summary>Returns the id string for &quot;prjfile_geographic&quot; (Component, Catalog)</summary>
			public static string prjfile_geographic {
				 get { return "prjfile_geographic"; }
			}
			///<summary>Returns the id string for &quot;prjfile_projected&quot; (Component, Catalog)</summary>
			public static string prjfile_projected {
				 get { return "prjfile_projected"; }
			}
			///<summary>Returns the id string for &quot;prjfile_vertical&quot; (Component, Catalog)</summary>
			public static string prjfile_vertical {
				 get { return "prjfile_vertical"; }
			}
			///<summary>Returns the id string for &quot;query_expression_file&quot; (Component, Catalog)</summary>
			public static string query_expression_file {
				 get { return "query_expression_file"; }
			}
			///<summary>Returns the id string for &quot;raster_5jud&quot; (Component, Catalog)</summary>
			public static string raster_5jud {
				 get { return "raster_5jud"; }
			}
			///<summary>Returns the id string for &quot;raster_aaigrid&quot; (Component, Catalog)</summary>
			public static string raster_aaigrid {
				 get { return "raster_aaigrid"; }
			}
			///<summary>Returns the id string for &quot;raster_adrg_general&quot; (Component, Catalog)</summary>
			public static string raster_adrg_general {
				 get { return "raster_adrg_general"; }
			}
			///<summary>Returns the id string for &quot;raster_adrg_img&quot; (Component, Catalog)</summary>
			public static string raster_adrg_img {
				 get { return "raster_adrg_img"; }
			}
			///<summary>Returns the id string for &quot;raster_adrg_ovr&quot; (Component, Catalog)</summary>
			public static string raster_adrg_ovr {
				 get { return "raster_adrg_ovr"; }
			}
			///<summary>Returns the id string for &quot;raster_afr&quot; (Component, Catalog)</summary>
			public static string raster_afr {
				 get { return "raster_afr"; }
			}
			///<summary>Returns the id string for &quot;raster_aoover&quot; (Component, Catalog)</summary>
			public static string raster_aoover {
				 get { return "raster_aoover"; }
			}
			///<summary>Returns the id string for &quot;raster_bag&quot; (Component, Catalog)</summary>
			public static string raster_bag {
				 get { return "raster_bag"; }
			}
			///<summary>Returns the id string for &quot;raster_band_egdb&quot; (Component, Catalog)</summary>
			public static string raster_band_egdb {
				 get { return "raster_band_egdb"; }
			}
			///<summary>Returns the id string for &quot;raster_band_fgdb&quot; (Component, Catalog)</summary>
			public static string raster_band_fgdb {
				 get { return "raster_band_fgdb"; }
			}
			///<summary>Returns the id string for &quot;raster_band_file&quot; (Component, Catalog)</summary>
			public static string raster_band_file {
				 get { return "raster_band_file"; }
			}
			///<summary>Returns the id string for &quot;raster_bil&quot; (Component, Catalog)</summary>
			public static string raster_bil {
				 get { return "raster_bil"; }
			}
			///<summary>Returns the id string for &quot;raster_bip&quot; (Component, Catalog)</summary>
			public static string raster_bip {
				 get { return "raster_bip"; }
			}
			///<summary>Returns the id string for &quot;raster_blx&quot; (Component, Catalog)</summary>
			public static string raster_blx {
				 get { return "raster_blx"; }
			}
			///<summary>Returns the id string for &quot;raster_bmp&quot; (Component, Catalog)</summary>
			public static string raster_bmp {
				 get { return "raster_bmp"; }
			}
			///<summary>Returns the id string for &quot;raster_bsb&quot; (Component, Catalog)</summary>
			public static string raster_bsb {
				 get { return "raster_bsb"; }
			}
			///<summary>Returns the id string for &quot;raster_bsq&quot; (Component, Catalog)</summary>
			public static string raster_bsq {
				 get { return "raster_bsq"; }
			}
			///<summary>Returns the id string for &quot;raster_bt&quot; (Component, Catalog)</summary>
			public static string raster_bt {
				 get { return "raster_bt"; }
			}
			///<summary>Returns the id string for &quot;raster_catalog_egdb&quot; (Component, Catalog)</summary>
			public static string raster_catalog_egdb {
				 get { return "raster_catalog_egdb"; }
			}
			///<summary>Returns the id string for &quot;raster_catalog_fgdb&quot; (Component, Catalog)</summary>
			public static string raster_catalog_fgdb {
				 get { return "raster_catalog_fgdb"; }
			}
			///<summary>Returns the id string for &quot;raster_ceos&quot; (Component, Catalog)</summary>
			public static string raster_ceos {
				 get { return "raster_ceos"; }
			}
			///<summary>Returns the id string for &quot;raster_cgn1&quot; (Component, Catalog)</summary>
			public static string raster_cgn1 {
				 get { return "raster_cgn1"; }
			}
			///<summary>Returns the id string for &quot;raster_dataset_acs&quot; (Component, Catalog)</summary>
			public static string raster_dataset_acs {
				 get { return "raster_dataset_acs"; }
			}
			///<summary>Returns the id string for &quot;raster_dataset_egdb&quot; (Component, Catalog)</summary>
			public static string raster_dataset_egdb {
				 get { return "raster_dataset_egdb"; }
			}
			///<summary>Returns the id string for &quot;raster_dataset_fgdb&quot; (Component, Catalog)</summary>
			public static string raster_dataset_fgdb {
				 get { return "raster_dataset_fgdb"; }
			}
			///<summary>Returns the id string for &quot;raster_dimap&quot; (Component, Catalog)</summary>
			public static string raster_dimap {
				 get { return "raster_dimap"; }
			}
			///<summary>Returns the id string for &quot;raster_dted&quot; (Component, Catalog)</summary>
			public static string raster_dted {
				 get { return "raster_dted"; }
			}
			///<summary>Returns the id string for &quot;raster_dted_dt1&quot; (Component, Catalog)</summary>
			public static string raster_dted_dt1 {
				 get { return "raster_dted_dt1"; }
			}
			///<summary>Returns the id string for &quot;raster_dted_dt2&quot; (Component, Catalog)</summary>
			public static string raster_dted_dt2 {
				 get { return "raster_dted_dt2"; }
			}
			///<summary>Returns the id string for &quot;raster_e75gis&quot; (Component, Catalog)</summary>
			public static string raster_e75gis {
				 get { return "raster_e75gis"; }
			}
			///<summary>Returns the id string for &quot;raster_e75lan&quot; (Component, Catalog)</summary>
			public static string raster_e75lan {
				 get { return "raster_e75lan"; }
			}
			///<summary>Returns the id string for &quot;raster_ecw&quot; (Component, Catalog)</summary>
			public static string raster_ecw {
				 get { return "raster_ecw"; }
			}
			///<summary>Returns the id string for &quot;raster_eir&quot; (Component, Catalog)</summary>
			public static string raster_eir {
				 get { return "raster_eir"; }
			}
			///<summary>Returns the id string for &quot;raster_envi_bsq&quot; (Component, Catalog)</summary>
			public static string raster_envi_bsq {
				 get { return "raster_envi_bsq"; }
			}
			///<summary>Returns the id string for &quot;raster_envi_dat&quot; (Component, Catalog)</summary>
			public static string raster_envi_dat {
				 get { return "raster_envi_dat"; }
			}
			///<summary>Returns the id string for &quot;raster_envi_general&quot; (Component, Catalog)</summary>
			public static string raster_envi_general {
				 get { return "raster_envi_general"; }
			}
			///<summary>Returns the id string for &quot;raster_envi_img&quot; (Component, Catalog)</summary>
			public static string raster_envi_img {
				 get { return "raster_envi_img"; }
			}
			///<summary>Returns the id string for &quot;raster_envi_raw&quot; (Component, Catalog)</summary>
			public static string raster_envi_raw {
				 get { return "raster_envi_raw"; }
			}
			///<summary>Returns the id string for &quot;raster_ermapper&quot; (Component, Catalog)</summary>
			public static string raster_ermapper {
				 get { return "raster_ermapper"; }
			}
			///<summary>Returns the id string for &quot;raster_ers&quot; (Component, Catalog)</summary>
			public static string raster_ers {
				 get { return "raster_ers"; }
			}
			///<summary>Returns the id string for &quot;raster_fast&quot; (Component, Catalog)</summary>
			public static string raster_fast {
				 get { return "raster_fast"; }
			}
			///<summary>Returns the id string for &quot;raster_file_general&quot; (Component, Catalog)</summary>
			public static string raster_file_general {
				 get { return "raster_file_general"; }
			}
			///<summary>Returns the id string for &quot;raster_flt&quot; (Component, Catalog)</summary>
			public static string raster_flt {
				 get { return "raster_flt"; }
			}
			///<summary>Returns the id string for &quot;raster_genbin_bil&quot; (Component, Catalog)</summary>
			public static string raster_genbin_bil {
				 get { return "raster_genbin_bil"; }
			}
			///<summary>Returns the id string for &quot;raster_genbin_bsq&quot; (Component, Catalog)</summary>
			public static string raster_genbin_bsq {
				 get { return "raster_genbin_bsq"; }
			}
			///<summary>Returns the id string for &quot;raster_genbin_general&quot; (Component, Catalog)</summary>
			public static string raster_genbin_general {
				 get { return "raster_genbin_general"; }
			}
			///<summary>Returns the id string for &quot;raster_genbin_raw&quot; (Component, Catalog)</summary>
			public static string raster_genbin_raw {
				 get { return "raster_genbin_raw"; }
			}
			///<summary>Returns the id string for &quot;raster_gff&quot; (Component, Catalog)</summary>
			public static string raster_gff {
				 get { return "raster_gff"; }
			}
			///<summary>Returns the id string for &quot;raster_gif&quot; (Component, Catalog)</summary>
			public static string raster_gif {
				 get { return "raster_gif"; }
			}
			///<summary>Returns the id string for &quot;raster_grd&quot; (Component, Catalog)</summary>
			public static string raster_grd {
				 get { return "raster_grd"; }
			}
			///<summary>Returns the id string for &quot;raster_grib&quot; (Component, Catalog)</summary>
			public static string raster_grib {
				 get { return "raster_grib"; }
			}
			///<summary>Returns the id string for &quot;raster_grid&quot; (Component, Catalog)</summary>
			public static string raster_grid {
				 get { return "raster_grid"; }
			}
			///<summary>Returns the id string for &quot;raster_gs7bg&quot; (Component, Catalog)</summary>
			public static string raster_gs7bg {
				 get { return "raster_gs7bg"; }
			}
			///<summary>Returns the id string for &quot;raster_gs7x&quot; (Component, Catalog)</summary>
			public static string raster_gs7x {
				 get { return "raster_gs7x"; }
			}
			///<summary>Returns the id string for &quot;raster_gsbg&quot; (Component, Catalog)</summary>
			public static string raster_gsbg {
				 get { return "raster_gsbg"; }
			}
			///<summary>Returns the id string for &quot;raster_h5&quot; (Component, Catalog)</summary>
			public static string raster_h5 {
				 get { return "raster_h5"; }
			}
			///<summary>Returns the id string for &quot;raster_hdf4&quot; (Component, Catalog)</summary>
			public static string raster_hdf4 {
				 get { return "raster_hdf4"; }
			}
			///<summary>Returns the id string for &quot;raster_hdf5image&quot; (Component, Catalog)</summary>
			public static string raster_hdf5image {
				 get { return "raster_hdf5image"; }
			}
			///<summary>Returns the id string for &quot;raster_i11&quot; (Component, Catalog)</summary>
			public static string raster_i11 {
				 get { return "raster_i11"; }
			}
			///<summary>Returns the id string for &quot;raster_icit&quot; (Component, Catalog)</summary>
			public static string raster_icit {
				 get { return "raster_icit"; }
			}
			///<summary>Returns the id string for &quot;raster_icot&quot; (Component, Catalog)</summary>
			public static string raster_icot {
				 get { return "raster_icot"; }
			}
			///<summary>Returns the id string for &quot;raster_ictb&quot; (Component, Catalog)</summary>
			public static string raster_ictb {
				 get { return "raster_ictb"; }
			}
			///<summary>Returns the id string for &quot;raster_ictc&quot; (Component, Catalog)</summary>
			public static string raster_ictc {
				 get { return "raster_ictc"; }
			}
			///<summary>Returns the id string for &quot;raster_imagineimage&quot; (Component, Catalog)</summary>
			public static string raster_imagineimage {
				 get { return "raster_imagineimage"; }
			}
			///<summary>Returns the id string for &quot;raster_img&quot; (Component, Catalog)</summary>
			public static string raster_img {
				 get { return "raster_img"; }
			}
			///<summary>Returns the id string for &quot;raster_iscdef&quot; (Component, Catalog)</summary>
			public static string raster_iscdef {
				 get { return "raster_iscdef"; }
			}
			///<summary>Returns the id string for &quot;raster_isis2&quot; (Component, Catalog)</summary>
			public static string raster_isis2 {
				 get { return "raster_isis2"; }
			}
			///<summary>Returns the id string for &quot;raster_isis3&quot; (Component, Catalog)</summary>
			public static string raster_isis3 {
				 get { return "raster_isis3"; }
			}
			///<summary>Returns the id string for &quot;raster_jaxapalsar&quot; (Component, Catalog)</summary>
			public static string raster_jaxapalsar {
				 get { return "raster_jaxapalsar"; }
			}
			///<summary>Returns the id string for &quot;raster_jfif_general&quot; (Component, Catalog)</summary>
			public static string raster_jfif_general {
				 get { return "raster_jfif_general"; }
			}
			///<summary>Returns the id string for &quot;raster_jfif_jpg&quot; (Component, Catalog)</summary>
			public static string raster_jfif_jpg {
				 get { return "raster_jfif_jpg"; }
			}
			///<summary>Returns the id string for &quot;raster_jfif_psi&quot; (Component, Catalog)</summary>
			public static string raster_jfif_psi {
				 get { return "raster_jfif_psi"; }
			}
			///<summary>Returns the id string for &quot;raster_jp2_general&quot; (Component, Catalog)</summary>
			public static string raster_jp2_general {
				 get { return "raster_jp2_general"; }
			}
			///<summary>Returns the id string for &quot;raster_jp2_j2c&quot; (Component, Catalog)</summary>
			public static string raster_jp2_j2c {
				 get { return "raster_jp2_j2c"; }
			}
			///<summary>Returns the id string for &quot;raster_jp2_j2k&quot; (Component, Catalog)</summary>
			public static string raster_jp2_j2k {
				 get { return "raster_jp2_j2k"; }
			}
			///<summary>Returns the id string for &quot;raster_jp2_jp2&quot; (Component, Catalog)</summary>
			public static string raster_jp2_jp2 {
				 get { return "raster_jp2_jp2"; }
			}
			///<summary>Returns the id string for &quot;raster_jp2_jpc&quot; (Component, Catalog)</summary>
			public static string raster_jp2_jpc {
				 get { return "raster_jp2_jpc"; }
			}
			///<summary>Returns the id string for &quot;raster_jp2_jpx&quot; (Component, Catalog)</summary>
			public static string raster_jp2_jpx {
				 get { return "raster_jp2_jpx"; }
			}
			///<summary>Returns the id string for &quot;raster_lbl&quot; (Component, Catalog)</summary>
			public static string raster_lbl {
				 get { return "raster_lbl"; }
			}
			///<summary>Returns the id string for &quot;raster_lgg&quot; (Component, Catalog)</summary>
			public static string raster_lgg {
				 get { return "raster_lgg"; }
			}
			///<summary>Returns the id string for &quot;raster_mdd&quot; (Component, Catalog)</summary>
			public static string raster_mdd {
				 get { return "raster_mdd"; }
			}
			///<summary>Returns the id string for &quot;raster_mif&quot; (Component, Catalog)</summary>
			public static string raster_mif {
				 get { return "raster_mif"; }
			}
			///<summary>Returns the id string for &quot;raster_mraster&quot; (Component, Catalog)</summary>
			public static string raster_mraster {
				 get { return "raster_mraster"; }
			}
			///<summary>Returns the id string for &quot;raster_msid&quot; (Component, Catalog)</summary>
			public static string raster_msid {
				 get { return "raster_msid"; }
			}
			///<summary>Returns the id string for &quot;raster_ndf&quot; (Component, Catalog)</summary>
			public static string raster_ndf {
				 get { return "raster_ndf"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_general&quot; (Component, Catalog)</summary>
			public static string raster_nitf_general {
				 get { return "raster_nitf_general"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_gnj&quot; (Component, Catalog)</summary>
			public static string raster_nitf_gnj {
				 get { return "raster_nitf_gnj"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_i12&quot; (Component, Catalog)</summary>
			public static string raster_nitf_i12 {
				 get { return "raster_nitf_i12"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_i21&quot; (Component, Catalog)</summary>
			public static string raster_nitf_i21 {
				 get { return "raster_nitf_i21"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_ja1&quot; (Component, Catalog)</summary>
			public static string raster_nitf_ja1 {
				 get { return "raster_nitf_ja1"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_ja2&quot; (Component, Catalog)</summary>
			public static string raster_nitf_ja2 {
				 get { return "raster_nitf_ja2"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_jn9&quot; (Component, Catalog)</summary>
			public static string raster_nitf_jn9 {
				 get { return "raster_nitf_jn9"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_nsf&quot; (Component, Catalog)</summary>
			public static string raster_nitf_nsf {
				 get { return "raster_nitf_nsf"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_ntf&quot; (Component, Catalog)</summary>
			public static string raster_nitf_ntf {
				 get { return "raster_nitf_ntf"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_tl1&quot; (Component, Catalog)</summary>
			public static string raster_nitf_tl1 {
				 get { return "raster_nitf_tl1"; }
			}
			///<summary>Returns the id string for &quot;raster_nitf_tl2&quot; (Component, Catalog)</summary>
			public static string raster_nitf_tl2 {
				 get { return "raster_nitf_tl2"; }
			}
			///<summary>Returns the id string for &quot;raster_nnsf&quot; (Component, Catalog)</summary>
			public static string raster_nnsf {
				 get { return "raster_nnsf"; }
			}
			///<summary>Returns the id string for &quot;raster_pcidsk&quot; (Component, Catalog)</summary>
			public static string raster_pcidsk {
				 get { return "raster_pcidsk"; }
			}
			///<summary>Returns the id string for &quot;raster_pcraster&quot; (Component, Catalog)</summary>
			public static string raster_pcraster {
				 get { return "raster_pcraster"; }
			}
			///<summary>Returns the id string for &quot;raster_pds_general&quot; (Component, Catalog)</summary>
			public static string raster_pds_general {
				 get { return "raster_pds_general"; }
			}
			///<summary>Returns the id string for &quot;raster_pds_img&quot; (Component, Catalog)</summary>
			public static string raster_pds_img {
				 get { return "raster_pds_img"; }
			}
			///<summary>Returns the id string for &quot;raster_pds_lbl&quot; (Component, Catalog)</summary>
			public static string raster_pds_lbl {
				 get { return "raster_pds_lbl"; }
			}
			///<summary>Returns the id string for &quot;raster_png&quot; (Component, Catalog)</summary>
			public static string raster_png {
				 get { return "raster_png"; }
			}
			///<summary>Returns the id string for &quot;raster_product&quot; (Component, Catalog)</summary>
			public static string raster_product {
				 get { return "raster_product"; }
			}
			///<summary>Returns the id string for &quot;raster_raw&quot; (Component, Catalog)</summary>
			public static string raster_raw {
				 get { return "raster_raw"; }
			}
			///<summary>Returns the id string for &quot;raster_rpf&quot; (Component, Catalog)</summary>
			public static string raster_rpf {
				 get { return "raster_rpf"; }
			}
			///<summary>Returns the id string for &quot;raster_rs2&quot; (Component, Catalog)</summary>
			public static string raster_rs2 {
				 get { return "raster_rs2"; }
			}
			///<summary>Returns the id string for &quot;raster_rst&quot; (Component, Catalog)</summary>
			public static string raster_rst {
				 get { return "raster_rst"; }
			}
			///<summary>Returns the id string for &quot;raster_sarceos&quot; (Component, Catalog)</summary>
			public static string raster_sarceos {
				 get { return "raster_sarceos"; }
			}
			///<summary>Returns the id string for &quot;raster_sdts&quot; (Component, Catalog)</summary>
			public static string raster_sdts {
				 get { return "raster_sdts"; }
			}
			///<summary>Returns the id string for &quot;raster_srp&quot; (Component, Catalog)</summary>
			public static string raster_srp {
				 get { return "raster_srp"; }
			}
			///<summary>Returns the id string for &quot;raster_srtmhgt&quot; (Component, Catalog)</summary>
			public static string raster_srtmhgt {
				 get { return "raster_srtmhgt"; }
			}
			///<summary>Returns the id string for &quot;raster_stk&quot; (Component, Catalog)</summary>
			public static string raster_stk {
				 get { return "raster_stk"; }
			}
			///<summary>Returns the id string for &quot;raster_terragen&quot; (Component, Catalog)</summary>
			public static string raster_terragen {
				 get { return "raster_terragen"; }
			}
			///<summary>Returns the id string for &quot;raster_tiff&quot; (Component, Catalog)</summary>
			public static string raster_tiff {
				 get { return "raster_tiff"; }
			}
			///<summary>Returns the id string for &quot;raster_til&quot; (Component, Catalog)</summary>
			public static string raster_til {
				 get { return "raster_til"; }
			}
			///<summary>Returns the id string for &quot;raster_toc&quot; (Component, Catalog)</summary>
			public static string raster_toc {
				 get { return "raster_toc"; }
			}
			///<summary>Returns the id string for &quot;raster_ttf&quot; (Component, Catalog)</summary>
			public static string raster_ttf {
				 get { return "raster_ttf"; }
			}
			///<summary>Returns the id string for &quot;raster_uadem&quot; (Component, Catalog)</summary>
			public static string raster_uadem {
				 get { return "raster_uadem"; }
			}
			///<summary>Returns the id string for &quot;raster_usgsdem&quot; (Component, Catalog)</summary>
			public static string raster_usgsdem {
				 get { return "raster_usgsdem"; }
			}
			///<summary>Returns the id string for &quot;raster_vrt&quot; (Component, Catalog)</summary>
			public static string raster_vrt {
				 get { return "raster_vrt"; }
			}
			///<summary>Returns the id string for &quot;raster_xpm&quot; (Component, Catalog)</summary>
			public static string raster_xpm {
				 get { return "raster_xpm"; }
			}
			///<summary>Returns the id string for &quot;serverConnection_ags&quot; (Component, Catalog)</summary>
			public static string serverConnection_ags {
				 get { return "serverConnection_ags"; }
			}
			///<summary>Returns the id string for &quot;serverConnection_wcs&quot; (Component, Catalog)</summary>
			public static string serverConnection_wcs {
				 get { return "serverConnection_wcs"; }
			}
			///<summary>Returns the id string for &quot;serverConnection_wfs&quot; (Component, Catalog)</summary>
			public static string serverConnection_wfs {
				 get { return "serverConnection_wfs"; }
			}
			///<summary>Returns the id string for &quot;serverConnection_wms&quot; (Component, Catalog)</summary>
			public static string serverConnection_wms {
				 get { return "serverConnection_wms"; }
			}
			///<summary>Returns the id string for &quot;serverConnection_wmts&quot; (Component, Catalog)</summary>
			public static string serverConnection_wmts {
				 get { return "serverConnection_wmts"; }
			}
			///<summary>Returns the id string for &quot;service_definition_sd&quot; (Component, Catalog)</summary>
			public static string service_definition_sd {
				 get { return "service_definition_sd"; }
			}
			///<summary>Returns the id string for &quot;service_feature&quot; (Component, Catalog)</summary>
			public static string service_feature {
				 get { return "service_feature"; }
			}
			///<summary>Returns the id string for &quot;service_geocoding&quot; (Component, Catalog)</summary>
			public static string service_geocoding {
				 get { return "service_geocoding"; }
			}
			///<summary>Returns the id string for &quot;service_geodata&quot; (Component, Catalog)</summary>
			public static string service_geodata {
				 get { return "service_geodata"; }
			}
			///<summary>Returns the id string for &quot;service_geoprocessing&quot; (Component, Catalog)</summary>
			public static string service_geoprocessing {
				 get { return "service_geoprocessing"; }
			}
			///<summary>Returns the id string for &quot;service_globe&quot; (Component, Catalog)</summary>
			public static string service_globe {
				 get { return "service_globe"; }
			}
			///<summary>Returns the id string for &quot;service_image&quot; (Component, Catalog)</summary>
			public static string service_image {
				 get { return "service_image"; }
			}
			///<summary>Returns the id string for &quot;service_map&quot; (Component, Catalog)</summary>
			public static string service_map {
				 get { return "service_map"; }
			}
			///<summary>Returns the id string for &quot;service_na&quot; (Component, Catalog)</summary>
			public static string service_na {
				 get { return "service_na"; }
			}
			///<summary>Returns the id string for &quot;service_scene&quot; (Component, Catalog)</summary>
			public static string service_scene {
				 get { return "service_scene"; }
			}
			///<summary>Returns the id string for &quot;service_stream&quot; (Component, Catalog)</summary>
			public static string service_stream {
				 get { return "service_stream"; }
			}
			///<summary>Returns the id string for &quot;service_sub_table&quot; (Component, Catalog)</summary>
			public static string service_sub_table {
				 get { return "service_sub_table"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature {
				 get { return "service_sublayer_feature"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature_annotation&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature_annotation {
				 get { return "service_sublayer_feature_annotation"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature_dimension&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature_dimension {
				 get { return "service_sublayer_feature_dimension"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature_line&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature_line {
				 get { return "service_sublayer_feature_line"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature_multipatch&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature_multipatch {
				 get { return "service_sublayer_feature_multipatch"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature_point&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature_point {
				 get { return "service_sublayer_feature_point"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_feature_polygon&quot; (Component, Catalog)</summary>
			public static string service_sublayer_feature_polygon {
				 get { return "service_sublayer_feature_polygon"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_group_map&quot; (Component, Catalog)</summary>
			public static string service_sublayer_group_map {
				 get { return "service_sublayer_group_map"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_image&quot; (Component, Catalog)</summary>
			public static string service_sublayer_image {
				 get { return "service_sublayer_image"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_map&quot; (Component, Catalog)</summary>
			public static string service_sublayer_map {
				 get { return "service_sublayer_map"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_parceldataset&quot; (Component, Catalog)</summary>
			public static string service_sublayer_parceldataset {
				 get { return "service_sublayer_parceldataset"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_scene&quot; (Component, Catalog)</summary>
			public static string service_sublayer_scene {
				 get { return "service_sublayer_scene"; }
			}
			///<summary>Returns the id string for &quot;service_sublayer_utilitynetwork&quot; (Component, Catalog)</summary>
			public static string service_sublayer_utilitynetwork {
				 get { return "service_sublayer_utilitynetwork"; }
			}
			///<summary>Returns the id string for &quot;service_wcs&quot; (Component, Catalog)</summary>
			public static string service_wcs {
				 get { return "service_wcs"; }
			}
			///<summary>Returns the id string for &quot;service_wcs_coverage&quot; (Component, Catalog)</summary>
			public static string service_wcs_coverage {
				 get { return "service_wcs_coverage"; }
			}
			///<summary>Returns the id string for &quot;service_wfs&quot; (Component, Catalog)</summary>
			public static string service_wfs {
				 get { return "service_wfs"; }
			}
			///<summary>Returns the id string for &quot;service_wfs_groupLayer&quot; (Component, Catalog)</summary>
			public static string service_wfs_groupLayer {
				 get { return "service_wfs_groupLayer"; }
			}
			///<summary>Returns the id string for &quot;service_wfs_layer&quot; (Component, Catalog)</summary>
			public static string service_wfs_layer {
				 get { return "service_wfs_layer"; }
			}
			///<summary>Returns the id string for &quot;service_wms&quot; (Component, Catalog)</summary>
			public static string service_wms {
				 get { return "service_wms"; }
			}
			///<summary>Returns the id string for &quot;service_wms_groupLayer&quot; (Component, Catalog)</summary>
			public static string service_wms_groupLayer {
				 get { return "service_wms_groupLayer"; }
			}
			///<summary>Returns the id string for &quot;service_wms_layer&quot; (Component, Catalog)</summary>
			public static string service_wms_layer {
				 get { return "service_wms_layer"; }
			}
			///<summary>Returns the id string for &quot;service_wmts&quot; (Component, Catalog)</summary>
			public static string service_wmts {
				 get { return "service_wmts"; }
			}
			///<summary>Returns the id string for &quot;service_wmts_layer&quot; (Component, Catalog)</summary>
			public static string service_wmts_layer {
				 get { return "service_wmts_layer"; }
			}
			///<summary>Returns the id string for &quot;service_workflow&quot; (Component, Catalog)</summary>
			public static string service_workflow {
				 get { return "service_workflow"; }
			}
			///<summary>Returns the id string for &quot;shapefile_general&quot; (Component, Catalog)</summary>
			public static string shapefile_general {
				 get { return "shapefile_general"; }
			}
			///<summary>Returns the id string for &quot;shapefile_line&quot; (Component, Catalog)</summary>
			public static string shapefile_line {
				 get { return "shapefile_line"; }
			}
			///<summary>Returns the id string for &quot;shapefile_multipatch&quot; (Component, Catalog)</summary>
			public static string shapefile_multipatch {
				 get { return "shapefile_multipatch"; }
			}
			///<summary>Returns the id string for &quot;shapefile_multipoint&quot; (Component, Catalog)</summary>
			public static string shapefile_multipoint {
				 get { return "shapefile_multipoint"; }
			}
			///<summary>Returns the id string for &quot;shapefile_network&quot; (Component, Catalog)</summary>
			public static string shapefile_network {
				 get { return "shapefile_network"; }
			}
			///<summary>Returns the id string for &quot;shapefile_point&quot; (Component, Catalog)</summary>
			public static string shapefile_point {
				 get { return "shapefile_point"; }
			}
			///<summary>Returns the id string for &quot;shapefile_polygon&quot; (Component, Catalog)</summary>
			public static string shapefile_polygon {
				 get { return "shapefile_polygon"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_general&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_general {
				 get { return "sqlite_fc_general"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_line&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_line {
				 get { return "sqlite_fc_line"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_multipoint&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_multipoint {
				 get { return "sqlite_fc_multipoint"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_multipatch&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_multipatch {
				 get { return "sqlite_fc_multipatch"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_annotation&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_annotation {
				 get { return "sqlite_fc_annotation"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_dimension&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_dimension {
				 get { return "sqlite_fc_dimension"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_point&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_point {
				 get { return "sqlite_fc_point"; }
			}
			///<summary>Returns the id string for &quot;sqlite_fc_polygon&quot; (Component, Catalog)</summary>
			public static string sqlite_fc_polygon {
				 get { return "sqlite_fc_polygon"; }
			}
			///<summary>Returns the id string for &quot;sqlite_table&quot; (Component, Catalog)</summary>
			public static string sqlite_table {
				 get { return "sqlite_table"; }
			}
			///<summary>Returns the id string for &quot;sqlite_raster&quot; (Component, Catalog)</summary>
			public static string sqlite_raster {
				 get { return "sqlite_raster"; }
			}
			///<summary>Returns the id string for &quot;raster_band_sqlite&quot; (Component, Catalog)</summary>
			public static string raster_band_sqlite {
				 get { return "raster_band_sqlite"; }
			}
			///<summary>Returns the id string for &quot;statisticalDataCollections_sdcx&quot; (Component, Catalog)</summary>
			public static string statisticalDataCollections_sdcx {
				 get { return "statisticalDataCollections_sdcx"; }
			}
			///<summary>Returns the id string for &quot;table_dbase&quot; (Component, Catalog)</summary>
			public static string table_dbase {
				 get { return "table_dbase"; }
			}
			///<summary>Returns the id string for &quot;table_general&quot; (Component, Catalog)</summary>
			public static string table_general {
				 get { return "table_general"; }
			}
			///<summary>Returns the id string for &quot;text_cam&quot; (Component, Catalog)</summary>
			public static string text_cam {
				 get { return "text_cam"; }
			}
			///<summary>Returns the id string for &quot;text_csv&quot; (Component, Catalog)</summary>
			public static string text_csv {
				 get { return "text_csv"; }
			}
			///<summary>Returns the id string for &quot;text_tab&quot; (Component, Catalog)</summary>
			public static string text_tab {
				 get { return "text_tab"; }
			}
			///<summary>Returns the id string for &quot;text_txt&quot; (Component, Catalog)</summary>
			public static string text_txt {
				 get { return "text_txt"; }
			}
			///<summary>Returns the id string for &quot;tin_dataset&quot; (Component, Catalog)</summary>
			public static string tin_dataset {
				 get { return "tin_dataset"; }
			}
			///<summary>Returns the id string for &quot;tool&quot; (Component, Catalog)</summary>
			public static string tool {
				 get { return "tool"; }
			}
			///<summary>Returns the id string for &quot;tool_component&quot; (Component, Catalog)</summary>
			public static string tool_component {
				 get { return "tool_component"; }
			}
			///<summary>Returns the id string for &quot;tool_model&quot; (Component, Catalog)</summary>
			public static string tool_model {
				 get { return "tool_model"; }
			}
			///<summary>Returns the id string for &quot;tool_script&quot; (Component, Catalog)</summary>
			public static string tool_script {
				 get { return "tool_script"; }
			}
			///<summary>Returns the id string for &quot;tool_service&quot; (Component, Catalog)</summary>
			public static string tool_service {
				 get { return "tool_service"; }
			}
			///<summary>Returns the id string for &quot;toolbox&quot; (Component, Catalog)</summary>
			public static string toolbox {
				 get { return "toolbox"; }
			}
			///<summary>Returns the id string for &quot;toolbox_egdb&quot; (Component, Catalog)</summary>
			public static string toolbox_egdb {
				 get { return "toolbox_egdb"; }
			}
			///<summary>Returns the id string for &quot;toolbox_fgdb&quot; (Component, Catalog)</summary>
			public static string toolbox_fgdb {
				 get { return "toolbox_fgdb"; }
			}
			///<summary>Returns the id string for &quot;toolbox_pyt&quot; (Component, Catalog)</summary>
			public static string toolbox_pyt {
				 get { return "toolbox_pyt"; }
			}
			///<summary>Returns the id string for &quot;toolset&quot; (Component, Catalog)</summary>
			public static string toolset {
				 get { return "toolset"; }
			}
			///<summary>Returns the id string for &quot;xml_file&quot; (Component, Catalog)</summary>
			public static string xml_file {
				 get { return "xml_file"; }
			}
			///<summary>Returns the id string for &quot;file_d2mx&quot; (Component, Catalog)</summary>
			public static string file_d2mx {
				 get { return "file_d2mx"; }
			}
			///<summary>Returns the id string for &quot;file_d2m&quot; (Component, Catalog)</summary>
			public static string file_d2m {
				 get { return "file_d2m"; }
			}
			///<summary>Returns the id string for &quot;segmentationProfile_sgprofile&quot; (Component, Catalog)</summary>
			public static string segmentationProfile_sgprofile {
				 get { return "segmentationProfile_sgprofile"; }
			}
			///<summary>Returns the id string for &quot;targetGroup_sgtargetgroup&quot; (Component, Catalog)</summary>
			public static string targetGroup_sgtargetgroup {
				 get { return "targetGroup_sgtargetgroup"; }
			}
			///<summary>Returns the id string for &quot;huffModel_huffmodel&quot; (Component, Catalog)</summary>
			public static string huffModel_huffmodel {
				 get { return "huffModel_huffmodel"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_all {
				 get { return "esri_browseDialogFilters_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_browseFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_browseFiles {
				 get { return "esri_browseDialogFilters_browseFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_3dsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_3dsFiles {
				 get { return "esri_browseDialogFilters_3dsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_2dVector_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_2dVector_files {
				 get { return "esri_browseDialogFilters_2dVector_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_3dModel_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_3dModel_files {
				 get { return "esri_browseDialogFilters_3dModel_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_any_addToMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_any_addToMap {
				 get { return "esri_browseDialogFilters_any_addToMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_bat_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_bat_file {
				 get { return "esri_browseDialogFilters_bat_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad {
				 get { return "esri_browseDialogFilters_cad"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_pointFeatureClasses&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_pointFeatureClasses {
				 get { return "esri_browseDialogFilters_cad_pointFeatureClasses"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_revit_workspace&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_revit_workspace {
				 get { return "esri_browseDialogFilters_revit_workspace"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_lineFeatureClasses&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_lineFeatureClasses {
				 get { return "esri_browseDialogFilters_cad_lineFeatureClasses"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_polygonFeatureClasses&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_polygonFeatureClasses {
				 get { return "esri_browseDialogFilters_cad_polygonFeatureClasses"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_multiPatchFeatureClasses&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_multiPatchFeatureClasses {
				 get { return "esri_browseDialogFilters_cad_multiPatchFeatureClasses"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_annotationFeatureClasses&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_annotationFeatureClasses {
				 get { return "esri_browseDialogFilters_cad_annotationFeatureClasses"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_dgn&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_dgn {
				 get { return "esri_browseDialogFilters_cad_dgn"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_dwg&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_dwg {
				 get { return "esri_browseDialogFilters_cad_dwg"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_dxf&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cad_dxf {
				 get { return "esri_browseDialogFilters_cad_dxf"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cal_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cal_file {
				 get { return "esri_browseDialogFilters_cal_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cam_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cam_file {
				 get { return "esri_browseDialogFilters_cam_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_clr_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_clr_file {
				 get { return "esri_browseDialogFilters_clr_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cmd_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_cmd_file {
				 get { return "esri_browseDialogFilters_cmd_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_com_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_com_file {
				 get { return "esri_browseDialogFilters_com_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_daeFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_daeFiles {
				 get { return "esri_browseDialogFilters_daeFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_default_addToMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_default_addToMap {
				 get { return "esri_browseDialogFilters_default_addToMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_default_addToStereoMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_default_addToStereoMap {
				 get { return "esri_browseDialogFilters_default_addToStereoMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_default_import&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_default_import {
				 get { return "esri_browseDialogFilters_default_import"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_default_importSpRef&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_default_importSpRef {
				 get { return "esri_browseDialogFilters_default_importSpRef"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_dic_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_dic_file {
				 get { return "esri_browseDialogFilters_dic_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_eat_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_eat_file {
				 get { return "esri_browseDialogFilters_eat_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_emf_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_emf_file {
				 get { return "esri_browseDialogFilters_emf_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_excel_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_excel_files {
				 get { return "esri_browseDialogFilters_excel_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_exe_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_exe_file {
				 get { return "esri_browseDialogFilters_exe_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_fdp_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_fdp_file {
				 get { return "esri_browseDialogFilters_fdp_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_portalonly&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_portalonly {
				 get { return "esri_browseDialogFilters_featureClasses_portalonly"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_localonly&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_localonly {
				 get { return "esri_browseDialogFilters_featureClasses_localonly"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_all {
				 get { return "esri_browseDialogFilters_featureClasses_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_all_withAGS&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_all_withAGS {
				 get { return "esri_browseDialogFilters_featureClasses_all_withAGS"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_annotation&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_annotation {
				 get { return "esri_browseDialogFilters_featureClasses_annotation"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_dimension&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_dimension {
				 get { return "esri_browseDialogFilters_featureClasses_dimension"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_line&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_line {
				 get { return "esri_browseDialogFilters_featureClasses_line"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_multipatch&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_multipatch {
				 get { return "esri_browseDialogFilters_featureClasses_multipatch"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_multipoint&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_multipoint {
				 get { return "esri_browseDialogFilters_featureClasses_multipoint"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_point&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_point {
				 get { return "esri_browseDialogFilters_featureClasses_point"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_polygon&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_polygon {
				 get { return "esri_browseDialogFilters_featureClasses_polygon"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureDatasets_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureDatasets_all {
				 get { return "esri_browseDialogFilters_featureDatasets_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_all {
				 get { return "esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_line&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_line {
				 get { return "esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_line"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_point&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_point {
				 get { return "esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_point"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_polygon&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_polygon {
				 get { return "esri_browseDialogFilters_featureClasses_DataStoreCatalogServices_polygon"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_all {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_line&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_line {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_line"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_multipatch&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_multipatch {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_multipatch"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_multipoint&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_multipoint {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_multipoint"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_point&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_point {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_point"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_pointmultipoint&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_pointmultipoint {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_pointmultipoint"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_layerProperties_polygon&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_layerProperties_polygon {
				 get { return "esri_browseDialogFilters_featureClasses_layerProperties_polygon"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_fltFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_fltFiles {
				 get { return "esri_browseDialogFilters_fltFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_folders&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_folders {
				 get { return "esri_browseDialogFilters_folders"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_folders_withCloudStorage&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_folders_withCloudStorage {
				 get { return "esri_browseDialogFilters_folders_withCloudStorage"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_folders_portal&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_folders_portal {
				 get { return "esri_browseDialogFilters_folders_portal"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_fmw_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_fmw_files {
				 get { return "esri_browseDialogFilters_fmw_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_all {
				 get { return "esri_browseDialogFilters_geodatabaseItems_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_addToMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_addToMap {
				 get { return "esri_browseDialogFilters_geodatabaseItems_addToMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_addToStereoMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_addToStereoMap {
				 get { return "esri_browseDialogFilters_geodatabaseItems_addToStereoMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_cadastralFabric&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_cadastralFabric {
				 get { return "esri_browseDialogFilters_geodatabaseItems_cadastralFabric"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_parcelDataset&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_parcelDataset {
				 get { return "esri_browseDialogFilters_geodatabaseItems_parcelDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_diagramDataset&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_diagramDataset {
				 get { return "esri_browseDialogFilters_geodatabaseItems_diagramDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_facilityNetwork&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_facilityNetwork {
				 get { return "esri_browseDialogFilters_geodatabaseItems_facilityNetwork"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_traceNetwork&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_traceNetwork {
				 get { return "esri_browseDialogFilters_geodatabaseItems_traceNetwork"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_featureClasses&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_featureClasses {
				 get { return "esri_browseDialogFilters_geodatabaseItems_featureClasses"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_featureDataset&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_featureDataset {
				 get { return "esri_browseDialogFilters_geodatabaseItems_featureDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_geometricNetwork&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_geometricNetwork {
				 get { return "esri_browseDialogFilters_geodatabaseItems_geometricNetwork"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_mosaicDataset&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_mosaicDataset {
				 get { return "esri_browseDialogFilters_geodatabaseItems_mosaicDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_networkDataset&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_networkDataset {
				 get { return "esri_browseDialogFilters_geodatabaseItems_networkDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_networkdiagram&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_networkdiagram {
				 get { return "esri_browseDialogFilters_geodatabaseItems_networkdiagram"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_rasterDataset&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_rasterDataset {
				 get { return "esri_browseDialogFilters_geodatabaseItems_rasterDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_relationship&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_relationship {
				 get { return "esri_browseDialogFilters_geodatabaseItems_relationship"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_annotation&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_annotation {
				 get { return "esri_browseDialogFilters_annotation"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_dimensions&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_dimensions {
				 get { return "esri_browseDialogFilters_dimensions"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_rasterCatalog&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_rasterCatalog {
				 get { return "esri_browseDialogFilters_geodatabaseItems_rasterCatalog"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_tables&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_tables {
				 get { return "esri_browseDialogFilters_geodatabaseItems_tables"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_terrain&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_terrain {
				 get { return "esri_browseDialogFilters_geodatabaseItems_terrain"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_toolbox&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_toolbox {
				 get { return "esri_browseDialogFilters_geodatabaseItems_toolbox"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_topology&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_topology {
				 get { return "esri_browseDialogFilters_geodatabaseItems_topology"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabases {
				 get { return "esri_browseDialogFilters_geodatabases"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_databases&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_databases {
				 get { return "esri_browseDialogFilters_databases"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_databases_add&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_databases_add {
				 get { return "esri_browseDialogFilters_databases_add"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabases_file {
				 get { return "esri_browseDialogFilters_geodatabases_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases_file_add_new&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabases_file_add_new {
				 get { return "esri_browseDialogFilters_geodatabases_file_add_new"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases_egdb&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabases_egdb {
				 get { return "esri_browseDialogFilters_geodatabases_egdb"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases_egdb_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabases_egdb_file {
				 get { return "esri_browseDialogFilters_geodatabases_egdb_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases_egdb_file_project&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabases_egdb_file_project {
				 get { return "esri_browseDialogFilters_geodatabases_egdb_file_project"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geojson_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geojson_file {
				 get { return "esri_browseDialogFilters_geojson_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gp_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gp_all {
				 get { return "esri_browseDialogFilters_gp_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gp_geoDatasets&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gp_geoDatasets {
				 get { return "esri_browseDialogFilters_gp_geoDatasets"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gp_scriptTools&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gp_scriptTools {
				 get { return "esri_browseDialogFilters_gp_scriptTools"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gp_tableView&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gp_tableView {
				 get { return "esri_browseDialogFilters_gp_tableView"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gpx_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gpx_file {
				 get { return "esri_browseDialogFilters_gpx_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gsg_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gsg_file {
				 get { return "esri_browseDialogFilters_gsg_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gt_tables&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_gt_tables {
				 get { return "esri_browseDialogFilters_gt_tables"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_glft_tables&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_glft_tables {
				 get { return "esri_browseDialogFilters_glft_tables"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_html_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_html_file {
				 get { return "esri_browseDialogFilters_html_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_json_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_json_file {
				 get { return "esri_browseDialogFilters_json_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_kml_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_kml_files {
				 get { return "esri_browseDialogFilters_kml_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_kml_filesOnly&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_kml_filesOnly {
				 get { return "esri_browseDialogFilters_kml_filesOnly"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_kmz_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_kmz_files {
				 get { return "esri_browseDialogFilters_kmz_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_feed_localAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_feed_localAndOnline {
				 get { return "esri_browseDialogFilters_feed_localAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_ipynb_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_ipynb_file {
				 get { return "esri_browseDialogFilters_ipynb_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_ipynb_localAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_ipynb_localAndOnline {
				 get { return "esri_browseDialogFilters_ipynb_localAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_lxp_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_lxp_file {
				 get { return "esri_browseDialogFilters_lxp_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_las&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_las {
				 get { return "esri_browseDialogFilters_las"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_las_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_las_file {
				 get { return "esri_browseDialogFilters_las_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_zlas_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_zlas_file {
				 get { return "esri_browseDialogFilters_zlas_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layers_allFileTypes&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layers_allFileTypes {
				 get { return "esri_browseDialogFilters_layers_allFileTypes"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layers_lpk&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layers_lpk {
				 get { return "esri_browseDialogFilters_layers_lpk"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layers_lpkx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layers_lpkx {
				 get { return "esri_browseDialogFilters_layers_lpkx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layers_lyr&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layers_lyr {
				 get { return "esri_browseDialogFilters_layers_lyr"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layers_lyrx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layers_lyrx {
				 get { return "esri_browseDialogFilters_layers_lyrx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layers_lyrx_localAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layers_lyrx_localAndOnline {
				 get { return "esri_browseDialogFilters_layers_lyrx_localAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_layouts_pagx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_layouts_pagx {
				 get { return "esri_browseDialogFilters_layouts_pagx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_local_layouts_pagx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_local_layouts_pagx {
				 get { return "esri_browseDialogFilters_local_layouts_pagx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_local_reports_rptx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_local_reports_rptx {
				 get { return "esri_browseDialogFilters_local_reports_rptx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_laz_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_laz_file {
				 get { return "esri_browseDialogFilters_laz_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_locators_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_locators_local {
				 get { return "esri_browseDialogFilters_locators_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_locators_local_and_project&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_locators_local_and_project {
				 get { return "esri_browseDialogFilters_locators_local_and_project"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_locators_allTypes&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_locators_allTypes {
				 get { return "esri_browseDialogFilters_locators_allTypes"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_locator_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_locator_online {
				 get { return "esri_browseDialogFilters_locator_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_all {
				 get { return "esri_browseDialogFilters_maps_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_file {
				 get { return "esri_browseDialogFilters_maps_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_project&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_project {
				 get { return "esri_browseDialogFilters_maps_project"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_local_maps_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_local_maps_file {
				 get { return "esri_browseDialogFilters_local_maps_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_map_webmap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_map_webmap {
				 get { return "esri_browseDialogFilters_map_webmap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_map_webscene&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_map_webscene {
				 get { return "esri_browseDialogFilters_map_webscene"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_arcmap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_arcmap {
				 get { return "esri_browseDialogFilters_maps_arcmap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_3dd&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_3dd {
				 get { return "esri_browseDialogFilters_maps_3dd"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_mxd&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_mxd {
				 get { return "esri_browseDialogFilters_maps_mxd"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_maps_sxd&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_maps_sxd {
				 get { return "esri_browseDialogFilters_maps_sxd"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_netcdf&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_netcdf {
				 get { return "esri_browseDialogFilters_netcdf"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_obj_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_obj_files {
				 get { return "esri_browseDialogFilters_obj_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_osgb_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_osgb_files {
				 get { return "esri_browseDialogFilters_osgb_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_allTypes&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_allTypes {
				 get { return "esri_browseDialogFilters_packages_allTypes"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_import&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_import {
				 get { return "esri_browseDialogFilters_packages_import"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_locator&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_locator {
				 get { return "esri_browseDialogFilters_packages_locator"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mpk&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mpk {
				 get { return "esri_browseDialogFilters_packages_map_mpk"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mpkx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mpkx {
				 get { return "esri_browseDialogFilters_packages_map_mpkx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mpkx_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mpkx_local {
				 get { return "esri_browseDialogFilters_packages_map_mpkx_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mpkx_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mpkx_online {
				 get { return "esri_browseDialogFilters_packages_map_mpkx_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mmpk&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mmpk {
				 get { return "esri_browseDialogFilters_packages_map_mmpk"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mmpk_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mmpk_local {
				 get { return "esri_browseDialogFilters_packages_map_mmpk_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_map_mmpk_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_map_mmpk_online {
				 get { return "esri_browseDialogFilters_packages_map_mmpk_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_layer_lpkx_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_layer_lpkx_local {
				 get { return "esri_browseDialogFilters_packages_layer_lpkx_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_layer_lpkx_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_layer_lpkx_online {
				 get { return "esri_browseDialogFilters_packages_layer_lpkx_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_gp&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_gp {
				 get { return "esri_browseDialogFilters_packages_gp"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_gp_gpk&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_gp_gpk {
				 get { return "esri_browseDialogFilters_packages_gp_gpk"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_gp_gpkx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_gp_gpkx {
				 get { return "esri_browseDialogFilters_packages_gp_gpkx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_gp_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_gp_local {
				 get { return "esri_browseDialogFilters_packages_gp_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_gp_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_gp_online {
				 get { return "esri_browseDialogFilters_packages_gp_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_project&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_project {
				 get { return "esri_browseDialogFilters_packages_project"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_project_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_project_local {
				 get { return "esri_browseDialogFilters_packages_project_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_project_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_project_online {
				 get { return "esri_browseDialogFilters_packages_project_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_rule&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_rule {
				 get { return "esri_browseDialogFilters_packages_rule"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_query_expression_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_query_expression_file {
				 get { return "esri_browseDialogFilters_query_expression_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rfm_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rfm_files {
				 get { return "esri_browseDialogFilters_rfm_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_tile&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_tile {
				 get { return "esri_browseDialogFilters_packages_tile"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_packages_vectorTile&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_packages_vectorTile {
				 get { return "esri_browseDialogFilters_packages_vectorTile"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_pdf_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_pdf_files {
				 get { return "esri_browseDialogFilters_pdf_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_prjFile&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_prjFile {
				 get { return "esri_browseDialogFilters_prjFile"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_projects_aprx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_projects_aprx {
				 get { return "esri_browseDialogFilters_projects_aprx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_projects&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_projects {
				 get { return "esri_browseDialogFilters_projects"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_projects_localAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_projects_localAndOnline {
				 get { return "esri_browseDialogFilters_projects_localAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_projects_computerAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_projects_computerAndOnline {
				 get { return "esri_browseDialogFilters_projects_computerAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_projects_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_projects_online {
				 get { return "esri_browseDialogFilters_projects_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_project_templates&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_project_templates {
				 get { return "esri_browseDialogFilters_project_templates"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_project_templates_allonline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_project_templates_allonline {
				 get { return "esri_browseDialogFilters_project_templates_allonline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_project_templates_local&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_project_templates_local {
				 get { return "esri_browseDialogFilters_project_templates_local"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_project_templates_localAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_project_templates_localAndOnline {
				 get { return "esri_browseDialogFilters_project_templates_localAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_project_templates_computerAndOnline&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_project_templates_computerAndOnline {
				 get { return "esri_browseDialogFilters_project_templates_computerAndOnline"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_project_templates_online&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_project_templates_online {
				 get { return "esri_browseDialogFilters_project_templates_online"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_py_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_py_files {
				 get { return "esri_browseDialogFilters_py_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_pythonIDE&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_pythonIDE {
				 get { return "esri_browseDialogFilters_pythonIDE"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_r_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_r_file {
				 get { return "esri_browseDialogFilters_r_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rasters&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rasters {
				 get { return "esri_browseDialogFilters_rasters"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rasters_GPrasterLayer&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rasters_GPrasterLayer {
				 get { return "esri_browseDialogFilters_rasters_GPrasterLayer"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rasters_GPSAGeoData_Sqlite&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rasters_GPSAGeoData_Sqlite {
				 get { return "esri_browseDialogFilters_rasters_GPSAGeoData_Sqlite"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rasters_GPSAGeoData&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rasters_GPSAGeoData {
				 get { return "esri_browseDialogFilters_rasters_GPSAGeoData"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rasters_imageServices&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rasters_imageServices {
				 get { return "esri_browseDialogFilters_rasters_imageServices"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rasterBands&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rasterBands {
				 get { return "esri_browseDialogFilters_rasterBands"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rmp_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rmp_file {
				 get { return "esri_browseDialogFilters_rmp_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_reports_rptx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_reports_rptx {
				 get { return "esri_browseDialogFilters_reports_rptx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_rul_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_rul_file {
				 get { return "esri_browseDialogFilters_rul_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayerAndSlpkFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayerAndSlpkFiles {
				 get { return "esri_browseDialogFilters_sceneServiceLayerAndSlpkFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayer&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayer {
				 get { return "esri_browseDialogFilters_sceneServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayers_3DObject&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayers_3DObject {
				 get { return "esri_browseDialogFilters_sceneServiceLayers_3DObject"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayers_integratedMesh&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayers_integratedMesh {
				 get { return "esri_browseDialogFilters_sceneServiceLayers_integratedMesh"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayers_line&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayers_line {
				 get { return "esri_browseDialogFilters_sceneServiceLayers_line"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayers_point&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayers_point {
				 get { return "esri_browseDialogFilters_sceneServiceLayers_point"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayers_pointCloud&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayers_pointCloud {
				 get { return "esri_browseDialogFilters_sceneServiceLayers_pointCloud"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sceneServiceLayers_polygon&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sceneServiceLayers_polygon {
				 get { return "esri_browseDialogFilters_sceneServiceLayers_polygon"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sdFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sdFiles {
				 get { return "esri_browseDialogFilters_sdFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_allServerConnectionFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_allServerConnectionFiles {
				 get { return "esri_browseDialogFilters_allServerConnectionFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sdcxFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sdcxFiles {
				 get { return "esri_browseDialogFilters_sdcxFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_acsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_acsFiles {
				 get { return "esri_browseDialogFilters_acsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_agsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_agsFiles {
				 get { return "esri_browseDialogFilters_agsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wcsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wcsFiles {
				 get { return "esri_browseDialogFilters_wcsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wmsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wmsFiles {
				 get { return "esri_browseDialogFilters_wmsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wfsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wfsFiles {
				 get { return "esri_browseDialogFilters_wfsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wmtsFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wmtsFiles {
				 get { return "esri_browseDialogFilters_wmtsFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_addToMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_addToMap {
				 get { return "esri_browseDialogFilters_services_addToMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_addToStereoMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_addToStereoMap {
				 get { return "esri_browseDialogFilters_services_addToStereoMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_all {
				 get { return "esri_browseDialogFilters_services_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_scene_sublayer&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_scene_sublayer {
				 get { return "esri_browseDialogFilters_services_scene_sublayer"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_elevation&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_elevation {
				 get { return "esri_browseDialogFilters_services_elevation"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_feature&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_feature {
				 get { return "esri_browseDialogFilters_services_feature"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_geocoding&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_geocoding {
				 get { return "esri_browseDialogFilters_services_geocoding"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_geodata&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_geodata {
				 get { return "esri_browseDialogFilters_services_geodata"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_geoprocessing&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_geoprocessing {
				 get { return "esri_browseDialogFilters_services_geoprocessing"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_globe&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_globe {
				 get { return "esri_browseDialogFilters_services_globe"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_stream&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_stream {
				 get { return "esri_browseDialogFilters_services_stream"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_features_new&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_features_new {
				 get { return "esri_browseDialogFilters_services_hosted_features_new"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_features_new_exclude_view&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_features_new_exclude_view {
				 get { return "esri_browseDialogFilters_services_hosted_features_new_exclude_view"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_features_hosted_tiles_map_image_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_features_hosted_tiles_map_image_all {
				 get { return "esri_browseDialogFilters_services_hosted_features_hosted_tiles_map_image_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_scenes_new&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_scenes_new {
				 get { return "esri_browseDialogFilters_services_hosted_scenes_new"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_tiles_new&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_tiles_new {
				 get { return "esri_browseDialogFilters_services_hosted_tiles_new"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_vectortiles_new&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_vectortiles_new {
				 get { return "esri_browseDialogFilters_services_hosted_vectortiles_new"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_image&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_image {
				 get { return "esri_browseDialogFilters_services_image"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_map&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_map {
				 get { return "esri_browseDialogFilters_services_map"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_mapimage&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_mapimage {
				 get { return "esri_browseDialogFilters_services_mapimage"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_mapimage_nosublayer&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_mapimage_nosublayer {
				 get { return "esri_browseDialogFilters_services_mapimage_nosublayer"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_network&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_network {
				 get { return "esri_browseDialogFilters_services_network"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_tilingscheme&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_tilingscheme {
				 get { return "esri_browseDialogFilters_services_tilingscheme"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_tilingscheme_vectortile&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_tilingscheme_vectortile {
				 get { return "esri_browseDialogFilters_services_tilingscheme_vectortile"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_tilingscheme_elevationservice&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_tilingscheme_elevationservice {
				 get { return "esri_browseDialogFilters_services_tilingscheme_elevationservice"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_wcs&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_wcs {
				 get { return "esri_browseDialogFilters_services_wcs"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_wfs&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_wfs {
				 get { return "esri_browseDialogFilters_services_wfs"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_wms&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_wms {
				 get { return "esri_browseDialogFilters_services_wms"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_wmts&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_wmts {
				 get { return "esri_browseDialogFilters_services_wmts"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_shapefiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_shapefiles {
				 get { return "esri_browseDialogFilters_shapefiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_skpFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_skpFiles {
				 get { return "esri_browseDialogFilters_skpFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_slpkFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_slpkFiles {
				 get { return "esri_browseDialogFilters_slpkFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_spkFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_spkFiles {
				 get { return "esri_browseDialogFilters_spkFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_spRefImportDatasets&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_spRefImportDatasets {
				 get { return "esri_browseDialogFilters_spRefImportDatasets"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_stylesPortal&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_stylesPortal {
				 get { return "esri_browseDialogFilters_stylesPortal"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_stylesProject&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_stylesProject {
				 get { return "esri_browseDialogFilters_stylesProject"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_styleFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_styleFiles {
				 get { return "esri_browseDialogFilters_styleFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_styleFilesLegacy&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_styleFilesLegacy {
				 get { return "esri_browseDialogFilters_styleFilesLegacy"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_styleFilesNew&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_styleFilesNew {
				 get { return "esri_browseDialogFilters_styleFilesNew"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_styleFilesNew_LeftPane&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_styleFilesNew_LeftPane {
				 get { return "esri_browseDialogFilters_styleFilesNew_LeftPane"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_surfaces_elevation&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_surfaces_elevation {
				 get { return "esri_browseDialogFilters_surfaces_elevation"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_surfaces&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_surfaces {
				 get { return "esri_browseDialogFilters_surfaces"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_svgFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_svgFiles {
				 get { return "esri_browseDialogFilters_svgFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_swm_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_swm_files {
				 get { return "esri_browseDialogFilters_swm_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tables_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_tables_all {
				 get { return "esri_browseDialogFilters_tables_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tables_DataStoreCatalogServices&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_tables_DataStoreCatalogServices {
				 get { return "esri_browseDialogFilters_tables_DataStoreCatalogServices"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tables_dbase&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_tables_dbase {
				 get { return "esri_browseDialogFilters_tables_dbase"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_taskFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_taskFiles {
				 get { return "esri_browseDialogFilters_taskFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_oics&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_oics {
				 get { return "esri_browseDialogFilters_oics"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_textFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_textFiles {
				 get { return "esri_browseDialogFilters_textFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_textFiles_csv&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_textFiles_csv {
				 get { return "esri_browseDialogFilters_textFiles_csv"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_textFiles_tab&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_textFiles_tab {
				 get { return "esri_browseDialogFilters_textFiles_tab"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_textFiles_txt&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_textFiles_txt {
				 get { return "esri_browseDialogFilters_textFiles_txt"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tinDatasets&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_tinDatasets {
				 get { return "esri_browseDialogFilters_tinDatasets"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_toolboxes&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_toolboxes {
				 get { return "esri_browseDialogFilters_toolboxes"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_toolboxes_new&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_toolboxes_new {
				 get { return "esri_browseDialogFilters_toolboxes_new"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_toolboxes_pyt&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_toolboxes_pyt {
				 get { return "esri_browseDialogFilters_toolboxes_pyt"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_toolboxes_tbxFile&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_toolboxes_tbxFile {
				 get { return "esri_browseDialogFilters_toolboxes_tbxFile"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tools&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_tools {
				 get { return "esri_browseDialogFilters_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_video_fullMotion&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_video_fullMotion {
				 get { return "esri_browseDialogFilters_video_fullMotion"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_video_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_video_files {
				 get { return "esri_browseDialogFilters_video_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_video_files_avi&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_video_files_avi {
				 get { return "esri_browseDialogFilters_video_files_avi"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_video_files_mov&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_video_files_mov {
				 get { return "esri_browseDialogFilters_video_files_mov"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_workspaces_all&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_workspaces_all {
				 get { return "esri_browseDialogFilters_workspaces_all"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wldFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wldFiles {
				 get { return "esri_browseDialogFilters_wldFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wld3Files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wld3Files {
				 get { return "esri_browseDialogFilters_wld3Files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_wrlFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_wrlFiles {
				 get { return "esri_browseDialogFilters_wrlFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_xmlFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_xmlFiles {
				 get { return "esri_browseDialogFilters_xmlFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_xslt_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_xslt_files {
				 get { return "esri_browseDialogFilters_xslt_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_zip_files&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_zip_files {
				 get { return "esri_browseDialogFilters_zip_files"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_All_Supported_CreateSceneLayerPackage&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_All_Supported_CreateSceneLayerPackage {
				 get { return "esri_browseDialogFilters_All_Supported_CreateSceneLayerPackage"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabaseItems_featureClasses_and_tables&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_geodatabaseItems_featureClasses_and_tables {
				 get { return "esri_browseDialogFilters_geodatabaseItems_featureClasses_and_tables"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_locators_local_and_project_noserver&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_locators_local_and_project_noserver {
				 get { return "esri_browseDialogFilters_locators_local_and_project_noserver"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sgprofileFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sgprofileFiles {
				 get { return "esri_browseDialogFilters_sgprofileFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_sgtargetgroupFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_sgtargetgroupFiles {
				 get { return "esri_browseDialogFilters_sgtargetgroupFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_huffmodelFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_huffmodelFiles {
				 get { return "esri_browseDialogFilters_huffmodelFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureservices_hosted_table&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureservices_hosted_table {
				 get { return "esri_browseDialogFilters_featureservices_hosted_table"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tables_geocode_file&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_tables_geocode_file {
				 get { return "esri_browseDialogFilters_tables_geocode_file"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_createSceneLayerPackage&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_createSceneLayerPackage {
				 get { return "esri_browseDialogFilters_composite_createSceneLayerPackage"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_addToMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_addToMap {
				 get { return "esri_browseDialogFilters_composite_addToMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_addToStereoMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_addToStereoMap {
				 get { return "esri_browseDialogFilters_composite_addToStereoMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_elevationSource&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_elevationSource {
				 get { return "esri_browseDialogFilters_composite_elevationSource"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_featureClasses_allPoint&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_featureClasses_allPoint {
				 get { return "esri_browseDialogFilters_featureClasses_allPoint"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_geodatabases_add&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_geodatabases_add {
				 get { return "esri_browseDialogFilters_composite_geodatabases_add"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_maps_import&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_maps_import {
				 get { return "esri_browseDialogFilters_composite_maps_import"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_rasters_imageServices&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_rasters_imageServices {
				 get { return "esri_browseDialogFilters_composite_rasters_imageServices"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_spatialRefImport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_spatialRefImport {
				 get { return "esri_browseDialogFilters_composite_spatialRefImport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_toolboxes&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_toolboxes {
				 get { return "esri_browseDialogFilters_composite_toolboxes"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_workspaces&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_workspaces {
				 get { return "esri_browseDialogFilters_composite_workspaces"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_services_hosted_features_hosted_tiles_map_image&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_services_hosted_features_hosted_tiles_map_image {
				 get { return "esri_browseDialogFilters_services_hosted_features_hosted_tiles_map_image"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_serverConnections&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_serverConnections {
				 get { return "esri_browseDialogFilters_composite_serverConnections"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_sdcx&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_sdcx {
				 get { return "esri_browseDialogFilters_composite_sdcx"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_tableBasedItemsForFCWizard&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_tableBasedItemsForFCWizard {
				 get { return "esri_browseDialogFilters_composite_tableBasedItemsForFCWizard"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_sgprofile&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_sgprofile {
				 get { return "esri_browseDialogFilters_composite_sgprofile"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_sgtargetgroup&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_sgtargetgroup {
				 get { return "esri_browseDialogFilters_composite_sgtargetgroup"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_huffmodel&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Catalog)</summary>
			public static string esri_browseDialogFilters_composite_huffmodel {
				 get { return "esri_browseDialogFilters_composite_huffmodel"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_MapItem&quot; (ArcGIS.Desktop.Internal.Catalog.MapItem, Catalog)</summary>
			public static string esri_itemInfoType_MapItem {
				 get { return "esri_itemInfoType_MapItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_MapProjectMultiItem&quot; (ArcGIS.Desktop.Internal.Catalog.MapProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_MapProjectMultiItem {
				 get { return "esri_itemInfoType_MapProjectMultiItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_LayerItem&quot; (ArcGIS.Desktop.Internal.Catalog.LayerItem, Catalog)</summary>
			public static string esri_itemInfoType_LayerItem {
				 get { return "esri_itemInfoType_LayerItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_TableItem&quot; (ArcGIS.Desktop.Internal.Catalog.TableItem, Catalog)</summary>
			public static string esri_itemInfoType_TableItem {
				 get { return "esri_itemInfoType_TableItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_PackageProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.PackageProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_PackageProjectItem {
				 get { return "esri_itemInfoType_PackageProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_PackageItem&quot; (ArcGIS.Desktop.Internal.Catalog.PackageItem, Catalog)</summary>
			public static string esri_itemInfoType_PackageItem {
				 get { return "esri_itemInfoType_PackageItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_GDBItem&quot; (ArcGIS.Desktop.Internal.Catalog.GDBItem, Catalog)</summary>
			public static string esri_itemInfoType_GDBItem {
				 get { return "esri_itemInfoType_GDBItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_EGDBItem&quot; (ArcGIS.Desktop.Internal.Catalog.GDBItem, Catalog)</summary>
			public static string esri_itemInfoType_EGDBItem {
				 get { return "esri_itemInfoType_EGDBItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ShapefileItem&quot; (ArcGIS.Desktop.Internal.Catalog.ShapefileItem, Catalog)</summary>
			public static string esri_itemInfoType_ShapefileItem {
				 get { return "esri_itemInfoType_ShapefileItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_CadfileItem&quot; (ArcGIS.Desktop.Internal.Catalog.CadfileItem, Catalog)</summary>
			public static string esri_itemInfoType_CadfileItem {
				 get { return "esri_itemInfoType_CadfileItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_CadDatasetItem&quot; (ArcGIS.Desktop.Internal.Catalog.CadDatasetItem, Catalog)</summary>
			public static string esri_itemInfoType_CadDatasetItem {
				 get { return "esri_itemInfoType_CadDatasetItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_BimFileWorkspaceItem&quot; (ArcGIS.Desktop.Internal.Catalog.GDBItem, Catalog)</summary>
			public static string esri_itemInfoType_BimFileWorkspaceItem {
				 get { return "esri_itemInfoType_BimFileWorkspaceItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_BimFileDatasetItem&quot; (ArcGIS.Desktop.Internal.Catalog.BimFileItem, Catalog)</summary>
			public static string esri_itemInfoType_BimFileDatasetItem {
				 get { return "esri_itemInfoType_BimFileDatasetItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_BimFileFeatureClassItem&quot; (ArcGIS.Desktop.Internal.Catalog.BimFileItem, Catalog)</summary>
			public static string esri_itemInfoType_BimFileFeatureClassItem {
				 get { return "esri_itemInfoType_BimFileFeatureClassItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_googleEarthItem&quot; (ArcGIS.Desktop.Internal.Catalog.GoogleEarthItem, Catalog)</summary>
			public static string esri_itemInfoType_googleEarthItem {
				 get { return "esri_itemInfoType_googleEarthItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ServiceProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.ServiceProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_ServiceProjectItem {
				 get { return "esri_itemInfoType_ServiceProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ServiceItem&quot; (ArcGIS.Desktop.Internal.Catalog.ServiceItem, Catalog)</summary>
			public static string esri_itemInfoType_ServiceItem {
				 get { return "esri_itemInfoType_ServiceItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ServiceFolderItem&quot; (ArcGIS.Desktop.Internal.Catalog.ServiceFolderItem, Catalog)</summary>
			public static string esri_itemInfoType_ServiceFolderItem {
				 get { return "esri_itemInfoType_ServiceFolderItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ServiceContentItem&quot; (ArcGIS.Desktop.Internal.Catalog.ServiceContentItem, Catalog)</summary>
			public static string esri_itemInfoType_ServiceContentItem {
				 get { return "esri_itemInfoType_ServiceContentItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_RasterItem&quot; (ArcGIS.Desktop.Internal.Catalog.RasterItem, Catalog)</summary>
			public static string esri_itemInfoType_RasterItem {
				 get { return "esri_itemInfoType_RasterItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_TinItem&quot; (ArcGIS.Desktop.Internal.Catalog.TinItem, Catalog)</summary>
			public static string esri_itemInfoType_TinItem {
				 get { return "esri_itemInfoType_TinItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_LasDatasetItem&quot; (ArcGIS.Desktop.Internal.Catalog.LasDatasetItem, Catalog)</summary>
			public static string esri_itemInfoType_LasDatasetItem {
				 get { return "esri_itemInfoType_LasDatasetItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_VideoFileItem&quot; (ArcGIS.Desktop.Internal.Catalog.VideoFileItem, Catalog)</summary>
			public static string esri_itemInfoType_VideoFileItem {
				 get { return "esri_itemInfoType_VideoFileItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_NotebookItem&quot; (ArcGIS.Desktop.Catalog.NotebookItem, Catalog)</summary>
			public static string esri_itemInfoType_NotebookItem {
				 get { return "esri_itemInfoType_NotebookItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_FolderConnectionItem&quot; (ArcGIS.Desktop.Catalog.FolderConnectionProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_FolderConnectionItem {
				 get { return "esri_itemInfoType_FolderConnectionItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_GDBProjectItem&quot; (ArcGIS.Desktop.Catalog.GDBProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_GDBProjectItem {
				 get { return "esri_itemInfoType_GDBProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ServerConnectionProjectItem&quot; (ArcGIS.Desktop.Catalog.ServerConnectionProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_ServerConnectionProjectItem {
				 get { return "esri_itemInfoType_ServerConnectionProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_CloudStorageConnectionProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.CloudStorageConnectionProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_CloudStorageConnectionProjectItem {
				 get { return "esri_itemInfoType_CloudStorageConnectionProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_CloudStorageFolderItem&quot; (ArcGIS.Desktop.Internal.Catalog.CloudStorageFolderItem, Catalog)</summary>
			public static string esri_itemInfoType_CloudStorageFolderItem {
				 get { return "esri_itemInfoType_CloudStorageFolderItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_CloudStorageItem&quot; (ArcGIS.Desktop.Internal.Catalog.CloudStorageItem, Catalog)</summary>
			public static string esri_itemInfoType_CloudStorageItem {
				 get { return "esri_itemInfoType_CloudStorageItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_StatisticalDataCollectionProjectItem&quot; (ArcGIS.Desktop.Catalog.StatisticalDataCollectionProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_StatisticalDataCollectionProjectItem {
				 get { return "esri_itemInfoType_StatisticalDataCollectionProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_SegmentationProfileProjectItem&quot; (ArcGIS.Desktop.Catalog.SegmentationProfileProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_SegmentationProfileProjectItem {
				 get { return "esri_itemInfoType_SegmentationProfileProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_TargetGroupProjectItem&quot; (ArcGIS.Desktop.Catalog.SegmentationTargetGroupProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_TargetGroupProjectItem {
				 get { return "esri_itemInfoType_TargetGroupProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_HuffModelProjectItem&quot; (ArcGIS.Desktop.Catalog.HuffModelProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_HuffModelProjectItem {
				 get { return "esri_itemInfoType_HuffModelProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_LocatorFileProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.LocatorFileItem, Catalog)</summary>
			public static string esri_itemInfoType_LocatorFileProjectItem {
				 get { return "esri_itemInfoType_LocatorFileProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ComputerPlace&quot; (ArcGIS.Desktop.Internal.Catalog.BrowseComputerModel, Catalog)</summary>
			public static string esri_itemInfoType_ComputerPlace {
				 get { return "esri_itemInfoType_ComputerPlace"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_UserContentPlace&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineUserContent, Catalog)</summary>
			public static string esri_itemInfoType_UserContentPlace {
				 get { return "esri_itemInfoType_UserContentPlace"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_UserGroupsPlace&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineGroups, Catalog)</summary>
			public static string esri_itemInfoType_UserGroupsPlace {
				 get { return "esri_itemInfoType_UserGroupsPlace"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_AllContentPlace&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineFeatured, Catalog)</summary>
			public static string esri_itemInfoType_AllContentPlace {
				 get { return "esri_itemInfoType_AllContentPlace"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_LivingAtlasPlace&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineLivingAtlas, Catalog)</summary>
			public static string esri_itemInfoType_LivingAtlasPlace {
				 get { return "esri_itemInfoType_LivingAtlasPlace"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_OnlineProjectItem {
				 get { return "esri_itemInfoType_OnlineProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineItemInternal, Catalog)</summary>
			public static string esri_itemInfoType_OnlineItem {
				 get { return "esri_itemInfoType_OnlineItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineCatalogServiceProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineCatalogServiceItem, Catalog)</summary>
			public static string esri_itemInfoType_OnlineCatalogServiceProjectItem {
				 get { return "esri_itemInfoType_OnlineCatalogServiceProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineContainerServiceProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineContainerServiceItem, Catalog)</summary>
			public static string esri_itemInfoType_OnlineContainerServiceProjectItem {
				 get { return "esri_itemInfoType_OnlineContainerServiceProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineSubLayerProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineSubLayerItem, Catalog)</summary>
			public static string esri_itemInfoType_OnlineSubLayerProjectItem {
				 get { return "esri_itemInfoType_OnlineSubLayerProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineSubToolProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineSubToolItem, Catalog)</summary>
			public static string esri_itemInfoType_OnlineSubToolProjectItem {
				 get { return "esri_itemInfoType_OnlineSubToolProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineGroupLayerProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineSubGroupLayerItem, Catalog)</summary>
			public static string esri_itemInfoType_OnlineGroupLayerProjectItem {
				 get { return "esri_itemInfoType_OnlineGroupLayerProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_LocatorsProjectItem&quot; (ArcGIS.Desktop.Catalog.LocatorsConnectionProjectItem, Catalog)</summary>
			public static string esri_itemInfoType_LocatorsProjectItem {
				 get { return "esri_itemInfoType_LocatorsProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineGroupProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineGroup, Catalog)</summary>
			public static string esri_itemInfoType_OnlineGroupProjectItem {
				 get { return "esri_itemInfoType_OnlineGroupProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineLivingAtlasProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineLivingAtlas, Catalog)</summary>
			public static string esri_itemInfoType_OnlineLivingAtlasProjectItem {
				 get { return "esri_itemInfoType_OnlineLivingAtlasProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_OnlineFolderProjectItem&quot; (ArcGIS.Desktop.Internal.Catalog.OnlineFolder, Catalog)</summary>
			public static string esri_itemInfoType_OnlineFolderProjectItem {
				 get { return "esri_itemInfoType_OnlineFolderProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_SundryItem&quot; (ArcGIS.Desktop.Internal.Catalog.SundryItem, Catalog)</summary>
			public static string esri_itemInfoType_SundryItem {
				 get { return "esri_itemInfoType_SundryItem"; }
			}
			///<summary>Returns the id string for &quot;esri_notebook_container&quot; (ArcGIS.Desktop.Internal.Catalog.NotebookContainer, Catalog)</summary>
			public static string esri_notebook_container {
				 get { return "esri_notebook_container"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_Databases {
				 get { return "esri_Databases"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_Folders {
				 get { return "esri_Folders"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_isValidAndOpenProjectCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_isValidAndOpenProjectCondition {
				 get { return "esri_projectItem_isValidAndOpenProjectCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_EnterpriseGeodatabaseCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_EnterpriseGeodatabaseCondition {
				 get { return "esri_projectItem_EnterpriseGeodatabaseCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_EnterpriseGeodatabaseAndStandardLicenseCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_EnterpriseGeodatabaseAndStandardLicenseCondition {
				 get { return "esri_projectItem_EnterpriseGeodatabaseAndStandardLicenseCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_geoDatabaseConnectionCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_geoDatabaseConnectionCondition {
				 get { return "esri_projectItem_geoDatabaseConnectionCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_canAddGlobalIDCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_canAddGlobalIDCondition {
				 get { return "esri_projectItem_canAddGlobalIDCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_geoDatabaseMakeDefaultCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_geoDatabaseMakeDefaultCondition {
				 get { return "esri_projectItem_geoDatabaseMakeDefaultCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_geoDatabaseCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_geoDatabaseCondition {
				 get { return "esri_projectItem_geoDatabaseCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_mapSelectedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_mapSelectedCondition {
				 get { return "esri_project_mapSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_featureClassSelectedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_featureClassSelectedCondition {
				 get { return "esri_project_featureClassSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_rasterSelectedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_rasterSelectedCondition {
				 get { return "esri_project_rasterSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Coming soon&quot; (Condition, Catalog)</summary>
			public static string esri_project_setButtonCondition {
				 get { return "esri_project_setButtonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_databaseConnectionCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_databaseConnectionCondition {
				 get { return "esri_project_databaseConnectionCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultFolderSelectedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_DefaultFolderSelectedCondition {
				 get { return "esri_projectItem_DefaultFolderSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultGDBSelectedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_DefaultGDBSelectedCondition {
				 get { return "esri_projectItem_DefaultGDBSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultGDBIsNotSelectedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_DefaultGDBIsNotSelectedCondition {
				 get { return "esri_projectItem_DefaultGDBIsNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsVersionedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsVersionedCondition {
				 get { return "esri_projectItem_SelectedItemIsVersionedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotVersionedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotVersionedCondition {
				 get { return "esri_projectItem_SelectedItemIsNotVersionedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotVersionedOrArchivedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotVersionedOrArchivedCondition {
				 get { return "esri_projectItem_SelectedItemIsNotVersionedOrArchivedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsArchiveEnabledCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsArchiveEnabledCondition {
				 get { return "esri_projectItem_SelectedItemIsArchiveEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotArchiveEnabledCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotArchiveEnabledCondition {
				 get { return "esri_projectItem_SelectedItemIsNotArchiveEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsEditorTrackingEnabledCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsEditorTrackingEnabledCondition {
				 get { return "esri_projectItem_SelectedItemIsEditorTrackingEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotEditorTrackingEnabledCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotEditorTrackingEnabledCondition {
				 get { return "esri_projectItem_SelectedItemIsNotEditorTrackingEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotCompressedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotCompressedCondition {
				 get { return "esri_projectItem_SelectedItemIsNotCompressedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsCompressedCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsCompressedCondition {
				 get { return "esri_projectItem_SelectedItemIsCompressedCondition"; }
			}
			///<summary>Returns the id string for &quot;Project item is a local geodatabase or, if the license level is standard or higher, an enterprise geodatabase&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_IsLocalGDBorEnterpriseGDBWithStandardLicenseCondition {
				 get { return "esri_projectItem_IsLocalGDBorEnterpriseGDBWithStandardLicenseCondition"; }
			}
			///<summary>Returns the id string for &quot;Project item is valid&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_isValidCondition {
				 get { return "esri_projectItem_isValidCondition"; }
			}
			///<summary>Returns the id string for &quot;Spatial analyst model is usable&quot; (Condition, Catalog)</summary>
			public static string esri_samodels_isValidCondition {
				 get { return "esri_samodels_isValidCondition"; }
			}
			///<summary>Returns the id string for &quot;Project item is a local geodatabase or, if the license level is standard or higher, an enterprise geodatabase&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_IsLocalGDBorDBorEnterpriseGDBorDBWithStandardLicenseCondition {
				 get { return "esri_projectItem_IsLocalGDBorDBorEnterpriseGDBorDBWithStandardLicenseCondition"; }
			}
			///<summary>Returns the id string for &quot;License level is standard or higher&quot; (Condition, Catalog)</summary>
			public static string esri_license_HasStandardLicenseCondition {
				 get { return "esri_license_HasStandardLicenseCondition"; }
			}
			///<summary>Returns the id string for &quot;License level is standard or higher and the item is not a non-GDB&quot; (Condition, Catalog)</summary>
			public static string esri_license_HasStandardLicenseAndNotNonGDBItemCondition {
				 get { return "esri_license_HasStandardLicenseAndNotNonGDBItemCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_canPasteToFeatureDatasetCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_canPasteToFeatureDatasetCondition {
				 get { return "esri_project_canPasteToFeatureDatasetCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_canPasteToDatabaseCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_canPasteToDatabaseCondition {
				 get { return "esri_project_canPasteToDatabaseCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_canPasteFileGDBCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_canPasteFileGDBCondition {
				 get { return "esri_project_canPasteFileGDBCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_project_canPasteToFolderCondition&quot; (Condition, Catalog)</summary>
			public static string esri_project_canPasteToFolderCondition {
				 get { return "esri_project_canPasteToFolderCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_geodatabase_dummyConditionWhichIsAlwaysFalse {
				 get { return "esri_geodatabase_dummyConditionWhichIsAlwaysFalse"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_openWorkspaceReplicaCondition {
				 get { return "esri_projectItem_openWorkspaceReplicaCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_openWorkspaceDomainsCondition {
				 get { return "esri_projectItem_openWorkspaceDomainsCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_openDomainsCondition {
				 get { return "esri_projectItem_openDomainsCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_openVersionsCondition {
				 get { return "esri_projectItem_openVersionsCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_openSubtypesCondition {
				 get { return "esri_projectItem_openSubtypesCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_isNotRegisteredWithGDBCondition {
				 get { return "esri_projectItem_isNotRegisteredWithGDBCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_favoriteItem_isAddedToNewProjectsCondition {
				 get { return "esri_favoriteItem_isAddedToNewProjectsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsLasDatasetCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsLasDatasetCondition {
				 get { return "esri_projectItem_SelectedItemIsLasDatasetCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasColorBalancingCondition {
				 get { return "esri_projectItem_mosaicDatasetHasColorBalancingCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasSeamLineCondition {
				 get { return "esri_projectItem_mosaicDatasetHasSeamLineCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasStereoModelCondition {
				 get { return "esri_projectItem_mosaicDatasetHasStereoModelCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasLogCondition {
				 get { return "esri_projectItem_mosaicDatasetHasLogCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_project_canCreateAnalyst3DDatasetWithValidLicenseCondition {
				 get { return "esri_project_canCreateAnalyst3DDatasetWithValidLicenseCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_gdbMosaicDatasetCondition {
				 get { return "esri_projectItem_gdbMosaicDatasetCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_managedMosaicDatasetCondition {
				 get { return "esri_projectItem_managedMosaicDatasetCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsParcelTopologyEnabledCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsParcelTopologyEnabledCondition {
				 get { return "esri_projectItem_SelectedItemIsParcelTopologyEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsParcelTopologyDisabledCondition&quot; (Condition, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsParcelTopologyDisabledCondition {
				 get { return "esri_projectItem_SelectedItemIsParcelTopologyDisabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_replica_SelectedIsNotCheckoutCondition&quot; (Condition, Catalog)</summary>
			public static string esri_replica_SelectedIsNotCheckoutCondition {
				 get { return "esri_replica_SelectedIsNotCheckoutCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;DatabaseModule&quot; (DatabaseModule, Catalog)</summary>
			public static string esri_database_module {
				 get { return "esri_database_module"; }
			}
			///<summary>Returns the id string for &quot;CreateTopologyWizardModule&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateTopology.TopologyWizardModule, Catalog)</summary>
			public static string esri_topology_wizard_module {
				 get { return "esri_topology_wizard_module"; }
			}
			///<summary>Returns the id string for &quot;PropertyPageModule&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.PropertyPageModule, Catalog)</summary>
			public static string esri_propertyPage_module {
				 get { return "esri_propertyPage_module"; }
			}
			///<summary>Returns the id string for &quot;GeoDatabaseModule&quot; (GeoDatabaseModule, Catalog)</summary>
			public static string esri_geodatabase_module {
				 get { return "esri_geodatabase_module"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_agsConnectionPropertySheet {
				 get { return "esri_catalog_agsConnectionPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_ogcConnectionPropertySheet {
				 get { return "esri_catalog_ogcConnectionPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_featureClassPropertySheet {
				 get { return "esri_catalog_featureClassPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_shapeFilePropertySheet {
				 get { return "esri_catalog_shapeFilePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_relationshipClassPropertySheet {
				 get { return "esri_catalog_relationshipClassPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_tablePropertySheet {
				 get { return "esri_catalog_tablePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Database Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_databasePropertySheet {
				 get { return "esri_catalog_databasePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_utilityNetworkPropertySheet {
				 get { return "esri_catalog_utilityNetworkPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_networkDiagramPropertySheet {
				 get { return "esri_catalog_networkDiagramPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_featureDatasetPropertySheet {
				 get { return "esri_catalog_featureDatasetPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_networkDatasetPropertySheet {
				 get { return "esri_catalog_networkDatasetPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_topologyPropertySheet {
				 get { return "esri_catalog_topologyPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_lasDatasetPropertySheet {
				 get { return "esri_catalog_lasDatasetPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_parcelDatasetPropertySheet {
				 get { return "esri_catalog_parcelDatasetPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_tinDatasetPropertySheet {
				 get { return "esri_catalog_tinDatasetPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_terrainDatasetPropertySheet {
				 get { return "esri_catalog_terrainDatasetPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Sheet, Catalog)</summary>
			public static string esri_catalog_ReplicaPropertySheet {
				 get { return "esri_catalog_ReplicaPropertySheet"; }
			}
		}
		public static partial class Wizard {
			///<summary>Returns the id string for &quot;Create Topology Wizard&quot; (Wizard, Catalog)</summary>
			public static string esri_catalog_createTopologyWizard {
				 get { return "esri_catalog_createTopologyWizard"; }
			}
			///<summary>Returns the id string for &quot;Create Feature Class&quot; (Wizard, Catalog)</summary>
			public static string esri_catalog_createFeatureClassFromGDB_Wizard {
				 get { return "esri_catalog_createFeatureClassFromGDB_Wizard"; }
			}
			///<summary>Returns the id string for &quot;Create Table&quot; (Wizard, Catalog)</summary>
			public static string esri_catalog_createTableFromGDB_Wizard {
				 get { return "esri_catalog_createTableFromGDB_Wizard"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;ArcGIS Pro Layout File&quot; (Menu, Catalog)</summary>
			public static string pagxItemPAGXTypeMenu {
				 get { return "pagxItemPAGXTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS Pro Report File&quot; (Menu, Catalog)</summary>
			public static string rptxItemRPTXTypeMenu {
				 get { return "rptxItemRPTXTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Portal Item Collection&quot; (Menu, Catalog)</summary>
			public static string esri_browsePlaces_Online_Menu {
				 get { return "esri_browsePlaces_Online_Menu"; }
			}
			///<summary>Returns the id string for &quot;Default&quot; (Menu, Catalog)</summary>
			public static string esri_core_projectItemTypeMenu {
				 get { return "esri_core_projectItemTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Default&quot; (Menu, Catalog)</summary>
			public static string esri_core_portalFolderMenu {
				 get { return "esri_core_portalFolderMenu"; }
			}
			///<summary>Returns the id string for &quot;Folder General Item&quot; (Menu, Catalog)</summary>
			public static string folderGeneralItemMenu {
				 get { return "folderGeneralItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Locator File Item&quot; (Menu, Catalog)</summary>
			public static string locatorItemMenu {
				 get { return "locatorItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Locator Package Item&quot; (Menu, Catalog)</summary>
			public static string locatorPackageItemMenu {
				 get { return "locatorPackageItemMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS Server Connection File&quot; (Menu, Catalog)</summary>
			public static string agsServerConnectionFileTypeMenu {
				 get { return "agsServerConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;WCS Server Connection File&quot; (Menu, Catalog)</summary>
			public static string wcsServerConnectionFileTypeMenu {
				 get { return "wcsServerConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;WMS Server Connection File&quot; (Menu, Catalog)</summary>
			public static string wmsServerConnectionFileTypeMenu {
				 get { return "wmsServerConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;WFS Server Connection File&quot; (Menu, Catalog)</summary>
			public static string wfsServerConnectionFileTypeMenu {
				 get { return "wfsServerConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;WMTS Server Connection File&quot; (Menu, Catalog)</summary>
			public static string wmtsServerConnectionFileTypeMenu {
				 get { return "wmtsServerConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Cloud Storage Connection File&quot; (Menu, Catalog)</summary>
			public static string CloudStorageConnectionFileTypeMenu {
				 get { return "CloudStorageConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Cloud Storage Folder&quot; (Menu, Catalog)</summary>
			public static string arcgisCloudStorageFolderMenu {
				 get { return "arcgisCloudStorageFolderMenu"; }
			}
			///<summary>Returns the id string for &quot;Enterprise Geodatabase Connection File&quot; (Menu, Catalog)</summary>
			public static string gdbItemSdeConnectionFileTypeMenu {
				 get { return "gdbItemSdeConnectionFileTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Menu, Catalog)</summary>
			public static string gdbItemDesignViewMenu {
				 get { return "gdbItemDesignViewMenu"; }
			}
			///<summary>Returns the id string for &quot;File Geodatabase&quot; (Menu, Catalog)</summary>
			public static string gdbItemFgdbTypeMenu {
				 get { return "gdbItemFgdbTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;SQLite Database&quot; (Menu, Catalog)</summary>
			public static string gdbItemSqliteTypeMenu {
				 get { return "gdbItemSqliteTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Excel&quot; (Menu, Catalog)</summary>
			public static string gdbItemExcelTypeMenu {
				 get { return "gdbItemExcelTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;BIMFile&quot; (Menu, Catalog)</summary>
			public static string bimFileWorkspaceItemTypeMenu {
				 get { return "bimFileWorkspaceItemTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;BIMFile&quot; (Menu, Catalog)</summary>
			public static string bimFileDatasetItemTypeMenu {
				 get { return "bimFileDatasetItemTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;BIMFile&quot; (Menu, Catalog)</summary>
			public static string bimFileFeatureClassItemTypeMenu {
				 get { return "bimFileFeatureClassItemTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS for Desktop Documents&quot; (Menu, Catalog)</summary>
			public static string mapItemMxdTypeMenu {
				 get { return "mapItemMxdTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS Pro Map File&quot; (Menu, Catalog)</summary>
			public static string mapxItemMAPXTypeMenu {
				 get { return "mapxItemMAPXTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Dataset&quot; (Menu, Catalog)</summary>
			public static string fgdbItemFeatureDatasetTypeMenu {
				 get { return "fgdbItemFeatureDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Dataset&quot; (Menu, Catalog)</summary>
			public static string egdbItemFeatureDatasetTypeMenu {
				 get { return "egdbItemFeatureDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Dataset&quot; (Menu, Catalog)</summary>
			public static string mgdbItemFeatureDatasetTypeMenu {
				 get { return "mgdbItemFeatureDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string fgdbItemFeatureClassTypeMenu {
				 get { return "fgdbItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string sqliteItemFeatureClassTypeMenu {
				 get { return "sqliteItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string mgdbItemFeatureClassTypeMenu {
				 get { return "mgdbItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Relationship Class&quot; (Menu, Catalog)</summary>
			public static string fgdbItemRelationshipClassTypeMenu {
				 get { return "fgdbItemRelationshipClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Mobile Geodatabase Relationship Class&quot; (Menu, Catalog)</summary>
			public static string mgdbItemRelationshipClassTypeMenu {
				 get { return "mgdbItemRelationshipClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string fgdbTerrainItemFeatureClassTypeMenu {
				 get { return "fgdbTerrainItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string egdbItemFeatureClassTypeMenu {
				 get { return "egdbItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Relationship&quot; (Menu, Catalog)</summary>
			public static string egdbItemRelationshipTypeMenu {
				 get { return "egdbItemRelationshipTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string egdbGeneralItemFeatureClassTypeMenu {
				 get { return "egdbGeneralItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string egdbTerrainItemFeatureClassTypeMenu {
				 get { return "egdbTerrainItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string fgdbAnnotationItemFeatureClassTypeMenu {
				 get { return "fgdbAnnotationItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string egdbAnnotationItemFeatureClassTypeMenu {
				 get { return "egdbAnnotationItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string fgdbDimensionItemFeatureClassTypeMenu {
				 get { return "fgdbDimensionItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Class&quot; (Menu, Catalog)</summary>
			public static string egdbDimensionItemFeatureClassTypeMenu {
				 get { return "egdbDimensionItemFeatureClassTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Network Dataset&quot; (Menu, Catalog)</summary>
			public static string fgdbItemNetworkDatasetTypeMenu {
				 get { return "fgdbItemNetworkDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Network Dataset&quot; (Menu, Catalog)</summary>
			public static string gdbItemNetworkGeneralTypeMenu {
				 get { return "gdbItemNetworkGeneralTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Network Dataset&quot; (Menu, Catalog)</summary>
			public static string egdbItemNetworkDatasetTypeMenu {
				 get { return "egdbItemNetworkDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Utility Network Dataset&quot; (Menu, Catalog)</summary>
			public static string fgdbItemFacilityNetworkTypeMenu {
				 get { return "fgdbItemFacilityNetworkTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Trace Network Dataset&quot; (Menu, Catalog)</summary>
			public static string fgdbItemTraceNetworkTypeMenu {
				 get { return "fgdbItemTraceNetworkTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Utility Network Dataset&quot; (Menu, Catalog)</summary>
			public static string egdbItemFacilityNetworkTypeMenu {
				 get { return "egdbItemFacilityNetworkTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Shapefile Network Dataset&quot; (Menu, Catalog)</summary>
			public static string shapefileItemNetworkDatasetTypeMenu {
				 get { return "shapefileItemNetworkDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Table&quot; (Menu, Catalog)</summary>
			public static string fgdbItemTableTypeMenu {
				 get { return "fgdbItemTableTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Table&quot; (Menu, Catalog)</summary>
			public static string sqliteItemTableTypeMenu {
				 get { return "sqliteItemTableTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Table&quot; (Menu, Catalog)</summary>
			public static string egdbItemTableTypeMenu {
				 get { return "egdbItemTableTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Excel Sheet&quot; (Menu, Catalog)</summary>
			public static string excelItemTableTypeMenu {
				 get { return "excelItemTableTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Table&quot; (Menu, Catalog)</summary>
			public static string gdbItemTopologyTypeMenu {
				 get { return "gdbItemTopologyTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;TIN Dataset&quot; (Menu, Catalog)</summary>
			public static string tinItemMenu {
				 get { return "tinItemMenu"; }
			}
			///<summary>Returns the id string for &quot;GDB Parcel Fabric&quot; (Menu, Catalog)</summary>
			public static string gdbItemParcelFabricItemMenu {
				 get { return "gdbItemParcelFabricItemMenu"; }
			}
			///<summary>Returns the id string for &quot;GDB Parcel Fabric&quot; (Menu, Catalog)</summary>
			public static string gdbItemParcelDatasetItemMenu {
				 get { return "gdbItemParcelDatasetItemMenu"; }
			}
			///<summary>Returns the id string for &quot;LAS Dataset&quot; (Menu, Catalog)</summary>
			public static string lasDatasetItemMenu {
				 get { return "lasDatasetItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Notebook&quot; (Menu, Catalog)</summary>
			public static string notebookItemMenu {
				 get { return "notebookItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Notebook&quot; (Menu, Catalog)</summary>
			public static string notebookProjectItemMenu {
				 get { return "notebookProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Notebook&quot; (Menu, Catalog)</summary>
			public static string portalNotebookItemMenu {
				 get { return "portalNotebookItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Pro Report&quot; (Menu, Catalog)</summary>
			public static string portalItemRPTXTypeMenu {
				 get { return "portalItemRPTXTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Shapefile&quot; (Menu, Catalog)</summary>
			public static string shapefileItemMenu {
				 get { return "shapefileItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Google Earth File&quot; (Menu, Catalog)</summary>
			public static string googleEarthItemMenu {
				 get { return "googleEarthItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Cad&quot; (Menu, Catalog)</summary>
			public static string cadfileItemMenu {
				 get { return "cadfileItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Cad Dataset&quot; (Menu, Catalog)</summary>
			public static string cadDatasetItemMenu {
				 get { return "cadDatasetItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Menu, Catalog)</summary>
			public static string layerItemMenu {
				 get { return "layerItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Table&quot; (Menu, Catalog)</summary>
			public static string tableItemMenu {
				 get { return "tableItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Service&quot; (Menu, Catalog)</summary>
			public static string serviceItemMenu {
				 get { return "serviceItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Service Content&quot; (Menu, Catalog)</summary>
			public static string serviceContentItemMenu {
				 get { return "serviceContentItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Feature Service Item&quot; (Menu, Catalog)</summary>
			public static string featureServiceItemMenu {
				 get { return "featureServiceItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Online Item&quot; (Menu, Catalog)</summary>
			public static string onlineItemMenu {
				 get { return "onlineItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Online SubLayer Item&quot; (Menu, Catalog)</summary>
			public static string onlineSubLayerItemMenu {
				 get { return "onlineSubLayerItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Web Map&quot; (Menu, Catalog)</summary>
			public static string webMapProjectItemMenu {
				 get { return "webMapProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Package&quot; (Menu, Catalog)</summary>
			public static string layerPackageItemMenu {
				 get { return "layerPackageItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Package&quot; (Menu, Catalog)</summary>
			public static string mapPackageItemMenu {
				 get { return "mapPackageItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Style&quot; (Menu, Catalog)</summary>
			public static string onlineStyleItemMenu {
				 get { return "onlineStyleItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Generic&quot; (Menu, Catalog)</summary>
			public static string onlineGenericItemMenu {
				 get { return "onlineGenericItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Package&quot; (Menu, Catalog)</summary>
			public static string onlineMapPackageItemMenu {
				 get { return "onlineMapPackageItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Package&quot; (Menu, Catalog)</summary>
			public static string onlineGeoprocessingPackageItemMenu {
				 get { return "onlineGeoprocessingPackageItemMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS Pro Map&quot; (Menu, Catalog)</summary>
			public static string onlineMapXItemMenu {
				 get { return "onlineMapXItemMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS Pro Layout&quot; (Menu, Catalog)</summary>
			public static string onlinePageXItemMenu {
				 get { return "onlinePageXItemMenu"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS Task File&quot; (Menu, Catalog)</summary>
			public static string onlineTaskItemMenu {
				 get { return "onlineTaskItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Deep Learning Package&quot; (Menu, Catalog)</summary>
			public static string portalDLPKPackageItemMenu {
				 get { return "portalDLPKPackageItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Generic Item&quot; (Menu, Catalog)</summary>
			public static string itemInfoGenericMenu {
				 get { return "itemInfoGenericMenu"; }
			}
			///<summary>Returns the id string for &quot;Locators Container&quot; (Menu, Catalog)</summary>
			public static string locatorsConnectionContainerMenu {
				 get { return "locatorsConnectionContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionItemMenu {
				 get { return "LocatorsConnectionItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Composite Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionCompositeItemMenu {
				 get { return "LocatorsConnectionCompositeItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionServerItemMenu {
				 get { return "LocatorsConnectionServerItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionPortalItemMenu {
				 get { return "LocatorsConnectionPortalItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Portal Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionPortalItemLocatorMenu {
				 get { return "LocatorsConnectionPortalItemLocatorMenu"; }
			}
			///<summary>Returns the id string for &quot;Eagle Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionEagleItemMenu {
				 get { return "LocatorsConnectionEagleItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Locator Item&quot; (Menu, Catalog)</summary>
			public static string LocatorsConnectionXYItemMenu {
				 get { return "LocatorsConnectionXYItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Folders Container&quot; (Menu, Catalog)</summary>
			public static string folderConnectionContainerMenu {
				 get { return "folderConnectionContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Folder Connection&quot; (Menu, Catalog)</summary>
			public static string folderConnectionItemMenu {
				 get { return "folderConnectionItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Deep learning Package&quot; (Menu, Catalog)</summary>
			public static string deepLearningPackageMenu {
				 get { return "deepLearningPackageMenu"; }
			}
			///<summary>Returns the id string for &quot;Raster&quot; (Menu, Catalog)</summary>
			public static string rasterItemMenu {
				 get { return "rasterItemMenu"; }
			}
			///<summary>Returns the id string for &quot;GDB Raster&quot; (Menu, Catalog)</summary>
			public static string gdbItemRasterItemMenu {
				 get { return "gdbItemRasterItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Mosaic Dataset&quot; (Menu, Catalog)</summary>
			public static string gdbItemMosaicDatasetTypeMenu {
				 get { return "gdbItemMosaicDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Image Service&quot; (Menu, Catalog)</summary>
			public static string imageServiceItemMenu {
				 get { return "imageServiceItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Image Service Item&quot; (Menu, Catalog)</summary>
			public static string imageServiceSubItemMenu {
				 get { return "imageServiceSubItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Raster Product&quot; (Menu, Catalog)</summary>
			public static string rasterProductItemMenu {
				 get { return "rasterProductItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Diagram Dataset&quot; (Menu, Catalog)</summary>
			public static string gdbItemDiagramDatasetTypeMenu {
				 get { return "gdbItemDiagramDatasetTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Network Diagram&quot; (Menu, Catalog)</summary>
			public static string gdbItemNetworkDiagramTypeMenu {
				 get { return "gdbItemNetworkDiagramTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Menu, Catalog)</summary>
			public static string gdbItemDesignDiagramDatasetMenu {
				 get { return "gdbItemDesignDiagramDatasetMenu"; }
			}
			///<summary>Returns the id string for &quot;Folder Connection&quot; (Menu, Catalog)</summary>
			public static string folderConnectionItemMenu_BrowseDialog_Gallery {
				 get { return "folderConnectionItemMenu_BrowseDialog_Gallery"; }
			}
			///<summary>Returns the id string for &quot;Folder Connection&quot; (Menu, Catalog)</summary>
			public static string folderConnectionItemMenu_BrowseDialog_List {
				 get { return "folderConnectionItemMenu_BrowseDialog_List"; }
			}
			///<summary>Returns the id string for &quot;File Geodatabase Connection&quot; (Menu, Catalog)</summary>
			public static string GDBProjectItemMenu {
				 get { return "GDBProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Enterprise Geodatabase Connection&quot; (Menu, Catalog)</summary>
			public static string EGDBProjectItemMenu {
				 get { return "EGDBProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;SQLite Database Connection&quot; (Menu, Catalog)</summary>
			public static string SqliteProjectItemMenu {
				 get { return "SqliteProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Mobile Geodatabase Connection&quot; (Menu, Catalog)</summary>
			public static string MGDBProjectItemMenu {
				 get { return "MGDBProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Databases Container&quot; (Menu, Catalog)</summary>
			public static string GDBContainerMenu {
				 get { return "GDBContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Servers Container&quot; (Menu, Catalog)</summary>
			public static string ServerConnectionContainerMenu {
				 get { return "ServerConnectionContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Notebook Container&quot; (Menu, Catalog)</summary>
			public static string NotebookContainerMenu {
				 get { return "NotebookContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Cloud Storage Connections Container&quot; (Menu, Catalog)</summary>
			public static string CloudStorageConnectionContainerMenu {
				 get { return "CloudStorageConnectionContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Server Connection&quot; (Menu, Catalog)</summary>
			public static string ServerConnectionItemMenu {
				 get { return "ServerConnectionItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Cloud Storage Connection&quot; (Menu, Catalog)</summary>
			public static string CloudStorageConnectionItemMenu {
				 get { return "CloudStorageConnectionItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Statistical Data Collection&quot; (Menu, Catalog)</summary>
			public static string StatisticalDataCollectionItemMenu {
				 get { return "StatisticalDataCollectionItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Statistica Data Collections Container&quot; (Menu, Catalog)</summary>
			public static string StatisticalDataCollectionContainerMenu {
				 get { return "StatisticalDataCollectionContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Target Marketing  Container&quot; (Menu, Catalog)</summary>
			public static string TargetMarketingContainerMenu {
				 get { return "TargetMarketingContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Segmentation Target Group&quot; (Menu, Catalog)</summary>
			public static string SegmentationTargetGroupItemMenu {
				 get { return "SegmentationTargetGroupItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Segmentation Profile&quot; (Menu, Catalog)</summary>
			public static string SegmentationProfileItemMenu {
				 get { return "SegmentationProfileItemMenu"; }
			}
			///<summary>Returns the id string for &quot;HuffModel&quot; (Menu, Catalog)</summary>
			public static string HuffModelItemMenu {
				 get { return "HuffModelItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Huff Model  Container&quot; (Menu, Catalog)</summary>
			public static string HuffModelContainerMenu {
				 get { return "HuffModelContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (Menu, Catalog)</summary>
			public static string BusinessAnalystContainerAddSubMenu {
				 get { return "BusinessAnalystContainerAddSubMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Catalog)</summary>
			public static string BusinessAnalystContainerNewSubMenu {
				 get { return "BusinessAnalystContainerNewSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Project Business Analyst Container&quot; (Menu, Catalog)</summary>
			public static string BusinessAnalystContainerMenu {
				 get { return "BusinessAnalystContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Catalog)</summary>
			public static string GDBProjectNewItemMenu {
				 get { return "GDBProjectNewItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (Menu, Catalog)</summary>
			public static string GDBWorkspaceImportItemMenu {
				 get { return "GDBWorkspaceImportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (Menu, Catalog)</summary>
			public static string GDBFeatureDatasetImportItemMenu {
				 get { return "GDBFeatureDatasetImportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Distributed Geodatabase&quot; (Menu, Catalog)</summary>
			public static string FGDBDistributedGeodatabaseMenu {
				 get { return "FGDBDistributedGeodatabaseMenu"; }
			}
			///<summary>Returns the id string for &quot;Distributed Geodatabase&quot; (Menu, Catalog)</summary>
			public static string EGDBDistributedGeodatabaseMenu {
				 get { return "EGDBDistributedGeodatabaseMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string EGDBProjectItemMenuExportMenu {
				 get { return "EGDBProjectItemMenuExportMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string FileGDBFromFolderConnectionOrEGDBExportItemMenu {
				 get { return "FileGDBFromFolderConnectionOrEGDBExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string FileGDBAndEGDBFeatureDatasetExportItemMenu {
				 get { return "FileGDBAndEGDBFeatureDatasetExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string FileGDBAndEGDBFeatureClassExportItemMenu {
				 get { return "FileGDBAndEGDBFeatureClassExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string ShapefileItemMenuExportItemMenu {
				 get { return "ShapefileItemMenuExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string FileGDBAndEGDBItemTableTypeExportItemMenu {
				 get { return "FileGDBAndEGDBItemTableTypeExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string GeneralItemTableTypeExportItemMenu {
				 get { return "GeneralItemTableTypeExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string EGDBGeneralItemFeatureClassTypeExportItemMenu {
				 get { return "EGDBGeneralItemFeatureClassTypeExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Catalog)</summary>
			public static string EGDBRasterDatasetExportItemMenu {
				 get { return "EGDBRasterDatasetExportItemMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Catalog)</summary>
			public static string FolderConnectionProjectNewItemMenu {
				 get { return "FolderConnectionProjectNewItemMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Catalog)</summary>
			public static string FolderConnectionProjectNewItemMenu2 {
				 get { return "FolderConnectionProjectNewItemMenu2"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Catalog)</summary>
			public static string SQLiteProjectNewItemMenu {
				 get { return "SQLiteProjectNewItemMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Catalog)</summary>
			public static string GDBFeatureDatasetNewItemMenu {
				 get { return "GDBFeatureDatasetNewItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Menu, Catalog)</summary>
			public static string ManageGDBItemMenu {
				 get { return "ManageGDBItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Menu, Catalog)</summary>
			public static string manageFGDBMenu {
				 get { return "manageFGDBMenu"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Menu, Catalog)</summary>
			public static string manageFGDBItemMenu {
				 get { return "manageFGDBItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Connections&quot; (Menu, Catalog)</summary>
			public static string esri_geodatabase_insertMenu {
				 get { return "esri_geodatabase_insertMenu"; }
			}
			///<summary>Returns the id string for &quot;Add Item&quot; (Menu, Catalog)</summary>
			public static string esri_insertToFavoritesMenu {
				 get { return "esri_insertToFavoritesMenu"; }
			}
			///<summary>Returns the id string for &quot;Item&quot; (Menu, Catalog)</summary>
			public static string esri_geodatabase_ProjectMultiselectContextMenu {
				 get { return "esri_geodatabase_ProjectMultiselectContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Item&quot; (Menu, Catalog)</summary>
			public static string esri_geodatabase_DeleteContextMenu {
				 get { return "esri_geodatabase_DeleteContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Raster Function Template&quot; (Menu, Catalog)</summary>
			public static string portalRFTItemMenu {
				 get { return "portalRFTItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Portal Tool&quot; (Menu, Catalog)</summary>
			public static string esri_geoprocessing_subToolMenu {
				 get { return "esri_geoprocessing_subToolMenu"; }
			}
			///<summary>Returns the id string for &quot;Video File&quot; (Menu, Catalog)</summary>
			public static string videoFileItemMenu {
				 get { return "videoFileItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Menu, Catalog)</summary>
			public static string esri_manageParcelFabricItemMenu {
				 get { return "esri_manageParcelFabricItemMenu"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Define&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateTopology.WizardPages.DefineViewModel, Catalog)</summary>
			public static string esri_catalog_createTopologyDefinePage {
				 get { return "esri_catalog_createTopologyDefinePage"; }
			}
			///<summary>Returns the id string for &quot;Add Rules&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateTopology.WizardPages.AddRulesViewModel, Catalog)</summary>
			public static string esri_catalog_createTopologyAddRulesPage {
				 get { return "esri_catalog_createTopologyAddRulesPage"; }
			}
			///<summary>Returns the id string for &quot;Summary&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateTopology.WizardPages.SummaryViewModel, Catalog)</summary>
			public static string esri_catalog_createTopologySummaryPage {
				 get { return "esri_catalog_createTopologySummaryPage"; }
			}
			///<summary>Returns the id string for &quot;Define&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.Pages.FeatureTypeAndGeometryViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardDefinitionPage {
				 get { return "esri_catalog_createFeatureClassWizardDefinitionPage"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.Pages.FieldsViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardFieldsPage {
				 get { return "esri_catalog_createFeatureClassWizardFieldsPage"; }
			}
			///<summary>Returns the id string for &quot;Spatial Reference&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.Pages.SpatialReferenceViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardSpatialReferencePage {
				 get { return "esri_catalog_createFeatureClassWizardSpatialReferencePage"; }
			}
			///<summary>Returns the id string for &quot;Tolerance&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.Pages.ToleranceViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardTolerancePage {
				 get { return "esri_catalog_createFeatureClassWizardTolerancePage"; }
			}
			///<summary>Returns the id string for &quot;Resolution&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.Pages.ResolutionViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardResolutionPage {
				 get { return "esri_catalog_createFeatureClassWizardResolutionPage"; }
			}
			///<summary>Returns the id string for &quot;Storage Configuration&quot; (ArcGIS.Desktop.Internal.Catalog.Wizards.CreateFeatureClass.Pages.StorageConfigurationsViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardStorageConfigurationPage {
				 get { return "esri_catalog_createFeatureClassWizardStorageConfigurationPage"; }
			}
			///<summary>Returns the id string for &quot;Annotation Properties&quot; (ArcGIS.Desktop.Internal.Mapping.Annotation.Wizards.AnnotationPropertiesViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardAnnotationPropertiesPage {
				 get { return "esri_catalog_createFeatureClassWizardAnnotationPropertiesPage"; }
			}
			///<summary>Returns the id string for &quot;Annotation Classes&quot; (ArcGIS.Desktop.Internal.Mapping.Annotation.Wizards.AnnotationClassesViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardAnnotationClassesPage {
				 get { return "esri_catalog_createFeatureClassWizardAnnotationClassesPage"; }
			}
			///<summary>Returns the id string for &quot;Dimension Properties&quot; (ArcGIS.Desktop.Internal.Mapping.Dimensions.Wizards.DimensionPropertiesViewModel, Catalog)</summary>
			public static string esri_catalog_createFeatureClassWizardDimensionPropertiesPage {
				 get { return "esri_catalog_createFeatureClassWizardDimensionPropertiesPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Catalog.AGSConnectionViewModel, Catalog)</summary>
			public static string esri_catalog_agsConnection_general_propertyPage {
				 get { return "esri_catalog_agsConnection_general_propertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Catalog.OGCConnectionViewModel, Catalog)</summary>
			public static string esri_catalog_ogcConnection_general_propertyPage {
				 get { return "esri_catalog_ogcConnection_general_propertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.FeatureClass.SourceViewModel, Catalog)</summary>
			public static string esri_catalog_featureClassSourcePropertyPage {
				 get { return "esri_catalog_featureClassSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Indexes&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.FeatureClass.IndexViewModel, Catalog)</summary>
			public static string esri_catalog_featureClassIndexPropertyPage {
				 get { return "esri_catalog_featureClassIndexPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Relationships&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.FeatureClass.RelationshipsViewModel, Catalog)</summary>
			public static string esri_catalog_featureClassRelationshipsPropertyPage {
				 get { return "esri_catalog_featureClassRelationshipsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Editor Tracking&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.FeatureClass.EditorTrackingViewModel, Catalog)</summary>
			public static string esri_catalog_featureClassEditorTrackingPropertyPage {
				 get { return "esri_catalog_featureClassEditorTrackingPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.RelationshipClass.GeneralViewModel, Catalog)</summary>
			public static string esri_catalog_relationshipClassGeneralPropertyPage {
				 get { return "esri_catalog_relationshipClassGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Rules&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.RelationshipClass.RulesViewModel, Catalog)</summary>
			public static string esri_catalog_relationshipClassRulesPropertyPage {
				 get { return "esri_catalog_relationshipClassRulesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Table.SourceViewModel, Catalog)</summary>
			public static string esri_catalog_tableSourcePropertyPage {
				 get { return "esri_catalog_tableSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Indexes&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Table.IndexViewModel, Catalog)</summary>
			public static string esri_catalog_tableIndexPropertyPage {
				 get { return "esri_catalog_tableIndexPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Relationships&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Table.RelationshipsViewModel, Catalog)</summary>
			public static string esri_catalog_tableRelationshipsPropertyPage {
				 get { return "esri_catalog_tableRelationshipsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.DatabaseConnection.DatabaseConnectionViewModel, Catalog)</summary>
			public static string esri_catalog_databasePropertiesPropertyPage {
				 get { return "esri_catalog_databasePropertiesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Network Properties&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.UtilityNetwork.UtilityNetworkViewModel, Catalog)</summary>
			public static string esri_catalog_utilityNetworkPropertyPage {
				 get { return "esri_catalog_utilityNetworkPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Diagram Properties&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.NetworkDiagrams.NetworkDiagramPropertiesViewModel, Catalog)</summary>
			public static string esri_catalog_networkDiagramPropertiesPropertyPage {
				 get { return "esri_catalog_networkDiagramPropertiesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.FeatureDataset.GeneralViewModel, Catalog)</summary>
			public static string esri_catalog_featureDatasetGeneralPropertyPage {
				 get { return "esri_catalog_featureDatasetGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.NetworkDataset.GeneralNetworkDatasetPropertyPage, Catalog)</summary>
			public static string esri_catalog_networkDatasetGeneralPropertyPage {
				 get { return "esri_catalog_networkDatasetGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source Settings&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.NetworkDataset.SourceSettingsPropertyPage, Catalog)</summary>
			public static string esri_catalog_networkDatasetSourceSettingsPropertyPage {
				 get { return "esri_catalog_networkDatasetSourceSettingsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Traffic&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.NetworkDataset.TrafficSettingsPropertyPage, Catalog)</summary>
			public static string esri_catalog_networkDatasetTrafficSettingsPropertyPage {
				 get { return "esri_catalog_networkDatasetTrafficSettingsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Travel Attributes&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.NetworkDataset.TravelAttributesPropertyPage, Catalog)</summary>
			public static string esri_catalog_networkDatasetTravelAttributesPropertyPage {
				 get { return "esri_catalog_networkDatasetTravelAttributesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Directions&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.NetworkDataset.DirectionsSettingsPropertyPage, Catalog)</summary>
			public static string esri_catalog_networkDatasetDirectionsSettingsPropertyPage {
				 get { return "esri_catalog_networkDatasetDirectionsSettingsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Topology.GeneralViewModel, Catalog)</summary>
			public static string esri_catalog_topologyGeneralPropertyPage {
				 get { return "esri_catalog_topologyGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Feature Class&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Topology.FeatureClassesViewModel, Catalog)</summary>
			public static string esri_catalog_topologyFeatureClassesPropertyPage {
				 get { return "esri_catalog_topologyFeatureClassesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Rules&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Topology.RulesViewModel, Catalog)</summary>
			public static string esri_catalog_topologyRulesPropertyPage {
				 get { return "esri_catalog_topologyRulesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Errors&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Topology.ErrorsViewModel, Catalog)</summary>
			public static string esri_catalog_topologyErrorsPropertyPage {
				 get { return "esri_catalog_topologyErrorsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.LASDataset.GeneralViewModel, Catalog)</summary>
			public static string esri_catalog_lasDatasetGeneralPropertyPage {
				 get { return "esri_catalog_lasDatasetGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Statistics&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.LASDataset.DatasetStatisticsViewModel, Catalog)</summary>
			public static string esri_catalog_lasDatasetStatisticsPropertyPage {
				 get { return "esri_catalog_lasDatasetStatisticsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;LAS Files&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.LASDataset.LasFilesViewModel, Catalog)</summary>
			public static string esri_catalog_lasFilesPropertyPage {
				 get { return "esri_catalog_lasFilesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Surface Constraints&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.LASDataset.ConstraintsViewModel, Catalog)</summary>
			public static string esri_catalog_lasDatasetSurfaceConstraintsPropertyPage {
				 get { return "esri_catalog_lasDatasetSurfaceConstraintsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Coordinate System&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.LASDataset.LasDatasetSpatialReferenceViewModel, Catalog)</summary>
			public static string esri_catalog_lasDatasetCoordinateSystemPropertyPage {
				 get { return "esri_catalog_lasDatasetCoordinateSystemPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.ParcelDataset.GeneralViewModel, Catalog)</summary>
			public static string esri_catalog_parcelDatasetGeneralPropertyPage {
				 get { return "esri_catalog_parcelDatasetGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Feature Class&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.ParcelDataset.FeatureClassesViewModel, Catalog)</summary>
			public static string esri_catalog_parcelFeatureClassesPropertyPage {
				 get { return "esri_catalog_parcelFeatureClassesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Parcel Rules&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.ParcelDataset.RulesViewModel, Catalog)</summary>
			public static string esri_catalog_parcelRulesPropertyPage {
				 get { return "esri_catalog_parcelRulesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Replica.GeneralViewModel, Catalog)</summary>
			public static string esri_catalog_ReplicaGeneralPropertyPage {
				 get { return "esri_catalog_ReplicaGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Description&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Replica.DescriptionViewModel, Catalog)</summary>
			public static string esri_catalog_ReplicaDescriptionPropertyPage {
				 get { return "esri_catalog_ReplicaDescriptionPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Advanced&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Replica.AdvancedViewModel, Catalog)</summary>
			public static string esri_catalog_ReplicaAdvancedPropertyPage {
				 get { return "esri_catalog_ReplicaAdvancedPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Replica Log&quot; (ArcGIS.Desktop.Internal.Catalog.PropertyPages.Replica.ReplicaLogViewModel, Catalog)</summary>
			public static string esri_catalog_ReplicaLogPropertyPage {
				 get { return "esri_catalog_ReplicaLogPropertyPage"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_geodatabase_projectContainer&quot; (State, Catalog)</summary>
			public static string esri_geodatabase_projectContainer {
				 get { return "esri_geodatabase_projectContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_folderConnectionContainer&quot; (State, Catalog)</summary>
			public static string esri_geodatabase_folderConnectionContainer {
				 get { return "esri_geodatabase_folderConnectionContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_openProjectState&quot; (State, Catalog)</summary>
			public static string esri_mapping_openProjectState {
				 get { return "esri_mapping_openProjectState"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_isInvalid&quot; (State, Catalog)</summary>
			public static string esri_projectItem_isInvalid {
				 get { return "esri_projectItem_isInvalid"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_isEnterpriseGeodatabase&quot; (State, Catalog)</summary>
			public static string esri_projectItem_isEnterpriseGeodatabase {
				 get { return "esri_projectItem_isEnterpriseGeodatabase"; }
			}
			///<summary>Returns the id string for &quot;esri_license_hasStandardLicenseState&quot; (State, Catalog)</summary>
			public static string esri_license_hasStandardLicenseState {
				 get { return "esri_license_hasStandardLicenseState"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_geoDatabaseConnection&quot; (State, Catalog)</summary>
			public static string esri_projectItem_geoDatabaseConnection {
				 get { return "esri_projectItem_geoDatabaseConnection"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_canAddGlobalID&quot; (State, Catalog)</summary>
			public static string esri_projectItem_canAddGlobalID {
				 get { return "esri_projectItem_canAddGlobalID"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedTableIsRegisteredWithGDB&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedTableIsRegisteredWithGDB {
				 get { return "esri_projectItem_SelectedTableIsRegisteredWithGDB"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_validFGDB&quot; (State, Catalog)</summary>
			public static string esri_projectItem_validFGDB {
				 get { return "esri_projectItem_validFGDB"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_geoDatabase&quot; (State, Catalog)</summary>
			public static string esri_projectItem_geoDatabase {
				 get { return "esri_projectItem_geoDatabase"; }
			}
			///<summary>Returns the id string for &quot;esri_project_mapSelected&quot; (State, Catalog)</summary>
			public static string esri_project_mapSelected {
				 get { return "esri_project_mapSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapPane&quot; (State, Catalog)</summary>
			public static string esri_mapping_mapPane {
				 get { return "esri_mapping_mapPane"; }
			}
			///<summary>Returns the id string for &quot;esri_project_featureClassSelected&quot; (State, Catalog)</summary>
			public static string esri_project_featureClassSelected {
				 get { return "esri_project_featureClassSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_rasterSelected&quot; (State, Catalog)</summary>
			public static string esri_project_rasterSelected {
				 get { return "esri_project_rasterSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_ComingSoon&quot; (State, Catalog)</summary>
			public static string esri_project_ComingSoon {
				 get { return "esri_project_ComingSoon"; }
			}
			///<summary>Returns the id string for &quot;esri_project_database_connectionState&quot; (State, Catalog)</summary>
			public static string esri_project_database_connectionState {
				 get { return "esri_project_database_connectionState"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultFolderSelected&quot; (State, Catalog)</summary>
			public static string esri_projectItem_DefaultFolderSelected {
				 get { return "esri_projectItem_DefaultFolderSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultGDBSelected&quot; (State, Catalog)</summary>
			public static string esri_projectItem_DefaultGDBSelected {
				 get { return "esri_projectItem_DefaultGDBSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsVersioned&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsVersioned {
				 get { return "esri_projectItem_SelectedItemIsVersioned"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotArchiveEnabled&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotArchiveEnabled {
				 get { return "esri_projectItem_SelectedItemIsNotArchiveEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotVersioned&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotVersioned {
				 get { return "esri_projectItem_SelectedItemIsNotVersioned"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsInFeatureDataset&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsInFeatureDataset {
				 get { return "esri_projectItem_SelectedItemIsInFeatureDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_isLocalGeodatabase&quot; (State, Catalog)</summary>
			public static string esri_projectItem_isLocalGeodatabase {
				 get { return "esri_projectItem_isLocalGeodatabase"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsArchiveEnabled&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsArchiveEnabled {
				 get { return "esri_projectItem_SelectedItemIsArchiveEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsMultiBranchVersioned&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsMultiBranchVersioned {
				 get { return "esri_projectItem_SelectedItemIsMultiBranchVersioned"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsEditorTrackingEnabled&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsEditorTrackingEnabled {
				 get { return "esri_projectItem_SelectedItemIsEditorTrackingEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_project_featureDatasetSelected&quot; (State, Catalog)</summary>
			public static string esri_project_featureDatasetSelected {
				 get { return "esri_project_featureDatasetSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotEditorTrackingEnabled&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotEditorTrackingEnabled {
				 get { return "esri_projectItem_SelectedItemIsNotEditorTrackingEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsNotCompressed&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsNotCompressed {
				 get { return "esri_projectItem_SelectedItemIsNotCompressed"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsCompressed&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsCompressed {
				 get { return "esri_projectItem_SelectedItemIsCompressed"; }
			}
			///<summary>Returns the id string for &quot;catalog_database_fgdb&quot; (State, Catalog)</summary>
			public static string catalog_database_fgdb {
				 get { return "catalog_database_fgdb"; }
			}
			///<summary>Returns the id string for &quot;catalog_database_egdb&quot; (State, Catalog)</summary>
			public static string catalog_database_egdb {
				 get { return "catalog_database_egdb"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_FolderSelected&quot; (State, Catalog)</summary>
			public static string esri_projectItem_FolderSelected {
				 get { return "esri_projectItem_FolderSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_notGeoDatabaseConnection&quot; (State, Catalog)</summary>
			public static string esri_projectItem_notGeoDatabaseConnection {
				 get { return "esri_projectItem_notGeoDatabaseConnection"; }
			}
			///<summary>Returns the id string for &quot;esri_samodels_isInvalid&quot; (State, Catalog)</summary>
			public static string esri_samodels_isInvalid {
				 get { return "esri_samodels_isInvalid"; }
			}
			///<summary>Returns the id string for &quot;catalog_dataset_fgdb&quot; (State, Catalog)</summary>
			public static string catalog_dataset_fgdb {
				 get { return "catalog_dataset_fgdb"; }
			}
			///<summary>Returns the id string for &quot;catalog_dataset_egdb&quot; (State, Catalog)</summary>
			public static string catalog_dataset_egdb {
				 get { return "catalog_dataset_egdb"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_isSqliteDatabase&quot; (State, Catalog)</summary>
			public static string esri_projectItem_isSqliteDatabase {
				 get { return "esri_projectItem_isSqliteDatabase"; }
			}
			///<summary>Returns the id string for &quot;esri_project_itemOnClipboard&quot; (State, Catalog)</summary>
			public static string esri_project_itemOnClipboard {
				 get { return "esri_project_itemOnClipboard"; }
			}
			///<summary>Returns the id string for &quot;esri_project_featureDatasetExtensionSelected&quot; (State, Catalog)</summary>
			public static string esri_project_featureDatasetExtensionSelected {
				 get { return "esri_project_featureDatasetExtensionSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_GDBSelected&quot; (State, Catalog)</summary>
			public static string esri_project_GDBSelected {
				 get { return "esri_project_GDBSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_shapeFileSelected&quot; (State, Catalog)</summary>
			public static string esri_project_shapeFileSelected {
				 get { return "esri_project_shapeFileSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_cadFileSelected&quot; (State, Catalog)</summary>
			public static string esri_project_cadFileSelected {
				 get { return "esri_project_cadFileSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_rasterFileSelected&quot; (State, Catalog)</summary>
			public static string esri_project_rasterFileSelected {
				 get { return "esri_project_rasterFileSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_fileGDBSelected&quot; (State, Catalog)</summary>
			public static string esri_project_fileGDBSelected {
				 get { return "esri_project_fileGDBSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_bimFileWorkspaceSelected&quot; (State, Catalog)</summary>
			public static string esri_project_bimFileWorkspaceSelected {
				 get { return "esri_project_bimFileWorkspaceSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_videoFileSelected&quot; (State, Catalog)</summary>
			public static string esri_project_videoFileSelected {
				 get { return "esri_project_videoFileSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_project_locatorSelected&quot; (State, Catalog)</summary>
			public static string esri_project_locatorSelected {
				 get { return "esri_project_locatorSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_geodatabase_dummyStateWhichIsAlwaysFalse&quot; (State, Catalog)</summary>
			public static string esri_geodatabase_dummyStateWhichIsAlwaysFalse {
				 get { return "esri_geodatabase_dummyStateWhichIsAlwaysFalse"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedTableIsNotRegisteredWithGDB&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedTableIsNotRegisteredWithGDB {
				 get { return "esri_projectItem_SelectedTableIsNotRegisteredWithGDB"; }
			}
			///<summary>Returns the id string for &quot;esri_favoriteItem_isPersisted&quot; (State, Catalog)</summary>
			public static string esri_favoriteItem_isPersisted {
				 get { return "esri_favoriteItem_isPersisted"; }
			}
			///<summary>Returns the id string for &quot;esri_project_lasDatasetSelected&quot; (State, Catalog)</summary>
			public static string esri_project_lasDatasetSelected {
				 get { return "esri_project_lasDatasetSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_mosaicDatasetHasColorBalancing&quot; (State, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasColorBalancing {
				 get { return "esri_projectItem_mosaicDatasetHasColorBalancing"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_mosaicDatasetHasSeamLine&quot; (State, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasSeamLine {
				 get { return "esri_projectItem_mosaicDatasetHasSeamLine"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_mosaicDatasetHasStereoModel&quot; (State, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasStereoModel {
				 get { return "esri_projectItem_mosaicDatasetHasStereoModel"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_mosaicDatasetHasLog&quot; (State, Catalog)</summary>
			public static string esri_projectItem_mosaicDatasetHasLog {
				 get { return "esri_projectItem_mosaicDatasetHasLog"; }
			}
			///<summary>Returns the id string for &quot;esri_license_has3DAnalystExtensionLicenseState&quot; (State, Catalog)</summary>
			public static string esri_license_has3DAnalystExtensionLicenseState {
				 get { return "esri_license_has3DAnalystExtensionLicenseState"; }
			}
			///<summary>Returns the id string for &quot;esri_license_hasSpatialAnalystExtensionLicenseState&quot; (State, Catalog)</summary>
			public static string esri_license_hasSpatialAnalystExtensionLicenseState {
				 get { return "esri_license_hasSpatialAnalystExtensionLicenseState"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_gdbMosaicDataset&quot; (State, Catalog)</summary>
			public static string esri_projectItem_gdbMosaicDataset {
				 get { return "esri_projectItem_gdbMosaicDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_managedMosaicDataset&quot; (State, Catalog)</summary>
			public static string esri_projectItem_managedMosaicDataset {
				 get { return "esri_projectItem_managedMosaicDataset"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_SelectedItemIsParcelTopologyEnabled&quot; (State, Catalog)</summary>
			public static string esri_projectItem_SelectedItemIsParcelTopologyEnabled {
				 get { return "esri_projectItem_SelectedItemIsParcelTopologyEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_replica_SelectedIsCheckout&quot; (State, Catalog)</summary>
			public static string esri_replica_SelectedIsCheckout {
				 get { return "esri_replica_SelectedIsCheckout"; }
			}
		}
		public static partial class Subgroup {
			///<summary>Returns the id string for &quot;esri_database_NewSubgroup&quot; (Subgroup, Catalog)</summary>
			public static string esri_database_NewSubgroup {
				 get { return "esri_database_NewSubgroup"; }
			}
			///<summary>Returns the id string for &quot;esri_database_subgroup1&quot; (Subgroup, Catalog)</summary>
			public static string esri_database_subgroup1 {
				 get { return "esri_database_subgroup1"; }
			}
			///<summary>Returns the id string for &quot;esri_database_subgroup3&quot; (Subgroup, Catalog)</summary>
			public static string esri_database_subgroup3 {
				 get { return "esri_database_subgroup3"; }
			}
			///<summary>Returns the id string for &quot;esri_database_subgroup4&quot; (Subgroup, Catalog)</summary>
			public static string esri_database_subgroup4 {
				 get { return "esri_database_subgroup4"; }
			}
			///<summary>Returns the id string for &quot;esri_folder_createSubgroup1&quot; (Subgroup, Catalog)</summary>
			public static string esri_folder_createSubgroup1 {
				 get { return "esri_folder_createSubgroup1"; }
			}
			///<summary>Returns the id string for &quot;esri_folder_createSubgroup2&quot; (Subgroup, Catalog)</summary>
			public static string esri_folder_createSubgroup2 {
				 get { return "esri_folder_createSubgroup2"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Folders&quot; (Tab, Catalog)</summary>
			public static string esri_Catalog_Folders_Tab {
				 get { return "esri_Catalog_Folders_Tab"; }
			}
			///<summary>Returns the id string for &quot;Databases&quot; (Tab, Catalog)</summary>
			public static string esri_Catalog_GDB_Tab {
				 get { return "esri_Catalog_GDB_Tab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, Catalog)</summary>
			public static string esri_Folders_TabGroup {
				 get { return "esri_Folders_TabGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, Catalog)</summary>
			public static string esri_Databases_TabGroup {
				 get { return "esri_Databases_TabGroup"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Refresh&quot; (RefreshCmd, Core)</summary>
			public static string esri_itemInfoRefreshButton {
				 get { return "esri_itemInfoRefreshButton"; }
			}
			///<summary>Returns the id string for &quot;Catalog Pane&quot; (esri_core_module:ShowProjectDockPane, Core)</summary>
			public static string esri_core_showProjectDockPane {
				 get { return "esri_core_showProjectDockPane"; }
			}
			///<summary>Returns the id string for &quot;Catalog View&quot; (esri_core_module:ShowProjectView, Core)</summary>
			public static string esri_core_showProjectView {
				 get { return "esri_core_showProjectView"; }
			}
			///<summary>Returns the id string for &quot;Columns&quot; (ArcGIS.Desktop.Internal.Core.CatalogViewDetails, Core)</summary>
			public static string esri_core_projectDetailsView {
				 get { return "esri_core_projectDetailsView"; }
			}
			///<summary>Returns the id string for &quot;Tiles&quot; (ArcGIS.Desktop.Internal.Core.CatalogViewTiles, Core)</summary>
			public static string esri_core_projectTilesView {
				 get { return "esri_core_projectTilesView"; }
			}
			///<summary>Returns the id string for &quot;Options&quot; (esri_core_module:ArcGIS.Desktop.Internal.Core.IInternalCoreModule.ShowOptionsSheet, Core)</summary>
			public static string esri_core_showOptionsSheetButton {
				 get { return "esri_core_showOptionsSheetButton"; }
			}
			///<summary>Returns the id string for &quot;Help&quot; (esri_core_module:ShowHelp, Core)</summary>
			public static string esri_core_showHelpButton {
				 get { return "esri_core_showHelpButton"; }
			}
			///<summary>Returns the id string for &quot;Exit&quot; (esri_core_module:ExitApplication, Core)</summary>
			public static string esri_core_exitApplicationButton {
				 get { return "esri_core_exitApplicationButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Framework.PasteCMD, Core)</summary>
			public static string esri_core_editPasteButton {
				 get { return "esri_core_editPasteButton"; }
			}
			///<summary>Returns the id string for &quot;Paste Special&quot; (ArcGIS.Desktop.Framework.PasteSpecialCMD, Core)</summary>
			public static string esri_core_editPasteSpecialButton {
				 get { return "esri_core_editPasteSpecialButton"; }
			}
			///<summary>Returns the id string for &quot;Cut&quot; (ArcGIS.Desktop.Framework.CutCMD, Core)</summary>
			public static string esri_core_editCutButton {
				 get { return "esri_core_editCutButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (ArcGIS.Desktop.Framework.CopyCMD, Core)</summary>
			public static string esri_core_editCopyButton {
				 get { return "esri_core_editCopyButton"; }
			}
			///<summary>Returns the id string for &quot;Copy Path&quot; (ArcGIS.Desktop.Framework.CopyPathCMD, Core)</summary>
			public static string esri_core_editCopyPaths {
				 get { return "esri_core_editCopyPaths"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (RemoveProjectItemCmd, Core)</summary>
			public static string esri_core_Remove {
				 get { return "esri_core_Remove"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (ArcGIS.Desktop.Framework.DeleteCMD, Core)</summary>
			public static string esri_core_editDeleteButton {
				 get { return "esri_core_editDeleteButton"; }
			}
			///<summary>Returns the id string for &quot;Folder&quot; (CreateFolderCmd, Core)</summary>
			public static string esri_core_newFolderButton {
				 get { return "esri_core_newFolderButton"; }
			}
			///<summary>Returns the id string for &quot;Repair&quot; (RepairProjectItemCmd, Core)</summary>
			public static string esri_core_repairProjectItem {
				 get { return "esri_core_repairProjectItem"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (Project+ProjectSaveCmd, Core)</summary>
			public static string esri_core_saveProjectButton {
				 get { return "esri_core_saveProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Save As&quot; (Project+ProjectSaveAsCmd, Core)</summary>
			public static string esri_core_saveProjectAsButton {
				 get { return "esri_core_saveProjectAsButton"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (esri_core_module:CreateNewProject, Core)</summary>
			public static string esri_core_newProjectButton {
				 get { return "esri_core_newProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_core_module:OpenProject, Core)</summary>
			public static string esri_core_openProjectButton {
				 get { return "esri_core_openProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Undo&quot; (ArcGIS.Desktop.Framework.UndoRedo.UndoCommand, Core)</summary>
			public static string esri_core_undoButton {
				 get { return "esri_core_undoButton"; }
			}
			///<summary>Returns the id string for &quot;Redo&quot; (ArcGIS.Desktop.Framework.UndoRedo.RedoCommand, Core)</summary>
			public static string esri_core_redoButton {
				 get { return "esri_core_redoButton"; }
			}
			///<summary>Returns the id string for &quot;Rename&quot; (RenameCmd, Core)</summary>
			public static string esri_core_rename {
				 get { return "esri_core_rename"; }
			}
			///<summary>Returns the id string for &quot;Contents&quot; (esri_core_module:ShowContents, Core)</summary>
			public static string esri_core_showContentsDockPane {
				 get { return "esri_core_showContentsDockPane"; }
			}
			///<summary>Returns the id string for &quot;Unlink&quot; (esri_core_module:UnlinkPortalItem, Core)</summary>
			public static string esri_core_unlinkPortalItemButton {
				 get { return "esri_core_unlinkPortalItemButton"; }
			}
			///<summary>Returns the id string for &quot;Update&quot; (esri_core_module:SyncPortalItem, Core)</summary>
			public static string esri_core_syncPortalItemButton {
				 get { return "esri_core_syncPortalItemButton"; }
			}
			///<summary>Returns the id string for &quot;Default Sort&quot; (CatalogSortButton, Core)</summary>
			public static string esri_core_projectViewClearSort {
				 get { return "esri_core_projectViewClearSort"; }
			}
			///<summary>Returns the id string for &quot;Details Panel&quot; (ArcGIS.Desktop.Internal.Core.ProjectViewChangeLayoutCheckBox, Core)</summary>
			public static string esri_core_projectViewLayoutCheckBoxOpen {
				 get { return "esri_core_projectViewLayoutCheckBoxOpen"; }
			}
			///<summary>Returns the id string for &quot;Search My Organization&quot; (ArcGIS.Desktop.Internal.Core.ProjectViewOptionsSearchOrg, Core)</summary>
			public static string esri_core_projectViewOptionsSearchOrg {
				 get { return "esri_core_projectViewOptionsSearchOrg"; }
			}
			///<summary>Returns the id string for &quot;Search All&quot; (ArcGIS.Desktop.Internal.Core.ProjectViewOptionsSearchAll, Core)</summary>
			public static string esri_core_projectViewOptionsSearchAll {
				 get { return "esri_core_projectViewOptionsSearchAll"; }
			}
			///<summary>Returns the id string for &quot;Hide Pop-ups&quot; (ArcGIS.Desktop.Internal.Core.HideTooltips, Core)</summary>
			public static string esri_core_HideItemTooltips {
				 get { return "esri_core_HideItemTooltips"; }
			}
			///<summary>Returns the id string for &quot;Show Pop-ups&quot; (ArcGIS.Desktop.Internal.Core.ShowItemTooltips, Core)</summary>
			public static string esri_core_ShowItemTooltips {
				 get { return "esri_core_ShowItemTooltips"; }
			}
			///<summary>Returns the id string for &quot;Show Detailed Pop-ups&quot; (ArcGIS.Desktop.Internal.Core.ShowDetailedItemTooltips, Core)</summary>
			public static string esri_core_ShowDetailedItemTooltips {
				 get { return "esri_core_ShowDetailedItemTooltips"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Selection&quot; (CorePreviewItemZoomToSelection, Core)</summary>
			public static string esri_core_previewZoomToSelectionButton {
				 get { return "esri_core_previewZoomToSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom Full Extent&quot; (CorePreviewItemZoomToFull, Core)</summary>
			public static string esri_core_previewZoomFullButton {
				 get { return "esri_core_previewZoomFullButton"; }
			}
			///<summary>Returns the id string for &quot;Fixed Zoom In&quot; (CorePreviewItemFixedZoomIn, Core)</summary>
			public static string esri_core_previewFixedZoomInButton {
				 get { return "esri_core_previewFixedZoomInButton"; }
			}
			///<summary>Returns the id string for &quot;Fixed Zoom Out&quot; (CorePreviewItemFixedZoomOut, Core)</summary>
			public static string esri_core_previewFixedZoomOutButton {
				 get { return "esri_core_previewFixedZoomOutButton"; }
			}
			///<summary>Returns the id string for &quot;Previous Extent&quot; (CorePreviewItemPrevExtent, Core)</summary>
			public static string esri_core_previewPrevExtentButton {
				 get { return "esri_core_previewPrevExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Next Extent&quot; (CorePreviewItemNextExtent, Core)</summary>
			public static string esri_core_previewNextExtentButton {
				 get { return "esri_core_previewNextExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Create Thumbnail&quot; (CorePreviewItemCaptureThumbnail, Core)</summary>
			public static string esri_core_previewCaptureThumbnail {
				 get { return "esri_core_previewCaptureThumbnail"; }
			}
			///<summary>Returns the id string for &quot;Refresh&quot; (RefreshCmd, Core)</summary>
			public static string esri_core_refresh {
				 get { return "esri_core_refresh"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (OpenCmd, Core)</summary>
			public static string esri_core_openButton {
				 get { return "esri_core_openButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (AddToProjectCmd, Core)</summary>
			public static string esri_core_addToProject {
				 get { return "esri_core_addToProject"; }
			}
			///<summary>Returns the id string for &quot;Add To Favorites&quot; (AddToFavoritesCmd, Core)</summary>
			public static string esri_addFavoriteButton {
				 get { return "esri_addFavoriteButton"; }
			}
			///<summary>Returns the id string for &quot;Add To New Projects&quot; (AddItemToNewProjectsCmd, Core)</summary>
			public static string esri_addProjectItemToNewProjectsButton {
				 get { return "esri_addProjectItemToNewProjectsButton"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (SortClearCmd, Core)</summary>
			public static string esri_core_sortClear {
				 get { return "esri_core_sortClear"; }
			}
			///<summary>Returns the id string for &quot;Type&quot; (SortTypeCmd, Core)</summary>
			public static string esri_core_sortType {
				 get { return "esri_core_sortType"; }
			}
			///<summary>Returns the id string for &quot;Date&quot; (SortDateCmd, Core)</summary>
			public static string esri_core_sortDate {
				 get { return "esri_core_sortDate"; }
			}
			///<summary>Returns the id string for &quot;Name&quot; (SortNameCmd, Core)</summary>
			public static string esri_core_sortName {
				 get { return "esri_core_sortName"; }
			}
			///<summary>Returns the id string for &quot;Category&quot; (SortCategoryCmd, Core)</summary>
			public static string esri_core_sortCategory {
				 get { return "esri_core_sortCategory"; }
			}
			///<summary>Returns the id string for &quot;Key&quot; (SortKeyCmd, Core)</summary>
			public static string esri_core_sortKey {
				 get { return "esri_core_sortKey"; }
			}
		}
		public static partial class Buttonpalette {
			///<summary>Returns the id string for &quot;Item Pop-ups&quot; (Buttonpalette, Core)</summary>
			public static string esri_core_popupTooltipPalette {
				 get { return "esri_core_popupTooltipPalette"; }
			}
			///<summary>Returns the id string for &quot;Portal Search&quot; (Buttonpalette, Core)</summary>
			public static string esri_core_searchPalette {
				 get { return "esri_core_searchPalette"; }
			}
			///<summary>Returns the id string for &quot;Display Type&quot; (Buttonpalette, Core)</summary>
			public static string esri_core_projectViewDisplayType {
				 get { return "esri_core_projectViewDisplayType"; }
			}
		}
		public static partial class Checkbox {
			///<summary>Returns the id string for &quot;Show Basemap&quot; (CorePreviewItemShowBasemapCheckBox, Core)</summary>
			public static string esri_core_previewShowBasemap {
				 get { return "esri_core_previewShowBasemap"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_displayunits_projectContainer&quot; (ArcGIS.Desktop.Internal.Core.DisplayUnitEnvironmentItemContainer, Core)</summary>
			public static string esri_displayunits_projectContainer {
				 get { return "esri_displayunits_projectContainer"; }
			}
		}
		public static partial class Customcontrol {
			///<summary>Returns the id string for &quot;Undo&quot; (ArcGIS.Desktop.Framework.UndoRedo.UndoHistoryVM, Core)</summary>
			public static string esri_core_undoHistory {
				 get { return "esri_core_undoHistory"; }
			}
			///<summary>Returns the id string for &quot;Redo&quot; (ArcGIS.Desktop.Framework.UndoRedo.RedoHistoryVM, Core)</summary>
			public static string esri_core_redoHistory {
				 get { return "esri_core_redoHistory"; }
			}
			///<summary>Returns the id string for &quot;Not Signed In&quot; (SignOnUserControlViewModel, Core)</summary>
			public static string esri_core_signOnControl {
				 get { return "esri_core_signOnControl"; }
			}
			///<summary>Returns the id string for &quot;test&quot; (ArcGIS.Desktop.Framework.NotificationControlViewModel, Core)</summary>
			public static string esri_core_notificationControl {
				 get { return "esri_core_notificationControl"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Catalog&quot; (ProjectDockPaneVM, Core)</summary>
			public static string esri_core_projectDockPane {
				 get { return "esri_core_projectDockPane"; }
			}
			///<summary>Returns the id string for &quot;Contents&quot; (ContentsDockPaneViewModel, Core)</summary>
			public static string esri_core_contentsDockPane {
				 get { return "esri_core_contentsDockPane"; }
			}
			///<summary>Returns the id string for &quot;Notifications&quot; (ArcGIS.Desktop.Framework.NotificationDockPaneViewModel, Core)</summary>
			public static string esri_core_notificationDockPane {
				 get { return "esri_core_notificationDockPane"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (ProjectHistoryDockPaneViewModel, Core)</summary>
			public static string esri_core_projectHistoryDockPane {
				 get { return "esri_core_projectHistoryDockPane"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Reset Panes&quot; (ArcGIS.Desktop.Framework.DockPaneSetChooser, Core)</summary>
			public static string esri_dockPaneSetDynamicMenu {
				 get { return "esri_dockPaneSetDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Sort&quot; (SortDynamicMenu, Core)</summary>
			public static string esri_core_sortColumns {
				 get { return "esri_core_sortColumns"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (AddItemsDynamicMenu, Core)</summary>
			public static string esri_core_addItemsDynamicMenu {
				 get { return "esri_core_addItemsDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (NewItemsDynamicMenu, Core)</summary>
			public static string esri_core_newItemsDynamicMenu {
				 get { return "esri_core_newItemsDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (ImportItemsDynamicMenu, Core)</summary>
			public static string esri_core_importItemsDynamicMenu {
				 get { return "esri_core_importItemsDynamicMenu"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Project&quot; (Group, Core)</summary>
			public static string esri_core_projectData {
				 get { return "esri_core_projectData"; }
			}
			///<summary>Returns the id string for &quot;Favorites&quot; (Group, Core)</summary>
			public static string esri_core_favoritesData {
				 get { return "esri_core_favoritesData"; }
			}
			///<summary>Returns the id string for &quot;Options&quot; (Group, Core)</summary>
			public static string esri_core_projectViewOptionsGroup {
				 get { return "esri_core_projectViewOptionsGroup"; }
			}
			///<summary>Returns the id string for &quot;Clipboard&quot; (Group, Core)</summary>
			public static string esri_core_clipboardGroup {
				 get { return "esri_core_clipboardGroup"; }
			}
			///<summary>Returns the id string for &quot;Organize&quot; (Group, Core)</summary>
			public static string esri_core_organize {
				 get { return "esri_core_organize"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Group, Core)</summary>
			public static string esri_core_create {
				 get { return "esri_core_create"; }
			}
			///<summary>Returns the id string for &quot;Windows&quot; (Group, Core)</summary>
			public static string esri_core_dockWindows {
				 get { return "esri_core_dockWindows"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (Group, Core)</summary>
			public static string esri_core_previewNavigateGroup {
				 get { return "esri_core_previewNavigateGroup"; }
			}
			///<summary>Returns the id string for &quot;Preview&quot; (Group, Core)</summary>
			public static string esri_core_previewPreviewGroup {
				 get { return "esri_core_previewPreviewGroup"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_core_projectContainers&quot; (Category, Core)</summary>
			public static string esri_core_projectContainers {
				 get { return "esri_core_projectContainers"; }
			}
			///<summary>Returns the id string for &quot;esri_item&quot; (Category, Core)</summary>
			public static string esri_item {
				 get { return "esri_item"; }
			}
			///<summary>Returns the id string for &quot;esri_cef_customSchemes&quot; (Category, Core)</summary>
			public static string esri_cef_customSchemes {
				 get { return "esri_cef_customSchemes"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType&quot; (Category, Core)</summary>
			public static string esri_itemInfoType {
				 get { return "esri_itemInfoType"; }
			}
			///<summary>Returns the id string for &quot;esri_browseFilters&quot; (Category, Core)</summary>
			public static string esri_browseFilters {
				 get { return "esri_browseFilters"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters&quot; (Category, Core)</summary>
			public static string esri_browseDialogFilters {
				 get { return "esri_browseDialogFilters"; }
			}
			///<summary>Returns the id string for &quot;esri_browsePlaces&quot; (Category, Core)</summary>
			public static string esri_browsePlaces {
				 get { return "esri_browsePlaces"; }
			}
			///<summary>Returns the id string for &quot;esri_embeddableControls&quot; (Category, Core)</summary>
			public static string esri_embeddableControls {
				 get { return "esri_embeddableControls"; }
			}
			///<summary>Returns the id string for &quot;esri_tasks_embeddableControls&quot; (Category, Core)</summary>
			public static string esri_tasks_embeddableControls {
				 get { return "esri_tasks_embeddableControls"; }
			}
			///<summary>Returns the id string for &quot;esri_core_dataTemplates&quot; (Category, Core)</summary>
			public static string esri_core_dataTemplates {
				 get { return "esri_core_dataTemplates"; }
			}
			///<summary>Returns the id string for &quot;esri_core_multiSelectRecognizer&quot; (Category, Core)</summary>
			public static string esri_core_multiSelectRecognizer {
				 get { return "esri_core_multiSelectRecognizer"; }
			}
			///<summary>Returns the id string for &quot;esri_core_itemCategories&quot; (Category, Core)</summary>
			public static string esri_core_itemCategories {
				 get { return "esri_core_itemCategories"; }
			}
			///<summary>Returns the id string for &quot;esri_core_projectViewProviders&quot; (Category, Core)</summary>
			public static string esri_core_projectViewProviders {
				 get { return "esri_core_projectViewProviders"; }
			}
			///<summary>Returns the id string for &quot;esri_project_historyControls&quot; (Category, Core)</summary>
			public static string esri_project_historyControls {
				 get { return "esri_project_historyControls"; }
			}
			///<summary>Returns the id string for &quot;esri_sharingCategory&quot; (Category, Core)</summary>
			public static string esri_sharingCategory {
				 get { return "esri_sharingCategory"; }
			}
			///<summary>Returns the id string for &quot;esri_customizedCommandsCategory&quot; (Category, Core)</summary>
			public static string esri_customizedCommandsCategory {
				 get { return "esri_customizedCommandsCategory"; }
			}
			///<summary>Returns the id string for &quot;esri_customItems&quot; (Category, Core)</summary>
			public static string esri_customItems {
				 get { return "esri_customItems"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;project_gebrowse_place_project&quot; (BrowseProjectViewModelProvider, Core)</summary>
			public static string project_gebrowse_place_project {
				 get { return "project_gebrowse_place_project"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;Browse Places Online&quot; (Condition, Core)</summary>
			public static string esri_browsePlaces_Online_Condition {
				 get { return "esri_browsePlaces_Online_Condition"; }
			}
			///<summary>Returns the id string for &quot;No panes active&quot; (Condition, Core)</summary>
			public static string esri_core_noPanesCondition {
				 get { return "esri_core_noPanesCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Core)</summary>
			public static string esri_core_projectItem_resourcesOnlyPane {
				 get { return "esri_core_projectItem_resourcesOnlyPane"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Core)</summary>
			public static string esri_core_projectItem_resourcesPane {
				 get { return "esri_core_projectItem_resourcesPane"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Core)</summary>
			public static string esri_core_search_orgOnlyCondition {
				 get { return "esri_core_search_orgOnlyCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_core_noCustomize&quot; (Condition, Core)</summary>
			public static string esri_core_noCustomize {
				 get { return "esri_core_noCustomize"; }
			}
			///<summary>Returns the id string for &quot;esri_core_previewActiveCondition&quot; (Condition, Core)</summary>
			public static string esri_core_previewActiveCondition {
				 get { return "esri_core_previewActiveCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_core_previewShowBasemapCondition&quot; (Condition, Core)</summary>
			public static string esri_core_previewShowBasemapCondition {
				 get { return "esri_core_previewShowBasemapCondition"; }
			}
		}
		public static partial class Dockpaneset {
			///<summary>Returns the id string for &quot;Reset Panes for Mapping (Default)&quot; (Dockpaneset, Core)</summary>
			public static string esri_DockPaneReset_Mapping {
				 get { return "esri_DockPaneReset_Mapping"; }
			}
			///<summary>Returns the id string for &quot;Reset Panes for Editing&quot; (Dockpaneset, Core)</summary>
			public static string esri_DockPaneReset_Editing {
				 get { return "esri_DockPaneReset_Editing"; }
			}
			///<summary>Returns the id string for &quot;Reset Panes for Geoprocessing&quot; (Dockpaneset, Core)</summary>
			public static string esri_DockPaneReset_Geoprocessing {
				 get { return "esri_DockPaneReset_Geoprocessing"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Project Module&quot; (CoreModule, Core)</summary>
			public static string esri_core_module {
				 get { return "esri_core_module"; }
			}
		}
		public static partial class Product {
			///<summary>Returns the id string for &quot;StreetMap Premium North America&quot; (Product, Core)</summary>
			public static string esri_product_streetmapPremiumnNorthAmerica {
				 get { return "esri_product_streetmapPremiumnNorthAmerica"; }
			}
			///<summary>Returns the id string for &quot;StreetMap Premium Europe&quot; (Product, Core)</summary>
			public static string esri_product_streetmapPremiumnEurope {
				 get { return "esri_product_streetmapPremiumnEurope"; }
			}
			///<summary>Returns the id string for &quot;StreetMap Premium Latin America&quot; (Product, Core)</summary>
			public static string esri_product_streetmapPremiumnLatinAmerica {
				 get { return "esri_product_streetmapPremiumnLatinAmerica"; }
			}
			///<summary>Returns the id string for &quot;StreetMap Premium Asia Pacific&quot; (Product, Core)</summary>
			public static string esri_product_streetmapPremiumnAsiaPacific {
				 get { return "esri_product_streetmapPremiumnAsiaPacific"; }
			}
			///<summary>Returns the id string for &quot;StreetMap Premium Middle East and Africa&quot; (Product, Core)</summary>
			public static string esri_product_streetmapPremiumnMiddleEastAfrica {
				 get { return "esri_product_streetmapPremiumnMiddleEastAfrica"; }
			}
			///<summary>Returns the id string for &quot;StreetMap Premium Japan&quot; (Product, Core)</summary>
			public static string esri_product_streetmapPremiumJapan {
				 get { return "esri_product_streetmapPremiumJapan"; }
			}
			///<summary>Returns the id string for &quot;Publisher&quot; (Product, Core)</summary>
			public static string esri_product_publisher {
				 get { return "esri_product_publisher"; }
			}
			///<summary>Returns the id string for &quot;Aviation Charting&quot; (Product, Core)</summary>
			public static string esri_product_aviationCharting {
				 get { return "esri_product_aviationCharting"; }
			}
			///<summary>Returns the id string for &quot;Aviation Airports&quot; (Product, Core)</summary>
			public static string esri_product_aviationAirports {
				 get { return "esri_product_aviationAirports"; }
			}
			///<summary>Returns the id string for &quot;Maritime Charting&quot; (Product, Core)</summary>
			public static string esri_product_maritimeCharting {
				 get { return "esri_product_maritimeCharting"; }
			}
			///<summary>Returns the id string for &quot;Maritime Bathymetry&quot; (Product, Core)</summary>
			public static string esri_product_maritimeBathymetry {
				 get { return "esri_product_maritimeBathymetry"; }
			}
			///<summary>Returns the id string for &quot;Business Analyst&quot; (Product, Core)</summary>
			public static string esri_product_businessanalyst {
				 get { return "esri_product_businessanalyst"; }
			}
			///<summary>Returns the id string for &quot;Image Analyst&quot; (Product, Core)</summary>
			public static string esri_product_imageanalyst {
				 get { return "esri_product_imageanalyst"; }
			}
			///<summary>Returns the id string for &quot;LocateXT&quot; (Product, Core)</summary>
			public static string esri_product_locatext {
				 get { return "esri_product_locatext"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Options&quot; (Sheet, Core)</summary>
			public static string esri_core_optionsPropertySheet {
				 get { return "esri_core_optionsPropertySheet"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;New&quot; (ProjectNewBackStageViewModel, Core)</summary>
			public static string esri_core_newProjectBackStageTab {
				 get { return "esri_core_newProjectBackStageTab"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (ProjectOpenBackStageViewModel, Core)</summary>
			public static string esri_core_openProjectBackStageTab {
				 get { return "esri_core_openProjectBackStageTab"; }
			}
			///<summary>Returns the id string for &quot;Portals&quot; (PortalBackstageViewModel, Core)</summary>
			public static string esri_core_PortalTab {
				 get { return "esri_core_PortalTab"; }
			}
			///<summary>Returns the id string for &quot;Licensing&quot; (LicensingBackstageViewModel, Core)</summary>
			public static string esri_core_LicensingTab {
				 get { return "esri_core_LicensingTab"; }
			}
			///<summary>Returns the id string for &quot;Python&quot; (ArcGIS.Desktop.Internal.Core.Conda.Backstage.Tab, Core)</summary>
			public static string esri_core_CondaTab {
				 get { return "esri_core_CondaTab"; }
			}
			///<summary>Returns the id string for &quot;Add-In Manager&quot; (ArcGIS.Desktop.Framework.AddIns.AddInManagerDlgViewModel, Core)</summary>
			public static string esri_core_AddInsTab {
				 get { return "esri_core_AddInsTab"; }
			}
			///<summary>Returns the id string for &quot;About&quot; (ArcGIS.Desktop.Framework.AboutViewModel, Core)</summary>
			public static string esri_core_aboutTab {
				 get { return "esri_core_aboutTab"; }
			}
		}
		public static partial class Labelcontrol {
			///<summary>Returns the id string for &quot; &quot; (Labelcontrol, Core)</summary>
			public static string esri_emptyLabel1 {
				 get { return "esri_emptyLabel1"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Browse Dialog Single Rename Item&quot; (Menu, Core)</summary>
			public static string esri_BrowseDialog_SingleItem {
				 get { return "esri_BrowseDialog_SingleItem"; }
			}
			///<summary>Returns the id string for &quot;Folder General Item&quot; (Menu, Core)</summary>
			public static string esri_BrowseDialog_FolderGeneral {
				 get { return "esri_BrowseDialog_FolderGeneral"; }
			}
			///<summary>Returns the id string for &quot;-&quot; (Menu, Core)</summary>
			public static string esri_projectDefaultContextMenu {
				 get { return "esri_projectDefaultContextMenu"; }
			}
			///<summary>Returns the id string for &quot;-&quot; (Menu, Core)</summary>
			public static string esri_favoritesItemDefaultContextMenu {
				 get { return "esri_favoritesItemDefaultContextMenu"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Current Settings&quot; (ProjectOptionsViewModel, Core)</summary>
			public static string esri_core_ProjectOptionsPropertyPage {
				 get { return "esri_core_ProjectOptionsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ApplicationOptionsViewModel, Core)</summary>
			public static string esri_core_ApplicationOptionsPropertyPage {
				 get { return "esri_core_ApplicationOptionsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Proofing&quot; (ArcGIS.Desktop.Framework.DictionaryViewModel, Core)</summary>
			public static string esri_core_Proofing {
				 get { return "esri_core_Proofing"; }
			}
			///<summary>Returns the id string for &quot;Language&quot; (ArcGIS.Desktop.Internal.Core.Language.LanguageVM, Core)</summary>
			public static string esri_core_LanguagePropertyPage {
				 get { return "esri_core_LanguagePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;User Interface&quot; (UserInterfaceViewModel, Core)</summary>
			public static string esri_core_userInterfacePropertyPage {
				 get { return "esri_core_userInterfacePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Customize the Ribbon&quot; (ArcGIS.Desktop.Framework.CustomizeViewModel, Core)</summary>
			public static string esri_mapping_customizePropertyPage {
				 get { return "esri_mapping_customizePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Quick Access Toolbar&quot; (ArcGIS.Desktop.Framework.CustomizeQATViewModel, Core)</summary>
			public static string esri_mapping_customizeQATPropertyPage {
				 get { return "esri_mapping_customizeQATPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Share and Download&quot; (LocationOptionsViewModel, Core)</summary>
			public static string esri_sharing_SharingPropertyPage {
				 get { return "esri_sharing_SharingPropertyPage"; }
			}
		}
		public static partial class Pane {
			///<summary>Returns the id string for &quot;Start Page&quot; (StartPageViewModel, Core)</summary>
			public static string esri_core_startPage {
				 get { return "esri_core_startPage"; }
			}
			///<summary>Returns the id string for &quot;Catalog&quot; (ProjectPaneVM, Core)</summary>
			public static string esri_core_resourcesPane {
				 get { return "esri_core_resourcesPane"; }
			}
		}
		public static partial class Splitbutton {
			///<summary>Returns the id string for &quot;esri_core_undoSplitButton&quot; (Splitbutton, Core)</summary>
			public static string esri_core_undoSplitButton {
				 get { return "esri_core_undoSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_core_redoSplitButton&quot; (Splitbutton, Core)</summary>
			public static string esri_core_redoSplitButton {
				 get { return "esri_core_redoSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_core_editPasteSplitButton&quot; (Splitbutton, Core)</summary>
			public static string esri_core_editPasteSplitButton {
				 get { return "esri_core_editPasteSplitButton"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_browsePlaces_Online_State&quot; (State, Core)</summary>
			public static string esri_browsePlaces_Online_State {
				 get { return "esri_browsePlaces_Online_State"; }
			}
			///<summary>Returns the id string for &quot;NoPanes&quot; (State, Core)</summary>
			public static string NoPanes {
				 get { return "NoPanes"; }
			}
			///<summary>Returns the id string for &quot;esri_metadata_metadataPane&quot; (State, Core)</summary>
			public static string esri_metadata_metadataPane {
				 get { return "esri_metadata_metadataPane"; }
			}
			///<summary>Returns the id string for &quot;esri_core_search_orgOnly&quot; (State, Core)</summary>
			public static string esri_core_search_orgOnly {
				 get { return "esri_core_search_orgOnly"; }
			}
			///<summary>Returns the id string for &quot;esri_core_blockCustomizeDialog&quot; (State, Core)</summary>
			public static string esri_core_blockCustomizeDialog {
				 get { return "esri_core_blockCustomizeDialog"; }
			}
			///<summary>Returns the id string for &quot;esri_core_projectViewHasSelectedItems&quot; (State, Core)</summary>
			public static string esri_core_projectViewHasSelectedItems {
				 get { return "esri_core_projectViewHasSelectedItems"; }
			}
			///<summary>Returns the id string for &quot;esri_core_previewSelectedState&quot; (State, Core)</summary>
			public static string esri_core_previewSelectedState {
				 get { return "esri_core_previewSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_core_previewCanEditBasemapState&quot; (State, Core)</summary>
			public static string esri_core_previewCanEditBasemapState {
				 get { return "esri_core_previewCanEditBasemapState"; }
			}
		}
		public static partial class Subgroup {
			///<summary>Returns the id string for &quot;esri_core_editBtns&quot; (Subgroup, Core)</summary>
			public static string esri_core_editBtns {
				 get { return "esri_core_editBtns"; }
			}
			///<summary>Returns the id string for &quot;esri_core_organizeItems1&quot; (Subgroup, Core)</summary>
			public static string esri_core_organizeItems1 {
				 get { return "esri_core_organizeItems1"; }
			}
			///<summary>Returns the id string for &quot;esri_core_organizeItems2&quot; (Subgroup, Core)</summary>
			public static string esri_core_organizeItems2 {
				 get { return "esri_core_organizeItems2"; }
			}
			///<summary>Returns the id string for &quot;esri_core_organizeItems3&quot; (Subgroup, Core)</summary>
			public static string esri_core_organizeItems3 {
				 get { return "esri_core_organizeItems3"; }
			}
			///<summary>Returns the id string for &quot;esri_core_newItems&quot; (Subgroup, Core)</summary>
			public static string esri_core_newItems {
				 get { return "esri_core_newItems"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Catalog&quot; (Tab, Core)</summary>
			public static string esri_core_homeTab {
				 get { return "esri_core_homeTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, Core)</summary>
			public static string esri_core_insertTab {
				 get { return "esri_core_insertTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, Core)</summary>
			public static string esri_core_analysisTab {
				 get { return "esri_core_analysisTab"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, Core)</summary>
			public static string esri_core_viewTab {
				 get { return "esri_core_viewTab"; }
			}
			///<summary>Returns the id string for &quot;Preview&quot; (Tab, Core)</summary>
			public static string esri_core_previewTab {
				 get { return "esri_core_previewTab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Catalog View&quot; (Tabgroup, Core)</summary>
			public static string esri_core_previewTabGroup {
				 get { return "esri_core_previewTabGroup"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Add Reviewer Results&quot; (esri_dataReviewer_dataReviewerModule:OnClick_AddReviewResults, DataReviewer)</summary>
			public static string esri_dataReviewer_addReviewerConnectionButton {
				 get { return "esri_dataReviewer_addReviewerConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;Add Reviewer Batch Jobs&quot; (esri_dataReviewer_dataReviewerModule:OnClick_AddBatchJobs, DataReviewer)</summary>
			public static string esri_dataReviewer_addBatchJobsButton {
				 get { return "esri_dataReviewer_addBatchJobsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Session&quot; (esri_dataReviewer_dataReviewerModule:OnClick_AddSession, DataReviewer)</summary>
			public static string esri_dataReviewer_ReviewResults_AddSession {
				 get { return "esri_dataReviewer_ReviewResults_AddSession"; }
			}
			///<summary>Returns the id string for &quot;New Session&quot; (esri_dataReviewer_dataReviewerModule:OnClick_NewSession, DataReviewer)</summary>
			public static string esri_dataReviewer_ReviewResults_NewSession {
				 get { return "esri_dataReviewer_ReviewResults_NewSession"; }
			}
			///<summary>Returns the id string for &quot;Update Results Connection...&quot; (esri_dataReviewer_dataReviewerModule:OnClick_UpdateReviewResults, DataReviewer)</summary>
			public static string esri_dataReviewer_ReviewResults_UpdateConnection {
				 get { return "esri_dataReviewer_ReviewResults_UpdateConnection"; }
			}
			///<summary>Returns the id string for &quot;Remove Results Connection&quot; (esri_dataReviewer_dataReviewerModule:OnClick_RemoveConnection, DataReviewer)</summary>
			public static string esri_dataReviewer_ReviewResults_RemoveConnection {
				 get { return "esri_dataReviewer_ReviewResults_RemoveConnection"; }
			}
			///<summary>Returns the id string for &quot;Full Database&quot; (ArcGIS.Desktop.Internal.DataReviewer.BatchJobItemMenuCommands, DataReviewer)</summary>
			public static string esri_dataReviewer_batchJob_fullDatabase {
				 get { return "esri_dataReviewer_batchJob_fullDatabase"; }
			}
			///<summary>Returns the id string for &quot;Active Map Extent&quot; (ArcGIS.Desktop.Internal.DataReviewer.BatchJobItemMenuCommands, DataReviewer)</summary>
			public static string esri_dataReviewer_batchJob_currentMapExtent {
				 get { return "esri_dataReviewer_batchJob_currentMapExtent"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_dataReviewer_dataReviewerModule:OnClick_RemoveBatchJob, DataReviewer)</summary>
			public static string esri_dataReviewer_BatchJob_Remove {
				 get { return "esri_dataReviewer_BatchJob_Remove"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_dataReviewer_dataReviewerModule:OnClick_OpenResults, DataReviewer)</summary>
			public static string esri_dataReviewer_Session_OpenResults {
				 get { return "esri_dataReviewer_Session_OpenResults"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_dataReviewer_dataReviewerModule:OnClick_RemoveSession, DataReviewer)</summary>
			public static string esri_dataReviewer_Session_RemoveSession {
				 get { return "esri_dataReviewer_Session_RemoveSession"; }
			}
			///<summary>Returns the id string for &quot;Make Default&quot; (esri_dataReviewer_dataReviewerModule:OnClick_MakeSessionDefault, DataReviewer)</summary>
			public static string esri_dataReviewer_Session_MakeDefault {
				 get { return "esri_dataReviewer_Session_MakeDefault"; }
			}
			///<summary>Returns the id string for &quot;Delete...&quot; (esri_dataReviewer_dataReviewerModule:OnClick_DeleteSession, DataReviewer)</summary>
			public static string esri_dataReviewer_Session_DeleteSession {
				 get { return "esri_dataReviewer_Session_DeleteSession"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Results&quot; (esri_dataReviewer_dataReviewerModule:ZoomToSelectedItems, DataReviewer)</summary>
			public static string esri_dataReviewer_ZoomToSelectedItems {
				 get { return "esri_dataReviewer_ZoomToSelectedItems"; }
			}
			///<summary>Returns the id string for &quot;Pan To Results&quot; (esri_dataReviewer_dataReviewerModule:PanToSelectedItems, DataReviewer)</summary>
			public static string esri_dataReviewer_PanToSelectedItems {
				 get { return "esri_dataReviewer_PanToSelectedItems"; }
			}
			///<summary>Returns the id string for &quot;Update Results&quot; (esri_dataReviewer_dataReviewerModule:ActivateUpdateResultsPane, DataReviewer)</summary>
			public static string esri_dataReviewer_ActivateUpdateResultsPane {
				 get { return "esri_dataReviewer_ActivateUpdateResultsPane"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_dataReviewer_dataReviewerModule:OpenSelectedItemMetadata, DataReviewer)</summary>
			public static string esri_dataReviewer_OpenMetadataSelectedItems {
				 get { return "esri_dataReviewer_OpenMetadataSelectedItems"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_dataReviewer_dataReviewerModule:OnClick_AddToProject, DataReviewer)</summary>
			public static string esri_dataReviewer_batchJobAddToProjectButton {
				 get { return "esri_dataReviewer_batchJobAddToProjectButton"; }
			}
			///<summary>Returns the id string for &quot;Reviewer Rules&quot; (esri_dataReviewer_dataReviewerModule:OpenRulesViewAsync, DataReviewer)</summary>
			public static string esri_dataReviewer_OpenRulesViewButton {
				 get { return "esri_dataReviewer_OpenRulesViewButton"; }
			}
			///<summary>Returns the id string for &quot;Import...&quot; (esri_dataReviewer_dataReviewerModule:ImportRulesAsync, DataReviewer)</summary>
			public static string esri_dataReviewer_ImportRules {
				 get { return "esri_dataReviewer_ImportRules"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_dataReviewer_dataReviewerModule:DeleteReviewerRules, DataReviewer)</summary>
			public static string esri_dataReviewer_DeleteReviewerRules {
				 get { return "esri_dataReviewer_DeleteReviewerRules"; }
			}
			///<summary>Returns the id string for &quot;Manage Quality&quot; (esri_dataReviewer_dataReviewerModule:ManageQuality, DataReviewer)</summary>
			public static string esri_dataReviewer_ManageQuality {
				 get { return "esri_dataReviewer_ManageQuality"; }
			}
			///<summary>Returns the id string for &quot;Close Manage Quality&quot; (esri_dataReviewer_dataReviewerModule:CloseManageQuality, DataReviewer)</summary>
			public static string esri_dataReviewer_CloseManageQuality {
				 get { return "esri_dataReviewer_CloseManageQuality"; }
			}
			///<summary>Returns the id string for &quot;Browse Features&quot; (esri_dataReviewer_dataReviewerModule:OpenEvaluateFeatures, DataReviewer)</summary>
			public static string esri_dataReviewer_evalFeaturesButton {
				 get { return "esri_dataReviewer_evalFeaturesButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (esri_dataReviewer_dataReviewerModule:EvaluateFeatures_ZoomTo, DataReviewer)</summary>
			public static string esri_dataReviewer_EvalFeaturesZoomTo {
				 get { return "esri_dataReviewer_EvalFeaturesZoomTo"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (esri_dataReviewer_dataReviewerModule:EvaluateFeatures_PanTo, DataReviewer)</summary>
			public static string esri_dataReviewer_EvalFeaturesPanTo {
				 get { return "esri_dataReviewer_EvalFeaturesPanTo"; }
			}
			///<summary>Returns the id string for &quot;Flash&quot; (esri_dataReviewer_dataReviewerModule:EvaluateFeatures_Flash, DataReviewer)</summary>
			public static string esri_dataReviewer_EvalFeaturesFlash {
				 get { return "esri_dataReviewer_EvalFeaturesFlash"; }
			}
		}
		public static partial class Customcontrol {
			///<summary>Returns the id string for &quot;Run Reviewer Rules&quot; (ArcGIS.Desktop.Internal.DataReviewer.Controls.RunRulesOptionsControl.RunRulesOptionsSplitViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_RunRules {
				 get { return "esri_dataReviewer_RunRules"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (ArcGIS.Desktop.Internal.DataReviewer.Controls.ValidationResultsItemViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_ValidationResultsHistory {
				 get { return "esri_dataReviewer_ValidationResultsHistory"; }
			}
			///<summary>Returns the id string for &quot;Symbolize&quot; (ArcGIS.Desktop.Internal.DataReviewer.Symbolization.ResultsSymbolizationOptionsSplitViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_Symbolize {
				 get { return "esri_dataReviewer_Symbolize"; }
			}
			///<summary>Returns the id string for &quot;Flag Missing Features&quot; (ArcGIS.Desktop.Internal.DataReviewer.VisualReview.FlagMissingFeaturesSplitViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_FlagMissingFeatures {
				 get { return "esri_dataReviewer_FlagMissingFeatures"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Reviewer Results&quot; (ArcGIS.Desktop.Internal.DataReviewer.ReviewerTable.ReviewerResultsPaneViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_reviewerResultsDockPane {
				 get { return "esri_dataReviewer_reviewerResultsDockPane"; }
			}
			///<summary>Returns the id string for &quot;Update Results&quot; (ArcGIS.Desktop.Internal.DataReviewer.UpdateResults.UpdateResultsViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_ResultsPaneAttributeEditor {
				 get { return "esri_dataReviewer_ResultsPaneAttributeEditor"; }
			}
			///<summary>Returns the id string for &quot;Browse Features&quot; (ArcGIS.Desktop.Internal.DataReviewer.VisualReview.EvaluateFeaturesViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_evaluateFeaturesPane {
				 get { return "esri_dataReviewer_evaluateFeaturesPane"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;New Rule&quot; (ArcGIS.Desktop.Internal.DataReviewer.ReviewerRules.GalleryItemsViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_newRulesGallery {
				 get { return "esri_dataReviewer_newRulesGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;New Rule&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_NewRulesGroup {
				 get { return "esri_dataReviewer_NewRulesGroup"; }
			}
			///<summary>Returns the id string for &quot;Data Reviewer&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_DataReviewerGroup {
				 get { return "esri_dataReviewer_DataReviewerGroup"; }
			}
			///<summary>Returns the id string for &quot;Clipboard&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_RulesClipboardGroup {
				 get { return "esri_dataReviewer_RulesClipboardGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_Selection {
				 get { return "esri_dataReviewer_Selection"; }
			}
			///<summary>Returns the id string for &quot;Automated Review&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_AutomatedReviewGroup {
				 get { return "esri_dataReviewer_AutomatedReviewGroup"; }
			}
			///<summary>Returns the id string for &quot;Results&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_Results {
				 get { return "esri_dataReviewer_Results"; }
			}
			///<summary>Returns the id string for &quot;Semi-Automated Review&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_VisualReviewGroup {
				 get { return "esri_dataReviewer_VisualReviewGroup"; }
			}
			///<summary>Returns the id string for &quot;Close&quot; (Group, DataReviewer)</summary>
			public static string esri_dataReviewer_CloseGroup {
				 get { return "esri_dataReviewer_CloseGroup"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_dataReviewer_reviewerResourcesContainer&quot; (ArcGIS.Desktop.Internal.DataReviewer.DataReviewerResourcesContainer, DataReviewer)</summary>
			public static string esri_dataReviewer_reviewerResourcesContainer {
				 get { return "esri_dataReviewer_reviewerResourcesContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_reviewerBatchJobContainer&quot; (ArcGIS.Desktop.Internal.DataReviewer.DataReviewerBatchJobContainer, DataReviewer)</summary>
			public static string esri_dataReviewer_reviewerBatchJobContainer {
				 get { return "esri_dataReviewer_reviewerBatchJobContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_SessionResults&quot; (ArcGIS.Desktop.DataReviewer.ReviewerResultsProjectItem, DataReviewer)</summary>
			public static string esri_dataReviewer_SessionResults {
				 get { return "esri_dataReviewer_SessionResults"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_SessionResources&quot; (ArcGIS.Desktop.Internal.DataReviewer.DataReviewerSessionItem, DataReviewer)</summary>
			public static string esri_dataReviewer_SessionResources {
				 get { return "esri_dataReviewer_SessionResources"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_dataReviewer_BatchJobProjectItem&quot; (ArcGIS.Desktop.DataReviewer.ReviewerBatchJobProjectItem, DataReviewer)</summary>
			public static string esri_itemInfoType_dataReviewer_BatchJobProjectItem {
				 get { return "esri_itemInfoType_dataReviewer_BatchJobProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_batchjobs&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, DataReviewer)</summary>
			public static string esri_browseDialogFilters_batchjobs {
				 get { return "esri_browseDialogFilters_batchjobs"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_geodatabases_Reviewer&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, DataReviewer)</summary>
			public static string esri_browseDialogFilters_geodatabases_Reviewer {
				 get { return "esri_browseDialogFilters_geodatabases_Reviewer"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_dataTemplates&quot; (ArcGIS.Desktop.Core.DataTemplateRegistryItem, DataReviewer)</summary>
			public static string esri_dataReviewer_dataTemplates {
				 get { return "esri_dataReviewer_dataTemplates"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;no rules selected&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_deleteRuleCondition {
				 get { return "esri_dataReviewer_deleteRuleCondition"; }
			}
			///<summary>Returns the id string for &quot;cannot execute batch job&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_executeBatchJobCondition {
				 get { return "esri_dataReviewer_executeBatchJobCondition"; }
			}
			///<summary>Returns the id string for &quot;no review result&quot; (Condition, DataReviewer)</summary>
			public static string esri_datareviewer_reviewerWorkspaceCondition {
				 get { return "esri_datareviewer_reviewerWorkspaceCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_HasSelectedItemsCondition&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_HasSelectedItemsCondition {
				 get { return "esri_dataReviewer_HasSelectedItemsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_SelectedOnlyFeatureItemsCondition&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_SelectedOnlyFeatureItemsCondition {
				 get { return "esri_dataReviewer_SelectedOnlyFeatureItemsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_FeatureLayersOrTableSelectedCondition&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_FeatureLayersOrTableSelectedCondition {
				 get { return "esri_dataReviewer_FeatureLayersOrTableSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;...&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_MapOrTableViewCondition {
				 get { return "esri_dataReviewer_MapOrTableViewCondition"; }
			}
			///<summary>Returns the id string for &quot;...&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_RelevantLayersCondition {
				 get { return "esri_dataReviewer_RelevantLayersCondition"; }
			}
			///<summary>Returns the id string for &quot;...&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_ManageQualityCondition {
				 get { return "esri_dataReviewer_ManageQualityCondition"; }
			}
			///<summary>Returns the id string for &quot;...&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_SymbolizationCondition {
				 get { return "esri_dataReviewer_SymbolizationCondition"; }
			}
			///<summary>Returns the id string for &quot;...&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_RemoveSessionCondition {
				 get { return "esri_dataReviewer_RemoveSessionCondition"; }
			}
			///<summary>Returns the id string for &quot;...&quot; (Condition, DataReviewer)</summary>
			public static string esri_dataReviewer_FlagMissingFeaturesCondition {
				 get { return "esri_dataReviewer_FlagMissingFeaturesCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;ArcGIS Data Reviewer&quot; (DataReviewerModule, DataReviewer)</summary>
			public static string esri_dataReviewer_dataReviewerModule {
				 get { return "esri_dataReviewer_dataReviewerModule"; }
			}
		}
		public static partial class Product {
			///<summary>Returns the id string for &quot;Data Reviewer&quot; (Product, DataReviewer)</summary>
			public static string esri_product_datareviewer {
				 get { return "esri_product_datareviewer"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Reviewer Results&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_DataReviewerResourcesContainerMenu {
				 get { return "esri_dataReviewer_DataReviewerResourcesContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Reviewer Batch Jobs&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_DataReviewerBatchJobContainerMenu {
				 get { return "esri_dataReviewer_DataReviewerBatchJobContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Reviewer Results&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_ReviewResultsContextMenu {
				 get { return "esri_dataReviewer_ReviewResultsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Batch Jobs Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_BatchJobsContextMenu {
				 get { return "esri_dataReviewer_BatchJobsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Execute&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_ExecuteBatchJobMenu {
				 get { return "esri_dataReviewer_ExecuteBatchJobMenu"; }
			}
			///<summary>Returns the id string for &quot;Reviewer Session&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_SessionContextMenu {
				 get { return "esri_dataReviewer_SessionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Reviewer Results Pane Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_ResultsPaneBurgerButtonContextMenu {
				 get { return "esri_dataReviewer_ResultsPaneBurgerButtonContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selected Results Context Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_SelectedResultsContextMenu {
				 get { return "esri_dataReviewer_SelectedResultsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Batch Job Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_batchJobFolderConnectionMenu {
				 get { return "esri_dataReviewer_batchJobFolderConnectionMenu"; }
			}
			///<summary>Returns the id string for &quot;Selected Metadata Results Context Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_MetadataResultsContextMenu {
				 get { return "esri_dataReviewer_MetadataResultsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Common Context Menu for All Results Type&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_CommonContextMenu {
				 get { return "esri_dataReviewer_CommonContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selected Rules Context Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_SelectedRulesContextMenu {
				 get { return "esri_dataReviewer_SelectedRulesContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Evaluate Features Context Menu&quot; (Menu, DataReviewer)</summary>
			public static string esri_dataReviewer_EvaluateFeaturesContextMenu {
				 get { return "esri_dataReviewer_EvaluateFeaturesContextMenu"; }
			}
		}
		public static partial class Pane {
			///<summary>Returns the id string for &quot;Reviewer Rules: &quot; (ArcGIS.Desktop.Internal.DataReviewer.ReviewerRules.ReviewerRulesPaneViewModel, DataReviewer)</summary>
			public static string esri_dataReviewer_reviewerRulesPane {
				 get { return "esri_dataReviewer_reviewerRulesPane"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_dataReviewer_deleteReviewerRulesState&quot; (State, DataReviewer)</summary>
			public static string esri_dataReviewer_deleteReviewerRulesState {
				 get { return "esri_dataReviewer_deleteReviewerRulesState"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_addReviewerWorkspaceSettingState&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_addReviewerWorkspaceSettingState {
				 get { return "esri_datareviewer_addReviewerWorkspaceSettingState"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_HasSelectedItems&quot; (State, DataReviewer)</summary>
			public static string esri_dataReviewer_HasSelectedItems {
				 get { return "esri_dataReviewer_HasSelectedItems"; }
			}
			///<summary>Returns the id string for &quot;esri_dataReviewer_SelectedOnlyFeatureItems&quot; (State, DataReviewer)</summary>
			public static string esri_dataReviewer_SelectedOnlyFeatureItems {
				 get { return "esri_dataReviewer_SelectedOnlyFeatureItems"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_standaloneTableSelectedState&quot; (State, DataReviewer)</summary>
			public static string esri_mapping_standaloneTableSelectedState {
				 get { return "esri_mapping_standaloneTableSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_allTableLayersSelectedState&quot; (State, DataReviewer)</summary>
			public static string esri_mapping_allTableLayersSelectedState {
				 get { return "esri_mapping_allTableLayersSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_featureLayerSelectedState&quot; (State, DataReviewer)</summary>
			public static string esri_mapping_featureLayerSelectedState {
				 get { return "esri_mapping_featureLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sameLayersSelectedState&quot; (State, DataReviewer)</summary>
			public static string esri_mapping_sameLayersSelectedState {
				 get { return "esri_mapping_sameLayersSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_RunRulesState&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_RunRulesState {
				 get { return "esri_datareviewer_RunRulesState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapViewingMode2DState&quot; (State, DataReviewer)</summary>
			public static string esri_mapping_mapViewingMode2DState {
				 get { return "esri_mapping_mapViewingMode2DState"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_RelevantLayersState&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_RelevantLayersState {
				 get { return "esri_datareviewer_RelevantLayersState"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_ManageQualityState&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_ManageQualityState {
				 get { return "esri_datareviewer_ManageQualityState"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_HasActiveReviewerSessionState&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_HasActiveReviewerSessionState {
				 get { return "esri_datareviewer_HasActiveReviewerSessionState"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_SessionIsDefault&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_SessionIsDefault {
				 get { return "esri_datareviewer_SessionIsDefault"; }
			}
			///<summary>Returns the id string for &quot;esri_datareviewer_FlagMissingFeaturesState&quot; (State, DataReviewer)</summary>
			public static string esri_datareviewer_FlagMissingFeaturesState {
				 get { return "esri_datareviewer_FlagMissingFeaturesState"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;View&quot; (Tab, DataReviewer)</summary>
			public static string esri_dataReviewer_viewTab {
				 get { return "esri_dataReviewer_viewTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, DataReviewer)</summary>
			public static string esri_dataReviewer_analysisTab {
				 get { return "esri_dataReviewer_analysisTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, DataReviewer)</summary>
			public static string esri_dataReviewer_insertTab {
				 get { return "esri_dataReviewer_insertTab"; }
			}
			///<summary>Returns the id string for &quot;Reviewer Rules&quot; (Tab, DataReviewer)</summary>
			public static string esri_dataReviewer_validationTab {
				 get { return "esri_dataReviewer_validationTab"; }
			}
			///<summary>Returns the id string for &quot;Manage Quality&quot; (Tab, DataReviewer)</summary>
			public static string esri_dataReviewer_ManageQualityTab {
				 get { return "esri_dataReviewer_ManageQualityTab"; }
			}
		}
		public static partial class Tool {
			///<summary>Returns the id string for &quot;esri_dataReviewer_evalfeaturesmapcoord&quot; (ArcGIS.Desktop.Internal.DataReviewer.VisualReview.MapCoordinateTool, DataReviewer)</summary>
			public static string esri_dataReviewer_evalfeaturesmapcoord {
				 get { return "esri_dataReviewer_evalfeaturesmapcoord"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Extensions&quot; (DesktopExtensionsModule, Extensions)</summary>
			public static string esri_desktopextensions_DesktopExtensionsModule {
				 get { return "esri_desktopextensions_DesktopExtensionsModule"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Start Editing&quot; (esri_editing_EditingModule:OnClick_StartEditing, Editing)</summary>
			public static string esri_editing_StartEditingBtn {
				 get { return "esri_editing_StartEditingBtn"; }
			}
			///<summary>Returns the id string for &quot;Stop Editing&quot; (esri_editing_EditingModule:OnClick_StopEditing, Editing)</summary>
			public static string esri_editing_StopEditingBtn {
				 get { return "esri_editing_StopEditingBtn"; }
			}
			///<summary>Returns the id string for &quot;Start Editing&quot; (esri_editing_EditingModule:OnClick_ToggleEditing, Editing)</summary>
			public static string esri_editing_ToggleEditingBtn {
				 get { return "esri_editing_ToggleEditingBtn"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_editing_EditingModule:OnClick_SaveEdits, Editing)</summary>
			public static string esri_editing_SaveEditsBtn {
				 get { return "esri_editing_SaveEditsBtn"; }
			}
			///<summary>Returns the id string for &quot;Create 3D Geometry&quot; (CreateMultipatchCommand, Editing)</summary>
			public static string esri_editing_PushPullCommand {
				 get { return "esri_editing_PushPullCommand"; }
			}
			///<summary>Returns the id string for &quot;Discard&quot; (esri_editing_EditingModule:OnClick_DiscardEdits, Editing)</summary>
			public static string esri_editing_DiscardEditsBtn {
				 get { return "esri_editing_DiscardEditsBtn"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_editing_EditingModule:OnClick_DeleteSelectedFeatures, Editing)</summary>
			public static string esri_editing_DelSelFeaturesBtn {
				 get { return "esri_editing_DelSelFeaturesBtn"; }
			}
			///<summary>Returns the id string for &quot;Delete (Shortcut)&quot; (esri_editing_EditingModule:OnClick_DeleteSelectedFeaturesShortcut, Editing)</summary>
			public static string esri_editing_DelSelFeaturesShortcut {
				 get { return "esri_editing_DelSelFeaturesShortcut"; }
			}
			///<summary>Returns the id string for &quot;Attributes&quot; (esri_editing_EditingModule:ShowAttributesWindow, Editing)</summary>
			public static string esri_editing_ShowAttributes {
				 get { return "esri_editing_ShowAttributes"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (esri_editing_EditingModule:ShowCreateFeaturesWindow, Editing)</summary>
			public static string esri_editing_ShowCreateFeaturesBtn {
				 get { return "esri_editing_ShowCreateFeaturesBtn"; }
			}
			///<summary>Returns the id string for &quot;Modify&quot; (esri_editing_EditingModule:ShowEditFeaturesWindow, Editing)</summary>
			public static string esri_editing_ShowEditFeaturesBtn {
				 get { return "esri_editing_ShowEditFeaturesBtn"; }
			}
			///<summary>Returns the id string for &quot;Templates&quot; (esri_editing_EditingModule:ShowManageTemplatesWindow, Editing)</summary>
			public static string esri_editing_ShowManageTemplatesBtn {
				 get { return "esri_editing_ShowManageTemplatesBtn"; }
			}
			///<summary>Returns the id string for &quot;Status&quot; (EditingSessionInformationCommand, Editing)</summary>
			public static string esri_editing_ShowStatusBtn {
				 get { return "esri_editing_ShowStatusBtn"; }
			}
			///<summary>Returns the id string for &quot;All Tools...&quot; (esri_editing_EditingModule:ShowEditFeaturesWindowAllTools, Editing)</summary>
			public static string esri_editing_ShowEditFeaturesFromGallery {
				 get { return "esri_editing_ShowEditFeaturesFromGallery"; }
			}
			///<summary>Returns the id string for &quot;Switch Gallery Size&quot; (esri_editing_EditingModule:ToggleEditFeaturesGalleryView, Editing)</summary>
			public static string esri_editing_ToggleEditFeaturesGallerySize {
				 get { return "esri_editing_ToggleEditFeaturesGallerySize"; }
			}
			///<summary>Returns the id string for &quot;Customize...&quot; (esri_editing_EditingModule:CustomizeGallery, Editing)</summary>
			public static string esri_editing_CustomizeGalleryButton {
				 get { return "esri_editing_CustomizeGalleryButton"; }
			}
			///<summary>Returns the id string for &quot;Editing&quot; (EditingViewButton, Editing)</summary>
			public static string esri_editing_ShowEditablityTOC {
				 get { return "esri_editing_ShowEditablityTOC"; }
			}
			///<summary>Returns the id string for &quot;Make this the only editable layer&quot; (esri_editing_EditingModule:MakeOnlyEditableLayer, Editing)</summary>
			public static string esri_editing_MakeOnlyEditableLayerCommand {
				 get { return "esri_editing_MakeOnlyEditableLayerCommand"; }
			}
			///<summary>Returns the id string for &quot;Start Grabbing Height From View&quot; (esri_editing_EditingModule:OnClick_StartGrabbingCurrentZ, Editing)</summary>
			public static string esri_editing_StartGrabbingCurrentZ {
				 get { return "esri_editing_StartGrabbingCurrentZ"; }
			}
			///<summary>Returns the id string for &quot;Stop Grabbing Height From View&quot; (esri_editing_EditingModule:OnClick_StopGrabbingCurrentZ, Editing)</summary>
			public static string esri_editing_StopGrabbingCurrentZ {
				 get { return "esri_editing_StopGrabbingCurrentZ"; }
			}
			///<summary>Returns the id string for &quot;Stop showing the constant elevation plane&quot; (esri_editing_EditingModule:OnClickStopShowingConstantZPlane, Editing)</summary>
			public static string esri_editing_StopShowingConstantZPlane {
				 get { return "esri_editing_StopShowingConstantZPlane"; }
			}
			///<summary>Returns the id string for &quot;Restart showing the constant elevation plane&quot; (esri_editing_EditingModule:OnClickRestartShowingConstantZPlane, Editing)</summary>
			public static string esri_editing_RestartShowingConstantZPlane {
				 get { return "esri_editing_RestartShowingConstantZPlane"; }
			}
			///<summary>Returns the id string for &quot;Start Quick Selection mode&quot; (esri_editing_EditingModule:OnClickStartQuickSelectMode, Editing)</summary>
			public static string esri_editing_StartQuickSelection {
				 get { return "esri_editing_StartQuickSelection"; }
			}
			///<summary>Returns the id string for &quot;Stop Quick Selection mode&quot; (esri_editing_EditingModule:OnClickStopQuickSelectMode, Editing)</summary>
			public static string esri_editing_StopQuickSelection {
				 get { return "esri_editing_StopQuickSelection"; }
			}
			///<summary>Returns the id string for &quot;Start Adding Vertices&quot; (esri_editing_EditingModule:OnClickStartInsertMode, Editing)</summary>
			public static string esri_editing_beginInsertMode {
				 get { return "esri_editing_beginInsertMode"; }
			}
			///<summary>Returns the id string for &quot;Stop Adding Vertices&quot; (esri_editing_EditingModule:OnClickStopInsertMode, Editing)</summary>
			public static string esri_editing_endInsertMode {
				 get { return "esri_editing_endInsertMode"; }
			}
			///<summary>Returns the id string for &quot;Start Deleting Vertices&quot; (esri_editing_EditingModule:OnClickStartDeleteMode, Editing)</summary>
			public static string esri_editing_beginDeleteMode {
				 get { return "esri_editing_beginDeleteMode"; }
			}
			///<summary>Returns the id string for &quot;Stop Deleting Vertices&quot; (esri_editing_EditingModule:OnClickStopDeleteMode, Editing)</summary>
			public static string esri_editing_endDeleteMode {
				 get { return "esri_editing_endDeleteMode"; }
			}
			///<summary>Returns the id string for &quot;Split Options&quot; (ModalSplitOptionsCommand, Editing)</summary>
			public static string esri_editing_SplitOptions {
				 get { return "esri_editing_SplitOptions"; }
			}
			///<summary>Returns the id string for &quot;Circle Tool&quot; (CreateCircleLineCommand, Editing)</summary>
			public static string esri_editing_SketchCircleLine {
				 get { return "esri_editing_SketchCircleLine"; }
			}
			///<summary>Returns the id string for &quot;Three Point Circle Tool&quot; (CreateThreePointCircleLineCommand, Editing)</summary>
			public static string esri_editing_SketchLineThreePointCircle {
				 get { return "esri_editing_SketchLineThreePointCircle"; }
			}
			///<summary>Returns the id string for &quot;Circle Tool&quot; (CreateCirclePolygonCommand, Editing)</summary>
			public static string esri_editing_SketchCirclePolygon {
				 get { return "esri_editing_SketchCirclePolygon"; }
			}
			///<summary>Returns the id string for &quot;Three Point Circle Polygon Tool&quot; (CreateThreePointCirclePolygonCommand, Editing)</summary>
			public static string esri_editing_SketchPolygonThreePointCircle {
				 get { return "esri_editing_SketchPolygonThreePointCircle"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Attributes.ActivateDefaultTemplateForContextLayer, Editing)</summary>
			public static string esri_editing_CreateRasterClassifyObjectTool {
				 get { return "esri_editing_CreateRasterClassifyObjectTool"; }
			}
			///<summary>Returns the id string for &quot;Circle Tool&quot; (CreateCircleMultipatchCommand, Editing)</summary>
			public static string esri_editing_SketchCircleMultipatch {
				 get { return "esri_editing_SketchCircleMultipatch"; }
			}
			///<summary>Returns the id string for &quot;Rectangle Tool&quot; (CreateRectangleMultipatchCommand, Editing)</summary>
			public static string esri_editing_SketchRectangleMultipatch {
				 get { return "esri_editing_SketchRectangleMultipatch"; }
			}
			///<summary>Returns the id string for &quot;Offset Face&quot; (CreateOffsetMultipatchCommand, Editing)</summary>
			public static string esri_editing_SketchOffsetMultipatch {
				 get { return "esri_editing_SketchOffsetMultipatch"; }
			}
			///<summary>Returns the id string for &quot;Move&quot; (EditVerticesMoveModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesMove {
				 get { return "esri_editing_EditVerticesMove"; }
			}
			///<summary>Returns the id string for &quot;Rotate&quot; (EditVerticesRotateModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesRotate {
				 get { return "esri_editing_EditVerticesRotate"; }
			}
			///<summary>Returns the id string for &quot;Scale&quot; (EditVerticesScaleModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesScale {
				 get { return "esri_editing_EditVerticesScale"; }
			}
			///<summary>Returns the id string for &quot;Transform&quot; (TransformCommand, Editing)</summary>
			public static string esri_editing_Transform {
				 get { return "esri_editing_Transform"; }
			}
			///<summary>Returns the id string for &quot;Mirror&quot; (MirrorCommand, Editing)</summary>
			public static string esri_editing_MirrorFeaturesCommand {
				 get { return "esri_editing_MirrorFeaturesCommand"; }
			}
			///<summary>Returns the id string for &quot;Edit Vertices&quot; (EditVerticesVerticesModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesModifyFeature {
				 get { return "esri_editing_EditVerticesModifyFeature"; }
			}
			///<summary>Returns the id string for &quot;Reshape&quot; (ReshapeCommand, Editing)</summary>
			public static string esri_editing_ReshapeCommand {
				 get { return "esri_editing_ReshapeCommand"; }
			}
			///<summary>Returns the id string for &quot;Annotation&quot; (EditTextModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesText {
				 get { return "esri_editing_EditVerticesText"; }
			}
			///<summary>Returns the id string for &quot;Replace Geometry&quot; (EditVerticesReplaceModeCommand, Editing)</summary>
			public static string esri_editing_ReplaceGeometry {
				 get { return "esri_editing_ReplaceGeometry"; }
			}
			///<summary>Returns the id string for &quot;Replace Point&quot; (EditVerticesReplaceModeCommand, Editing)</summary>
			public static string esri_editing_ReplacePoint {
				 get { return "esri_editing_ReplacePoint"; }
			}
			///<summary>Returns the id string for &quot;Replace Point At End of Line&quot; (PointAtEndOfLineCommand, Editing)</summary>
			public static string esri_editing_ReplacePointAtLineEndPoints {
				 get { return "esri_editing_ReplacePointAtLineEndPoints"; }
			}
			///<summary>Returns the id string for &quot;Multipatch Texture&quot; (TexturePushPullCommand, Editing)</summary>
			public static string esri_editing_PushPullTextureCommand {
				 get { return "esri_editing_PushPullTextureCommand"; }
			}
			///<summary>Returns the id string for &quot;Continue Feature&quot; (EditVerticesContinueModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesContinue {
				 get { return "esri_editing_EditVerticesContinue"; }
			}
			///<summary>Returns the id string for &quot;Clip&quot; (ClipFeaturesCommand, Editing)</summary>
			public static string esri_editing_ClipCommand {
				 get { return "esri_editing_ClipCommand"; }
			}
			///<summary>Returns the id string for &quot;Replace Multipatch&quot; (esri_editing_EditingModule:OnClick_ActivateReplaceMultiPatch, Editing)</summary>
			public static string esri_editing_ReplaceMultiPatchContextCommand {
				 get { return "esri_editing_ReplaceMultiPatchContextCommand"; }
			}
			///<summary>Returns the id string for &quot;Continue Feature&quot; (EditVerticesContinueModeCommand, Editing)</summary>
			public static string esri_editing_ContinueFeature {
				 get { return "esri_editing_ContinueFeature"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (TraverseZoomToCourseCommand, Editing)</summary>
			public static string esri_editing_traverseZoomToButton {
				 get { return "esri_editing_traverseZoomToButton"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (TraversePanToCourseCommand, Editing)</summary>
			public static string esri_editing_traversePanToButton {
				 get { return "esri_editing_traversePanToButton"; }
			}
			///<summary>Returns the id string for &quot;Flash&quot; (TraverseFlashCourseCommand, Editing)</summary>
			public static string esri_editing_traverseFlashButton {
				 get { return "esri_editing_traverseFlashButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (DeleteCourseCommand, Editing)</summary>
			public static string esri_editing_traverseDeleteCourseButton {
				 get { return "esri_editing_traverseDeleteCourseButton"; }
			}
			///<summary>Returns the id string for &quot;Insert Before&quot; (InsertCourseBeforeCommand, Editing)</summary>
			public static string esri_editing_traverseInsertCourseBefore {
				 get { return "esri_editing_traverseInsertCourseBefore"; }
			}
			///<summary>Returns the id string for &quot;Insert After&quot; (InsertCourseAfterCommand, Editing)</summary>
			public static string esri_editing_traverseInsertCourseAfter {
				 get { return "esri_editing_traverseInsertCourseAfter"; }
			}
			///<summary>Returns the id string for &quot;Set closing location before this course&quot; (SetClosingLocationBeforeCommand, Editing)</summary>
			public static string esri_editing_traverseSetClosingLocationBefore {
				 get { return "esri_editing_traverseSetClosingLocationBefore"; }
			}
			///<summary>Returns the id string for &quot;Set closing location after this course&quot; (SetClosingLocationAfterCommand, Editing)</summary>
			public static string esri_editing_traverseSetClosingLocationAfter {
				 get { return "esri_editing_traverseSetClosingLocationAfter"; }
			}
			///<summary>Returns the id string for &quot;Extend or Trim&quot; (ExtendTrimFeaturesCommand, Editing)</summary>
			public static string esri_editing_ExtendTrimFeatures {
				 get { return "esri_editing_ExtendTrimFeatures"; }
			}
			///<summary>Returns the id string for &quot;Fillet&quot; (FilletCommand, Editing)</summary>
			public static string esri_editing_Fillet {
				 get { return "esri_editing_Fillet"; }
			}
			///<summary>Returns the id string for &quot;Generalize&quot; (GeneralizeCommand, Editing)</summary>
			public static string esri_editing_GeneralizeCommand {
				 get { return "esri_editing_GeneralizeCommand"; }
			}
			///<summary>Returns the id string for &quot;Line Intersection&quot; (LineIntersectionCommand, Editing)</summary>
			public static string esri_editing_LineIntersection {
				 get { return "esri_editing_LineIntersection"; }
			}
			///<summary>Returns the id string for &quot;Buffer&quot; (BufferFeaturesCommand, Editing)</summary>
			public static string esri_editing_BufferFeatures {
				 get { return "esri_editing_BufferFeatures"; }
			}
			///<summary>Returns the id string for &quot;Copy Parallel&quot; (CopyParallelCommand, Editing)</summary>
			public static string esri_editing_CopyParallel {
				 get { return "esri_editing_CopyParallel"; }
			}
			///<summary>Returns the id string for &quot;Split&quot; (SplitCommand, Editing)</summary>
			public static string esri_editing_SplitCommand {
				 get { return "esri_editing_SplitCommand"; }
			}
			///<summary>Returns the id string for &quot;Slice Multipatch&quot; (SliceMultipatchCommand, Editing)</summary>
			public static string esri_editing_SliceMultipatchCommand {
				 get { return "esri_editing_SliceMultipatchCommand"; }
			}
			///<summary>Returns the id string for &quot;Divide&quot; (DivideCommand, Editing)</summary>
			public static string esri_editing_DivideCommand {
				 get { return "esri_editing_DivideCommand"; }
			}
			///<summary>Returns the id string for &quot;Offset&quot; (OffsetCommand, Editing)</summary>
			public static string esri_editing_OffsetCommand {
				 get { return "esri_editing_OffsetCommand"; }
			}
			///<summary>Returns the id string for &quot;Sequential Numbering&quot; (SeqNumCommand, Editing)</summary>
			public static string esri_editing_SeqNum {
				 get { return "esri_editing_SeqNum"; }
			}
			///<summary>Returns the id string for &quot;Transfer Attributes&quot; (AttributeTransferCommand, Editing)</summary>
			public static string esri_editing_AttributeTransfer {
				 get { return "esri_editing_AttributeTransfer"; }
			}
			///<summary>Returns the id string for &quot;Traverse&quot; (TraverseCommand, Editing)</summary>
			public static string esri_editing_TraverseCommand {
				 get { return "esri_editing_TraverseCommand"; }
			}
			///<summary>Returns the id string for &quot;Options...&quot; (TraverseOptionsCommand, Editing)</summary>
			public static string esri_editing_TraverseOptions {
				 get { return "esri_editing_TraverseOptions"; }
			}
			///<summary>Returns the id string for &quot;Import ArcMap Traverse File&quot; (ImportTraverseCommand, Editing)</summary>
			public static string esri_editing_ImportTraverse {
				 get { return "esri_editing_ImportTraverse"; }
			}
			///<summary>Returns the id string for &quot;Export ArcMap Traverse File&quot; (ExportTraverseCommand, Editing)</summary>
			public static string esri_editing_ExportTraverse {
				 get { return "esri_editing_ExportTraverse"; }
			}
			///<summary>Returns the id string for &quot;Update COGO&quot; (UpdateCOGOAttributesCommand, Editing)</summary>
			public static string esri_editing_UpdateCogoAttributes {
				 get { return "esri_editing_UpdateCogoAttributes"; }
			}
			///<summary>Returns the id string for &quot;Right Angle&quot; (RightAngleCommand, Editing)</summary>
			public static string esri_editing_RightAngleCommand {
				 get { return "esri_editing_RightAngleCommand"; }
			}
			///<summary>Returns the id string for &quot;Align Edge&quot; (AlignEdgeCommand, Editing)</summary>
			public static string esri_editing_AlignEdgeCommand {
				 get { return "esri_editing_AlignEdgeCommand"; }
			}
			///<summary>Returns the id string for &quot;Align Features&quot; (AlignFeaturesCommand, Editing)</summary>
			public static string esri_editing_AlignFeaturesCommand {
				 get { return "esri_editing_AlignFeaturesCommand"; }
			}
			///<summary>Returns the id string for &quot;Stretch Topology&quot; (SetStretchTopologyCommand, Editing)</summary>
			public static string esri_editing_StretchTopology {
				 get { return "esri_editing_StretchTopology"; }
			}
			///<summary>Returns the id string for &quot;Stretch Vertices&quot; (SetStretchVerticesCommand, Editing)</summary>
			public static string esri_editing_StretchVertices {
				 get { return "esri_editing_StretchVertices"; }
			}
			///<summary>Returns the id string for &quot;Disconnect&quot; (DisconnectUtilityNetworkCommand, Editing)</summary>
			public static string esri_editing_UtilityDisconnect {
				 get { return "esri_editing_UtilityDisconnect"; }
			}
			///<summary>Returns the id string for &quot;Planarize&quot; (PlanarizeLinesCommand, Editing)</summary>
			public static string esri_editing_PlanarizeLineFeatures {
				 get { return "esri_editing_PlanarizeLineFeatures"; }
			}
			///<summary>Returns the id string for &quot;Move To&quot; (MoveToCommand, Editing)</summary>
			public static string esri_editing_MoveToFeatures {
				 get { return "esri_editing_MoveToFeatures"; }
			}
			///<summary>Returns the id string for &quot;Explode&quot; (ExplodeFeaturesCommand, Editing)</summary>
			public static string esri_editing_ExplodeFeatures {
				 get { return "esri_editing_ExplodeFeatures"; }
			}
			///<summary>Returns the id string for &quot;Construct Polygons&quot; (ConstructPolygonsCommand, Editing)</summary>
			public static string esri_editing_ConstructPolygons {
				 get { return "esri_editing_ConstructPolygons"; }
			}
			///<summary>Returns the id string for &quot;Merge&quot; (MergeFeaturesCommand, Editing)</summary>
			public static string esri_editing_MergeFeatures {
				 get { return "esri_editing_MergeFeatures"; }
			}
			///<summary>Returns the id string for &quot;Duplicate Vertical&quot; (DuplicateVerticalCommand, Editing)</summary>
			public static string esri_editing_DuplicateVerticalCommand {
				 get { return "esri_editing_DuplicateVerticalCommand"; }
			}
			///<summary>Returns the id string for &quot;Duplicate Vertical&quot; (DuplicateVerticalContextMenuCommand, Editing)</summary>
			public static string esri_editing_DuplicateVerticalContextMenuItem {
				 get { return "esri_editing_DuplicateVerticalContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Change Parcel Type&quot; (ArcGIS.Desktop.Editing.ChangeParcelTypeCommand, Editing)</summary>
			public static string esri_editing_changeParcelType {
				 get { return "esri_editing_changeParcelType"; }
			}
			///<summary>Returns the id string for &quot;Duplicate Parcels&quot; (ArcGIS.Desktop.Editing.DuplicateParcelsCommand, Editing)</summary>
			public static string esri_editing_duplicateParcels {
				 get { return "esri_editing_duplicateParcels"; }
			}
			///<summary>Returns the id string for &quot;Set Historic&quot; (ArcGIS.Desktop.Editing.SetParcelsAsHistoricCommand, Editing)</summary>
			public static string esri_editing_SetParcelsAsHistoric {
				 get { return "esri_editing_SetParcelsAsHistoric"; }
			}
			///<summary>Returns the id string for &quot;Set Current&quot; (ArcGIS.Desktop.Editing.SetParcelsAsCurrentCommand, Editing)</summary>
			public static string esri_editing_SetParcelsAsCurrent {
				 get { return "esri_editing_SetParcelsAsCurrent"; }
			}
			///<summary>Returns the id string for &quot;Copy Lines To&quot; (ArcGIS.Desktop.Editing.CopyLinesToParcelTypeCommand, Editing)</summary>
			public static string esri_editing_copyLinesToParcelType {
				 get { return "esri_editing_copyLinesToParcelType"; }
			}
			///<summary>Returns the id string for &quot;Create Seeds&quot; (ArcGIS.Desktop.Editing.CreateParcelSeedsCommand, Editing)</summary>
			public static string esri_editing_createParcelSeeds {
				 get { return "esri_editing_createParcelSeeds"; }
			}
			///<summary>Returns the id string for &quot;Build Extent&quot; (ArcGIS.Desktop.Editing.BuildParcelsExtentCommand, Editing)</summary>
			public static string esri_editing_parcelBuildButton {
				 get { return "esri_editing_parcelBuildButton"; }
			}
			///<summary>Returns the id string for &quot;Build Active&quot; (ArcGIS.Desktop.Editing.BuildParcelsActiveRecordCommand, Editing)</summary>
			public static string esri_editing_parcelBuildActiveRecordButton {
				 get { return "esri_editing_parcelBuildActiveRecordButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Parcels&quot; (ArcGIS.Desktop.Editing.DeleteParcelsCommand, Editing)</summary>
			public static string esri_editing_deleteParcels {
				 get { return "esri_editing_deleteParcels"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Active Record&quot; (ArcGIS.Desktop.Editing.ZoomToActiveRecordCommand, Editing)</summary>
			public static string esri_editing_zoomToActiveRecord {
				 get { return "esri_editing_zoomToActiveRecord"; }
			}
			///<summary>Returns the id string for &quot;Create Record&quot; (ArcGIS.Desktop.Editing.RecordNewCommand, Editing)</summary>
			public static string esri_editing_createNewRecord {
				 get { return "esri_editing_createNewRecord"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (CreateLineModeCommand, Editing)</summary>
			public static string esri_editing_LineConstructor {
				 get { return "esri_editing_LineConstructor"; }
			}
			///<summary>Returns the id string for &quot;Point&quot; (CreateLineModeCommand, Editing)</summary>
			public static string esri_editing_PointConstructor {
				 get { return "esri_editing_PointConstructor"; }
			}
			///<summary>Returns the id string for &quot;Midpoint&quot; (CreateMidpointModeCommand, Editing)</summary>
			public static string esri_editing_MidpointConstructor {
				 get { return "esri_editing_MidpointConstructor"; }
			}
			///<summary>Returns the id string for &quot;Direction Distance&quot; (CreateDirectionDistanceModeCommand, Editing)</summary>
			public static string esri_editing_DirectionDistanceConstructor {
				 get { return "esri_editing_DirectionDistanceConstructor"; }
			}
			///<summary>Returns the id string for &quot;Direction Direction&quot; (CreateDirectionDirectionModeCommand, Editing)</summary>
			public static string esri_editing_DirectionDirectionConstructor {
				 get { return "esri_editing_DirectionDirectionConstructor"; }
			}
			///<summary>Returns the id string for &quot;Distance Distance&quot; (CreateDistanceDistanceModeCommand, Editing)</summary>
			public static string esri_editing_DistanceDistanceConstructor {
				 get { return "esri_editing_DistanceDistanceConstructor"; }
			}
			///<summary>Returns the id string for &quot;Intersection&quot; (CreateIntersectionModeCommand, Editing)</summary>
			public static string esri_editing_IntersectionConstructor {
				 get { return "esri_editing_IntersectionConstructor"; }
			}
			///<summary>Returns the id string for &quot;Line at right angle&quot; (CreateRightAngleLineModeCommand, Editing)</summary>
			public static string esri_editing_RightAngleLineConstructor {
				 get { return "esri_editing_RightAngleLineConstructor"; }
			}
			///<summary>Returns the id string for &quot;Arc Segment&quot; (CreateArcModeCommand, Editing)</summary>
			public static string esri_editing_ArcConstructor {
				 get { return "esri_editing_ArcConstructor"; }
			}
			///<summary>Returns the id string for &quot;End Point Arc Segment&quot; (CreateEndPointArcModeCommand, Editing)</summary>
			public static string esri_editing_EndPointArcConstructor {
				 get { return "esri_editing_EndPointArcConstructor"; }
			}
			///<summary>Returns the id string for &quot;Tangent Curve Segment&quot; (CreateTangentArcModeCommand, Editing)</summary>
			public static string esri_editing_TangentArcConstructor {
				 get { return "esri_editing_TangentArcConstructor"; }
			}
			///<summary>Returns the id string for &quot;Bezier Curve Segment&quot; (CreateBezierModeCommand, Editing)</summary>
			public static string esri_editing_BezierConstructor {
				 get { return "esri_editing_BezierConstructor"; }
			}
			///<summary>Returns the id string for &quot;Trace&quot; (CreateTraceModeCommand, Editing)</summary>
			public static string esri_editing_TraceConstructor {
				 get { return "esri_editing_TraceConstructor"; }
			}
			///<summary>Returns the id string for &quot;Streaming&quot; (CreateStreamModeCommand, Editing)</summary>
			public static string esri_editing_StreamConstructor {
				 get { return "esri_editing_StreamConstructor"; }
			}
			///<summary>Returns the id string for &quot;Streaming&quot; (ToggleStreamModeCommand, Editing)</summary>
			public static string esri_editing_ToggleStreaming {
				 get { return "esri_editing_ToggleStreaming"; }
			}
			///<summary>Returns the id string for &quot;Show Vertices&quot; (ToggleShowVerticesCommand, Editing)</summary>
			public static string esri_editing_ToggleShowVertices {
				 get { return "esri_editing_ToggleShowVertices"; }
			}
			///<summary>Returns the id string for &quot;Show Vertices&quot; (ShowVerticesOnCommand, Editing)</summary>
			public static string esri_editing_ShowVertices {
				 get { return "esri_editing_ShowVertices"; }
			}
			///<summary>Returns the id string for &quot;Hide Vertices&quot; (ShowVerticesOffCommand, Editing)</summary>
			public static string esri_editing_HideVertices {
				 get { return "esri_editing_HideVertices"; }
			}
			///<summary>Returns the id string for &quot;Create Points Along Line&quot; (ConstructPointsAlongLineCommand, Editing)</summary>
			public static string esri_editing_ConstructPointsAlongLineCommand {
				 get { return "esri_editing_ConstructPointsAlongLineCommand"; }
			}
			///<summary>Returns the id string for &quot;Select all&quot; (SelectAllCommand, Editing)</summary>
			public static string esri_editing_SelectAllText {
				 get { return "esri_editing_SelectAllText"; }
			}
			///<summary>Returns the id string for &quot;Underline&quot; (UnderlineTextCommand, Editing)</summary>
			public static string esri_editing_UnderlineText {
				 get { return "esri_editing_UnderlineText"; }
			}
			///<summary>Returns the id string for &quot;All Caps&quot; (AllCapsTextCommand, Editing)</summary>
			public static string esri_editing_AllCapsText {
				 get { return "esri_editing_AllCapsText"; }
			}
			///<summary>Returns the id string for &quot;Small Caps&quot; (SmallCapsTextCommand, Editing)</summary>
			public static string esri_editing_SmallCapsText {
				 get { return "esri_editing_SmallCapsText"; }
			}
			///<summary>Returns the id string for &quot;Superscript&quot; (SuperscriptTextCommand, Editing)</summary>
			public static string esri_editing_SuperscriptText {
				 get { return "esri_editing_SuperscriptText"; }
			}
			///<summary>Returns the id string for &quot;Subscript&quot; (SubscriptTextCommand, Editing)</summary>
			public static string esri_editing_SubscriptText {
				 get { return "esri_editing_SubscriptText"; }
			}
			///<summary>Returns the id string for &quot;Find Text&quot; (FindTextContextMenuItem, Editing)</summary>
			public static string esri_editing_FindTextContextMenuItem {
				 get { return "esri_editing_FindTextContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Cycle through&quot; (CycleThroughFindTextCommand, Editing)</summary>
			public static string esri_editing_CycleThroughFindText {
				 get { return "esri_editing_CycleThroughFindText"; }
			}
			///<summary>Returns the id string for &quot;Finish&quot; (FinishSketchCommand, Editing)</summary>
			public static string esri_editing_FinishSketch {
				 get { return "esri_editing_FinishSketch"; }
			}
			///<summary>Returns the id string for &quot;Finish Part&quot; (FinishSketchPartCommand, Editing)</summary>
			public static string esri_editing_FinishSketchPart {
				 get { return "esri_editing_FinishSketchPart"; }
			}
			///<summary>Returns the id string for &quot;Cancel&quot; (ClearSketchCommand, Editing)</summary>
			public static string esri_editing_ClearSketch {
				 get { return "esri_editing_ClearSketch"; }
			}
			///<summary>Returns the id string for &quot;Delete Slice&quot; (ClearSketchCommand, Editing)</summary>
			public static string esri_editing_clearSlice {
				 get { return "esri_editing_clearSlice"; }
			}
			///<summary>Returns the id string for &quot;Angle...&quot; (AngleCommand, Editing)</summary>
			public static string esri_editing_AngleCommand {
				 get { return "esri_editing_AngleCommand"; }
			}
			///<summary>Returns the id string for &quot;Scale...&quot; (ScaleCommand, Editing)</summary>
			public static string esri_editing_ScaleFactorCommand {
				 get { return "esri_editing_ScaleFactorCommand"; }
			}
			///<summary>Returns the id string for &quot;Trace Options...&quot; (TracingOptionsCommand, Editing)</summary>
			public static string esri_editing_TracingOptions {
				 get { return "esri_editing_TracingOptions"; }
			}
			///<summary>Returns the id string for &quot;Streaming Options...&quot; (StreamingOptionsCommand, Editing)</summary>
			public static string esri_editing_StreamingOptions {
				 get { return "esri_editing_StreamingOptions"; }
			}
			///<summary>Returns the id string for &quot;Two-Point Line Options...&quot; (TwoPointLineOptionsCommand, Editing)</summary>
			public static string esri_editing_TwoPointLineOptions {
				 get { return "esri_editing_TwoPointLineOptions"; }
			}
			///<summary>Returns the id string for &quot;Toggle Tracing Side&quot; (esri_editing_EditingModule:OnClick_TracingToggleSide, Editing)</summary>
			public static string esri_editing_TracingToggleSide {
				 get { return "esri_editing_TracingToggleSide"; }
			}
			///<summary>Returns the id string for &quot;Trace Selected Features&quot; (esri_editing_EditingModule:OnClick_StartTraceSelectedOnly, Editing)</summary>
			public static string esri_editing_TracingStartTraceSelected {
				 get { return "esri_editing_TracingStartTraceSelected"; }
			}
			///<summary>Returns the id string for &quot;Trace Selected Features&quot; (esri_editing_EditingModule:OnClick_StopTraceSelectedOnly, Editing)</summary>
			public static string esri_editing_TracingStopTraceSelected {
				 get { return "esri_editing_TracingStopTraceSelected"; }
			}
			///<summary>Returns the id string for &quot;Direction...&quot; (DirectionCommand, Editing)</summary>
			public static string esri_editing_DirectionContextMenuItem {
				 get { return "esri_editing_DirectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Deflection...&quot; (DeflectionCommand, Editing)</summary>
			public static string esri_editing_DeflectionContextMenuItem {
				 get { return "esri_editing_DeflectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Distance...&quot; (DistanceCommand, Editing)</summary>
			public static string esri_editing_DistanceContextMenuItem {
				 get { return "esri_editing_DistanceContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Distance...&quot; (MirrorDistanceCommand, Editing)</summary>
			public static string esri_editing_MirrorDistanceContextMenuItem {
				 get { return "esri_editing_MirrorDistanceContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Direction/Distance...&quot; (DirectionDistanceCommand, Editing)</summary>
			public static string esri_editing_DirectionDistanceContextMenuItem {
				 get { return "esri_editing_DirectionDistanceContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Circular Arc...&quot; (CircularArcCommand, Editing)</summary>
			public static string esri_editing_CircularArcContextMenuItem {
				 get { return "esri_editing_CircularArcContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Spiral Curve...&quot; (SpiralCurveCommand, Editing)</summary>
			public static string esri_editing_SpiralCurveContextMenuItem {
				 get { return "esri_editing_SpiralCurveContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Radius...&quot; (RadiusCommand, Editing)</summary>
			public static string esri_editing_RadiusContextMenuItem {
				 get { return "esri_editing_RadiusContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Set Radius...&quot; (RadiusCommand, Editing)</summary>
			public static string esri_editing_FilletRadiusContextMenuItem {
				 get { return "esri_editing_FilletRadiusContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Fixed Radius&quot; (FilletSetFixedRadiusCommand, Editing)</summary>
			public static string esri_editing_FilletSetFixedRadiusContextMenuItem {
				 get { return "esri_editing_FilletSetFixedRadiusContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Step Back&quot; (Attributes.StepBackward, Editing)</summary>
			public static string esri_editing_Attributes_StepBack {
				 get { return "esri_editing_Attributes_StepBack"; }
			}
			///<summary>Returns the id string for &quot;Step Forward&quot; (Attributes.StepForward, Editing)</summary>
			public static string esri_editing_Attributes_StepForward {
				 get { return "esri_editing_Attributes_StepForward"; }
			}
			///<summary>Returns the id string for &quot;Play&quot; (Attributes.TogglePlay, Editing)</summary>
			public static string esri_editing_Attributes_TogglePlay {
				 get { return "esri_editing_Attributes_TogglePlay"; }
			}
			///<summary>Returns the id string for &quot;Play&quot; (Attributes.StartPlay, Editing)</summary>
			public static string esri_editing_Attributes_StartPlay {
				 get { return "esri_editing_Attributes_StartPlay"; }
			}
			///<summary>Returns the id string for &quot;Pause&quot; (Attributes.StopPlay, Editing)</summary>
			public static string esri_editing_Attributes_StopPlay {
				 get { return "esri_editing_Attributes_StopPlay"; }
			}
			///<summary>Returns the id string for &quot;0.5x speed&quot; (Attributes.SetPlaybackSpeedHalf, Editing)</summary>
			public static string esri_editing_Attributes_PlaybackSpeedHalf {
				 get { return "esri_editing_Attributes_PlaybackSpeedHalf"; }
			}
			///<summary>Returns the id string for &quot;1x speed&quot; (Attributes.SetPlaybackSpeedNormal, Editing)</summary>
			public static string esri_editing_Attributes_PlaybackSpeedNormal {
				 get { return "esri_editing_Attributes_PlaybackSpeedNormal"; }
			}
			///<summary>Returns the id string for &quot;2x speed&quot; (Attributes.SetPlaybackSpeedDouble, Editing)</summary>
			public static string esri_editing_Attributes_PlaybackSpeedDouble {
				 get { return "esri_editing_Attributes_PlaybackSpeedDouble"; }
			}
			///<summary>Returns the id string for &quot;3x speed&quot; (Attributes.SetPlaybackSpeedTriple, Editing)</summary>
			public static string esri_editing_Attributes_PlaybackSpeedTriple {
				 get { return "esri_editing_Attributes_PlaybackSpeedTriple"; }
			}
			///<summary>Returns the id string for &quot;Width...&quot; (RectangleWidthCommand, Editing)</summary>
			public static string esri_editing_WidthContextMenuItem {
				 get { return "esri_editing_WidthContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Height...&quot; (RectangleHeightCommand, Editing)</summary>
			public static string esri_editing_HeightContextMenuItem {
				 get { return "esri_editing_HeightContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Height...&quot; (HeightFacePullCommand, Editing)</summary>
			public static string esri_editing_HeightFacePullContextMenuItem {
				 get { return "esri_editing_HeightFacePullContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Width...&quot; (RectangleWidthCommand, Editing)</summary>
			public static string esri_editing_EllipseWidthContextMenuItem {
				 get { return "esri_editing_EllipseWidthContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Height...&quot; (RectangleHeightCommand, Editing)</summary>
			public static string esri_editing_EllipseHeightContextMenuItem {
				 get { return "esri_editing_EllipseHeightContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Parallel&quot; (ParallelCommand, Editing)</summary>
			public static string esri_editing_ParallelContextMenuItem {
				 get { return "esri_editing_ParallelContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Perpendicular&quot; (PerpendicularCommand, Editing)</summary>
			public static string esri_editing_PerpendicularContextMenuItem {
				 get { return "esri_editing_PerpendicularContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Segment Deflection...&quot; (SegmentDeflectionCommand, Editing)</summary>
			public static string esri_editing_SegmentDeflectionContextMenuItem {
				 get { return "esri_editing_SegmentDeflectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Vertical&quot; (VerticalCommand, Editing)</summary>
			public static string esri_editing_VerticalContextMenuItem {
				 get { return "esri_editing_VerticalContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Absolute X,Y,Z...&quot; (AbsoluteXYZCommand, Editing)</summary>
			public static string esri_editing_AbsoluteXYZContextMenuItem {
				 get { return "esri_editing_AbsoluteXYZContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Delta X,Y,Z...&quot; (DeltaXYZCommand, Editing)</summary>
			public static string esri_editing_DeltaXYZContextMenuItem {
				 get { return "esri_editing_DeltaXYZContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Switch Solution&quot; (DistanceDistanceSwitchSolutionCommand, Editing)</summary>
			public static string esri_editing_DistanceDistanceSwitchSolution {
				 get { return "esri_editing_DistanceDistanceSwitchSolution"; }
			}
			///<summary>Returns the id string for &quot;Commit Solution&quot; (DistanceDistanceCommitSolutionCommand, Editing)</summary>
			public static string esri_editing_DistanceDistanceCommitSolution {
				 get { return "esri_editing_DistanceDistanceCommitSolution"; }
			}
			///<summary>Returns the id string for &quot;Switch Solution&quot; (LineIntersectionCycleSolutionCommand, Editing)</summary>
			public static string esri_editing_LineIntersectionCycleSolution {
				 get { return "esri_editing_LineIntersectionCycleSolution"; }
			}
			///<summary>Returns the id string for &quot;Switch Solution&quot; (LineIntersectionCommitSolutionCommand, Editing)</summary>
			public static string esri_editing_LineIntersectionCommitSolution {
				 get { return "esri_editing_LineIntersectionCommitSolution"; }
			}
			///<summary>Returns the id string for &quot;Change Length...&quot; (TrimToLengthCommand, Editing)</summary>
			public static string esri_editing_TrimToLengthContextMenuItem {
				 get { return "esri_editing_TrimToLengthContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Reverse Direction&quot; (ReverseDirectionCommand, Editing)</summary>
			public static string esri_editing_ReverseDirectionContextMenuItem {
				 get { return "esri_editing_ReverseDirectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Replace Sketch...&quot; (ReplaceSketchCommand, Editing)</summary>
			public static string esri_editing_ReplaceSketchContextMenuItem {
				 get { return "esri_editing_ReplaceSketchContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move Slice&quot; (ToggleMoveHandleVisibilityCommand, Editing)</summary>
			public static string esri_editing_toggle_moveHandleVisibility {
				 get { return "esri_editing_toggle_moveHandleVisibility"; }
			}
			///<summary>Returns the id string for &quot;Rotate Slice&quot; (ToggleRotateHandleVisibilityCommand, Editing)</summary>
			public static string esri_editing_toggle_rotateHandleVisibility {
				 get { return "esri_editing_toggle_rotateHandleVisibility"; }
			}
			///<summary>Returns the id string for &quot;Add Vertex&quot; (AddVertexCommand, Editing)</summary>
			public static string esri_editing_InsertVertexContextMenuItem {
				 get { return "esri_editing_InsertVertexContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Delete Vertex&quot; (DeleteVertexCommand, Editing)</summary>
			public static string esri_editing_DeleteVertexContextMenuItem {
				 get { return "esri_editing_DeleteVertexContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move...&quot; (MoveVertexCommand, Editing)</summary>
			public static string esri_editing_MoveContextMenuItem {
				 get { return "esri_editing_MoveContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move To...&quot; (MoveToVertexCommand, Editing)</summary>
			public static string esri_editing_MoveToContextMenuItem {
				 get { return "esri_editing_MoveToContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Square and Finish&quot; (SquareAndFinishCommand, Editing)</summary>
			public static string esri_editing_SquareAndFinishCommand {
				 get { return "esri_editing_SquareAndFinishCommand"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (PartSelectAllCommand, Editing)</summary>
			public static string esri_editing_part_SelectAllCommand {
				 get { return "esri_editing_part_SelectAllCommand"; }
			}
			///<summary>Returns the id string for &quot;Delete Part&quot; (PartDeleteCommand, Editing)</summary>
			public static string esri_editing_part_DeleteCommand {
				 get { return "esri_editing_part_DeleteCommand"; }
			}
			///<summary>Returns the id string for &quot;Select By Lasso&quot; (EditVerticesNormalModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesNormal {
				 get { return "esri_editing_EditVerticesNormal"; }
			}
			///<summary>Returns the id string for &quot;Select By Rectangle&quot; (EditVerticesRectangleModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesNormalRectangle {
				 get { return "esri_editing_EditVerticesNormalRectangle"; }
			}
			///<summary>Returns the id string for &quot;Select By Circle&quot; (EditVerticesCircleModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesNormalCircle {
				 get { return "esri_editing_EditVerticesNormalCircle"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (EditVerticesAddModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesAdd {
				 get { return "esri_editing_EditVerticesAdd"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (EditVerticesDeleteModeCommand, Editing)</summary>
			public static string esri_editing_EditVerticesDelete {
				 get { return "esri_editing_EditVerticesDelete"; }
			}
			///<summary>Returns the id string for &quot;Revert changes&quot; (Templates.ClearTemplateOverridesContextCommand, Editing)</summary>
			public static string esri_editing_templateRevertOverrides {
				 get { return "esri_editing_templateRevertOverrides"; }
			}
			///<summary>Returns the id string for &quot;Save As&quot; (Templates.SaveToNewTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateSaveAs {
				 get { return "esri_editing_templateSaveAs"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Templates.TemplatePropertiesContextCommand, Editing)</summary>
			public static string esri_editing_templateProperties {
				 get { return "esri_editing_templateProperties"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (Templates.DeleteTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateDelete {
				 get { return "esri_editing_templateDelete"; }
			}
			///<summary>Returns the id string for &quot;Duplicate&quot; (Templates.DuplicateTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateDuplicate {
				 get { return "esri_editing_templateDuplicate"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (Templates.DeleteTemplateFromFolderContextCommand, Editing)</summary>
			public static string esri_editing_templateRemoveFromFolder {
				 get { return "esri_editing_templateRemoveFromFolder"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (Templates.DeleteFolderContextCommand, Editing)</summary>
			public static string esri_editing_templateRemoveFolder {
				 get { return "esri_editing_templateRemoveFolder"; }
			}
			///<summary>Returns the id string for &quot;Add folder&quot; (Templates.AddSubfolderContextCommand, Editing)</summary>
			public static string esri_editing_templateAddSubfolder {
				 get { return "esri_editing_templateAddSubfolder"; }
			}
			///<summary>Returns the id string for &quot;Add folder&quot; (Templates.AddFolderToRootContextCommand, Editing)</summary>
			public static string esri_editing_templateAddFolderToRoot {
				 get { return "esri_editing_templateAddFolderToRoot"; }
			}
			///<summary>Returns the id string for &quot;Rename&quot; (Templates.RenameFolderContextCommand, Editing)</summary>
			public static string esri_editing_templateRenameFolder {
				 get { return "esri_editing_templateRenameFolder"; }
			}
			///<summary>Returns the id string for &quot;Follow Feature Mode&quot; (AnnotationFollowFeatureModeCommand, Editing)</summary>
			public static string esri_editing_annotationFollowFeatureModeButton {
				 get { return "esri_editing_annotationFollowFeatureModeButton"; }
			}
			///<summary>Returns the id string for &quot;Follow this Feature&quot; (AnnotationFollowThisFeatureCommand, Editing)</summary>
			public static string esri_editing_annotationFollowThisFeatureButton {
				 get { return "esri_editing_annotationFollowThisFeatureButton"; }
			}
			///<summary>Returns the id string for &quot;Flash Feature&quot; (AnnotationFlashFeatureCommand, Editing)</summary>
			public static string esri_editing_FlashFeatureButton {
				 get { return "esri_editing_FlashFeatureButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom to Feature&quot; (AnnotationZoomFeatureCommand, Editing)</summary>
			public static string esri_editing_ZoomToFeatureButton {
				 get { return "esri_editing_ZoomToFeatureButton"; }
			}
			///<summary>Returns the id string for &quot;Pan to Feature&quot; (AnnotationPanFeatureCommand, Editing)</summary>
			public static string esri_editing_PanToFeatureButton {
				 get { return "esri_editing_PanToFeatureButton"; }
			}
			///<summary>Returns the id string for &quot;Follow Feature Options...&quot; (AnnotationShowOptionsCommand, Editing)</summary>
			public static string esri_editing_FollowFeatureOptionsButton {
				 get { return "esri_editing_FollowFeatureOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Leader&quot; (AnnotationAddLeaderCommand, Editing)</summary>
			public static string esri_editing_annotationAddLeaderButton {
				 get { return "esri_editing_annotationAddLeaderButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Leader&quot; (AnnotationDeleteLeaderCommand, Editing)</summary>
			public static string esri_editing_annotationDeleteLeaderButton {
				 get { return "esri_editing_annotationDeleteLeaderButton"; }
			}
			///<summary>Returns the id string for &quot;Convert to Multiple Parts&quot; (AnnotationConvertToMultiPartCommand, Editing)</summary>
			public static string esri_editing_annotationConvertToMultiPartButton {
				 get { return "esri_editing_annotationConvertToMultiPartButton"; }
			}
			///<summary>Returns the id string for &quot;Convert to Single Part&quot; (AnnotationConvertToSinglePartCommand, Editing)</summary>
			public static string esri_editing_annotationConvertToSinglePartButton {
				 get { return "esri_editing_annotationConvertToSinglePartButton"; }
			}
			///<summary>Returns the id string for &quot;Stack&quot; (AnnotationStackCommand, Editing)</summary>
			public static string esri_editing_annotationStackButton {
				 get { return "esri_editing_annotationStackButton"; }
			}
			///<summary>Returns the id string for &quot;Unstack&quot; (AnnotationUnstackCommand, Editing)</summary>
			public static string esri_editing_annotationUnstackButton {
				 get { return "esri_editing_annotationUnstackButton"; }
			}
			///<summary>Returns the id string for &quot;Flip Annotation&quot; (AnnotationFlipAnnotationCommand, Editing)</summary>
			public static string esri_editing_annotationFlipAnnotationButton {
				 get { return "esri_editing_annotationFlipAnnotationButton"; }
			}
			///<summary>Returns the id string for &quot;Flip Annotation&quot; (AnnotationFlipAnnotationCommand, Editing)</summary>
			public static string esri_editing_annotationFlipAnnotationToolbarButton {
				 get { return "esri_editing_annotationFlipAnnotationToolbarButton"; }
			}
			///<summary>Returns the id string for &quot;Horizontal&quot; (AnnotationMakeHorizontalCommand, Editing)</summary>
			public static string esri_editing_annotationMakeHorizontalButton {
				 get { return "esri_editing_annotationMakeHorizontalButton"; }
			}
			///<summary>Returns the id string for &quot;Straight&quot; (AnnotationMakeStraightCommand, Editing)</summary>
			public static string esri_editing_annotationMakeStraightButton {
				 get { return "esri_editing_annotationMakeStraightButton"; }
			}
			///<summary>Returns the id string for &quot;Curved&quot; (AnnotationMakeCurvedCommand, Editing)</summary>
			public static string esri_editing_annotationMakeCurvedButton {
				 get { return "esri_editing_annotationMakeCurvedButton"; }
			}
			///<summary>Returns the id string for &quot;Toggle Side&quot; (AnnotationToggleSideCommand, Editing)</summary>
			public static string esri_editing_annotationToggleSide {
				 get { return "esri_editing_annotationToggleSide"; }
			}
			///<summary>Returns the id string for &quot;Toggle Side&quot; (AnnotationTabToggleSideCommand, Editing)</summary>
			public static string esri_editing_annotationTabToggleSide {
				 get { return "esri_editing_annotationTabToggleSide"; }
			}
			///<summary>Returns the id string for &quot;Toggle Angle&quot; (AnnotationToggleAngleCommand, Editing)</summary>
			public static string esri_editing_annotationToggleAngle {
				 get { return "esri_editing_annotationToggleAngle"; }
			}
			///<summary>Returns the id string for &quot;New Group Template&quot; (Templates.NewGroupTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateNew {
				 get { return "esri_editing_templateNew"; }
			}
			///<summary>Returns the id string for &quot;New Group Template&quot; (Templates.NewGroupTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateNewFromFeature {
				 get { return "esri_editing_templateNewFromFeature"; }
			}
			///<summary>Returns the id string for &quot;New Group Template&quot; (Templates.NewGroupTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateNewForLayer {
				 get { return "esri_editing_templateNewForLayer"; }
			}
			///<summary>Returns the id string for &quot;New Group Template&quot; (Templates.NewGroupTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateNewGroup {
				 get { return "esri_editing_templateNewGroup"; }
			}
			///<summary>Returns the id string for &quot;New Group Template&quot; (Templates.NewGroupTemplateContextCommand, Editing)</summary>
			public static string esri_editing_templateNewPreset {
				 get { return "esri_editing_templateNewPreset"; }
			}
			///<summary>Returns the id string for &quot;Delete Vertices&quot; (DeleteSelectedSketchVerticesCommand, Editing)</summary>
			public static string esri_editing_DeleteVertices_Command {
				 get { return "esri_editing_DeleteVertices_Command"; }
			}
			///<summary>Returns the id string for &quot;Update Z Values&quot; (UpdateZValuesSelectedSketchVerticesCommand, Editing)</summary>
			public static string esri_editing_UpdateZValues_Command {
				 get { return "esri_editing_UpdateZValues_Command"; }
			}
			///<summary>Returns the id string for &quot;Update M Values&quot; (UpdateMValuesSelectedSketchVerticesCommand, Editing)</summary>
			public static string esri_editing_UpdateMValues_Command {
				 get { return "esri_editing_UpdateMValues_Command"; }
			}
			///<summary>Returns the id string for &quot;Move&quot; (MoveSelectedFeatureCommand, Editing)</summary>
			public static string esri_editing_moveCurrentFeature {
				 get { return "esri_editing_moveCurrentFeature"; }
			}
			///<summary>Returns the id string for &quot;Edit Vertices&quot; (EditSelectedFeatureCommand, Editing)</summary>
			public static string esri_editing_editVerticesCurrentFeature {
				 get { return "esri_editing_editVerticesCurrentFeature"; }
			}
			///<summary>Returns the id string for &quot;Reshape&quot; (ReshapeSelectedFeatureCommand, Editing)</summary>
			public static string esri_editing_reshapeCurrentFeature {
				 get { return "esri_editing_reshapeCurrentFeature"; }
			}
			///<summary>Returns the id string for &quot;Replace Geometry&quot; (ReplaceSelectedFeatureCommand, Editing)</summary>
			public static string esri_editing_replaceGeometryCurrentFeature {
				 get { return "esri_editing_replaceGeometryCurrentFeature"; }
			}
			///<summary>Returns the id string for &quot;Split&quot; (SplitSelectedFeatureCommand, Editing)</summary>
			public static string esri_editing_splitCurrentFeature {
				 get { return "esri_editing_splitCurrentFeature"; }
			}
			///<summary>Returns the id string for &quot;Add to Favorites&quot; (AddFavoritesContextCommand, Editing)</summary>
			public static string esri_editing_addFavoriteCommand {
				 get { return "esri_editing_addFavoriteCommand"; }
			}
			///<summary>Returns the id string for &quot;Remove from Favorites&quot; (RemoveFavoritesContextCommand, Editing)</summary>
			public static string esri_editing_removeFavoriteCommand {
				 get { return "esri_editing_removeFavoriteCommand"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Templates.MpModelSelectorContextCommand, Editing)</summary>
			public static string esri_editing_MpModelSelectorProperties {
				 get { return "esri_editing_MpModelSelectorProperties"; }
			}
			///<summary>Returns the id string for &quot;Delete all templates&quot; (Templates.DeleteAllTemplatesContextCommand, Editing)</summary>
			public static string esri_editing_DeleteAllTemplates {
				 get { return "esri_editing_DeleteAllTemplates"; }
			}
			///<summary>Returns the id string for &quot;Create all templates&quot; (Templates.CreateAllTemplatesContextCommand, Editing)</summary>
			public static string esri_editing_CreateAllTemplates {
				 get { return "esri_editing_CreateAllTemplates"; }
			}
			///<summary>Returns the id string for &quot;Mode&quot; (ArcGIS.Desktop.Editing.CurrentZToggleModeButton, Editing)</summary>
			public static string esri_editing_ToggleElevationModeButton {
				 get { return "esri_editing_ToggleElevationModeButton"; }
			}
			///<summary>Returns the id string for &quot;Constant&quot; (ArcGIS.Desktop.Editing.CurrentZConstantModeButton, Editing)</summary>
			public static string esri_editing_ConstantElevationModeButton {
				 get { return "esri_editing_ConstantElevationModeButton"; }
			}
			///<summary>Returns the id string for &quot;Surface&quot; (ArcGIS.Desktop.Editing.CurrentZSurfaceModeButton, Editing)</summary>
			public static string esri_editing_SurfaceElevationModeButton {
				 get { return "esri_editing_SurfaceElevationModeButton"; }
			}
			///<summary>Returns the id string for &quot;Ground To Grid&quot; (ArcGIS.Desktop.Editing.GroundToGridSplitToggleButton, Editing)</summary>
			public static string esri_editing_GroundToGridSplitToggleButton {
				 get { return "esri_editing_GroundToGridSplitToggleButton"; }
			}
			///<summary>Returns the id string for &quot;Draw the ground line and the grid line&quot; (Button, Editing)</summary>
			public static string esri_editing_GroundToGrid_DigitizeGroundAndGrid {
				 get { return "esri_editing_GroundToGrid_DigitizeGroundAndGrid"; }
			}
			///<summary>Returns the id string for &quot;Enter the ground line and draw the grid line&quot; (Button, Editing)</summary>
			public static string esri_editing_GroundToGrid_EnterGroundDigitizeGrid {
				 get { return "esri_editing_GroundToGrid_EnterGroundDigitizeGrid"; }
			}
			///<summary>Returns the id string for &quot;Large Icons&quot; (LargeViewContextCommand, Editing)</summary>
			public static string esri_editing_largeView {
				 get { return "esri_editing_largeView"; }
			}
			///<summary>Returns the id string for &quot;Small Icons&quot; (SmallViewContextCommand, Editing)</summary>
			public static string esri_editing_smallView {
				 get { return "esri_editing_smallView"; }
			}
			///<summary>Returns the id string for &quot;List&quot; (ListViewContextCommand, Editing)</summary>
			public static string esri_editing_listView {
				 get { return "esri_editing_listView"; }
			}
			///<summary>Returns the id string for &quot;Group by function&quot; (GroupByFunctionContextCommand, Editing)</summary>
			public static string esri_editing_groupByFunction {
				 get { return "esri_editing_groupByFunction"; }
			}
			///<summary>Returns the id string for &quot;Flash&quot; (Attributes.FlashContextCommand, Editing)</summary>
			public static string esri_editing_Attributes_FlashSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_FlashSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (Attributes.ZoomToContextCommand, Editing)</summary>
			public static string esri_editing_Attributes_ZoomToSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_ZoomToSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (Attributes.PanToContextCommand, Editing)</summary>
			public static string esri_editing_Attributes_PanToSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_PanToSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Open Pop-up&quot; (Attributes.OpenPopupContextCommand, Editing)</summary>
			public static string esri_editing_Attributes_OpenPopupSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_OpenPopupSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Open New Pinned Pop-up&quot; (Attributes.OpenPinnedPopupContextCommand, Editing)</summary>
			public static string esri_editing_Attributes_OpenPinnedPopupSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_OpenPinnedPopupSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Copy Attributes&quot; (Attributes.CopyAttributesCommand, Editing)</summary>
			public static string esri_editing_Attributes_CopyAttributesContextMenuItem {
				 get { return "esri_editing_Attributes_CopyAttributesContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Paste Attributes&quot; (Attributes.PasteAttributesCommand, Editing)</summary>
			public static string esri_editing_Attributes_PasteAttributesContextMenuItem {
				 get { return "esri_editing_Attributes_PasteAttributesContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Unselect&quot; (Attributes.UnselectCommand, Editing)</summary>
			public static string esri_editing_Attributes_UnselectContextMenuItem {
				 get { return "esri_editing_Attributes_UnselectContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (Attributes.DeleteCommand, Editing)</summary>
			public static string esri_editing_Attributes_DeleteSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_DeleteSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table&quot; (Attributes.OpenAttributesTableCommand, Editing)</summary>
			public static string esri_editing_Attributes_OpenTableContextMenuItem {
				 get { return "esri_editing_Attributes_OpenTableContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table Showing Selection&quot; (Attributes.OpenAttributesTableWithSelectionCommand, Editing)</summary>
			public static string esri_editing_Attributes_OpenTableWithSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_OpenTableWithSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;New Template From Feature&quot; (Attributes.NewTemplateFromFeatureCommand, Editing)</summary>
			public static string esri_editing_Attributes_NewTemplateFromFeatureContextMenuItem {
				 get { return "esri_editing_Attributes_NewTemplateFromFeatureContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Attributes.LayerPropertiesCommand, Editing)</summary>
			public static string esri_editing_Attributes_LayerPropertiesContextMenuItem {
				 get { return "esri_editing_Attributes_LayerPropertiesContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Standalone Table Properties&quot; (Attributes.StandaloneTablePropertiesCommand, Editing)</summary>
			public static string esri_editing_Attributes_StandaloneTablePropertiesContextMenuItem {
				 get { return "esri_editing_Attributes_StandaloneTablePropertiesContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Clear Selection&quot; (Attributes.ClearSelectionCommand, Editing)</summary>
			public static string esri_editing_Attributes_ClearSelectionContextMenuItem {
				 get { return "esri_editing_Attributes_ClearSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Select&quot; (Attributes.SelectCommand, Editing)</summary>
			public static string esri_editing_Attributes_SelectContextMenuItem {
				 get { return "esri_editing_Attributes_SelectContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Only Select This&quot; (Attributes.OnlySelectThisCommand, Editing)</summary>
			public static string esri_editing_Attributes_OnlySelectThisContextMenuItem {
				 get { return "esri_editing_Attributes_OnlySelectThisContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Remove From Relationship&quot; (Attributes.RemoveFromRelationshipCommand, Editing)</summary>
			public static string esri_editing_Attributes_RemoveFromRelationshipContextMenuItem {
				 get { return "esri_editing_Attributes_RemoveFromRelationshipContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Add Selected To Relationship&quot; (Attributes.AddSelectedToRelationshipCommand, Editing)</summary>
			public static string esri_editing_Attributes_AddSelectedToRelationshipContextMenuItem {
				 get { return "esri_editing_Attributes_AddSelectedToRelationshipContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Add New To Relationship&quot; (Attributes.AddNewToRelationshipCommand, Editing)</summary>
			public static string esri_editing_Attributes_AddNewToRelationshipContextMenuItem {
				 get { return "esri_editing_Attributes_AddNewToRelationshipContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Remove All From Relationship&quot; (Attributes.RemoveAllFromRelationshipCommand, Editing)</summary>
			public static string esri_editing_Attributes_RemoveAllFromRelationshipContextMenuItem {
				 get { return "esri_editing_Attributes_RemoveAllFromRelationshipContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Add To Map&quot; (Attributes.AddToMapCommand, Editing)</summary>
			public static string esri_editing_Attributes_AddToMapContextMenuItem {
				 get { return "esri_editing_Attributes_AddToMapContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move to Target&quot; (Attributes.MoveToTargetSelectionCommand, Editing)</summary>
			public static string esri_editing_SplitByFeature_MoveToTargetSelectionContextMenuItem {
				 get { return "esri_editing_SplitByFeature_MoveToTargetSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move to Input&quot; (Attributes.MoveToInputSelectionCommand, Editing)</summary>
			public static string esri_editing_SplitByFeature_MoveToInputSelectionContextMenuItem {
				 get { return "esri_editing_SplitByFeature_MoveToInputSelectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;To Line&quot; (SegmentToLineCommand, Editing)</summary>
			public static string esri_editing_changesegment_ToLineCommand {
				 get { return "esri_editing_changesegment_ToLineCommand"; }
			}
			///<summary>Returns the id string for &quot;To Circular Arc&quot; (SegmentToArcCommand, Editing)</summary>
			public static string esri_editing_changesegment_ToCircularArcCommand {
				 get { return "esri_editing_changesegment_ToCircularArcCommand"; }
			}
			///<summary>Returns the id string for &quot;To Bezier Curve&quot; (SegmentToCurveCommand, Editing)</summary>
			public static string esri_editing_changesegment_ToBezierCurveCommand {
				 get { return "esri_editing_changesegment_ToBezierCurveCommand"; }
			}
			///<summary>Returns the id string for &quot;Set Editing Options&quot; (EditingOptionsCommand, Editing)</summary>
			public static string esri_editing_openEditingOptionsButton {
				 get { return "esri_editing_openEditingOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Set Editor Settings&quot; (EditingSettingsCommand, Editing)</summary>
			public static string esri_editing_openEditingSettingsButton {
				 get { return "esri_editing_openEditingSettingsButton"; }
			}
			///<summary>Returns the id string for &quot;Field Mapping...&quot; (FieldMappingSettingsCommand, Editing)</summary>
			public static string esri_editing_openFieldMappingSettingsButton {
				 get { return "esri_editing_openFieldMappingSettingsButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Feature Class&quot; (esri_editing_EditingModule:OnClick_AddToFeatureClass, Editing)</summary>
			public static string esri_editing_addToFeatureClass {
				 get { return "esri_editing_addToFeatureClass"; }
			}
			///<summary>Returns the id string for &quot;Rematch Addresses...&quot; (esri_editing_EditingModule:TableManager.RematchAddresses, Editing)</summary>
			public static string esri_mapping_OpenRematchTableContextMenuItem {
				 get { return "esri_mapping_OpenRematchTableContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table&quot; (esri_editing_EditingModule:TableManager.OnOpenTablePane, Editing)</summary>
			public static string esri_editing_table_openTablePaneButton {
				 get { return "esri_editing_table_openTablePaneButton"; }
			}
			///<summary>Returns the id string for &quot;Table From Selection&quot; (esri_editing_EditingModule:TableManager.OnOpenSelectedTablePane, Editing)</summary>
			public static string esri_editing_table_openSelectedTablePaneButton {
				 get { return "esri_editing_table_openSelectedTablePaneButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table Showing Selection&quot; (esri_editing_EditingModule:TableManager.OnOpenSelectedTablePane, Editing)</summary>
			public static string esri_editing_table_openSelectedTablePaneMenuButton {
				 get { return "esri_editing_table_openSelectedTablePaneMenuButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table Showing Selection&quot; (esri_editing_EditingModule:TableManager.OnOpenSelectedTablePane, Editing)</summary>
			public static string esri_editing_standaloneTable_openSelectedTablePaneButton {
				 get { return "esri_editing_standaloneTable_openSelectedTablePaneButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_editing_EditingModule:TableManager.OnOpenTablePane, Editing)</summary>
			public static string esri_editing_table_openStandaloneTablePaneButton {
				 get { return "esri_editing_table_openStandaloneTablePaneButton"; }
			}
			///<summary>Returns the id string for &quot;Show All&quot; (esri_editing_tablePane:ShowAllFields, Editing)</summary>
			public static string esri_editing_table_fieldsShowAllButton {
				 get { return "esri_editing_table_fieldsShowAllButton"; }
			}
			///<summary>Returns the id string for &quot;Aliases&quot; (ToggleFieldAliasButton, Editing)</summary>
			public static string esri_editing_table_fieldsShowAliasButton {
				 get { return "esri_editing_table_fieldsShowAliasButton"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (esri_editing_tablePane:FieldsView, Editing)</summary>
			public static string esri_editing_table_fieldsViewButton {
				 get { return "esri_editing_table_fieldsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (esri_editing_tablePane:AddField, Editing)</summary>
			public static string esri_editing_table_tableAddFieldButton {
				 get { return "esri_editing_table_tableAddFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Custom Sort&quot; (esri_editing_tablePane:CustomSort, Editing)</summary>
			public static string esri_editing_table_tableCustomSortButton {
				 get { return "esri_editing_table_tableCustomSortButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Sort&quot; (esri_editing_tablePane:ClearSort, Editing)</summary>
			public static string esri_editing_table_tableClearSortButton {
				 get { return "esri_editing_table_tableClearSortButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_editing_tablePane:CopySelectedRows, Editing)</summary>
			public static string esri_editing_table_tableCopySelectedRowsButton {
				 get { return "esri_editing_table_tableCopySelectedRowsButton"; }
			}
			///<summary>Returns the id string for &quot;Refresh&quot; (esri_editing_tablePane:RefreshTable, Editing)</summary>
			public static string esri_editing_table_refreshTableButton {
				 get { return "esri_editing_table_refreshTableButton"; }
			}
			///<summary>Returns the id string for &quot;Load All&quot; (esri_editing_tablePane:LoadAll, Editing)</summary>
			public static string esri_editing_table_loadAllButton {
				 get { return "esri_editing_table_loadAllButton"; }
			}
			///<summary>Returns the id string for &quot;Sort Ascending&quot; (esri_editing_tablePane:SortAscending, Editing)</summary>
			public static string esri_editing_tableSortAscButton {
				 get { return "esri_editing_tableSortAscButton"; }
			}
			///<summary>Returns the id string for &quot;Sort Descending&quot; (esri_editing_tablePane:SortDescending, Editing)</summary>
			public static string esri_editing_tableSortDescButton {
				 get { return "esri_editing_tableSortDescButton"; }
			}
			///<summary>Returns the id string for &quot;Custom Sort...&quot; (esri_editing_tablePane:CustomSort, Editing)</summary>
			public static string esri_editing_tableSortCustomButton {
				 get { return "esri_editing_tableSortCustomButton"; }
			}
			///<summary>Returns the id string for &quot;Time&quot; (TableTimeFilterButton, Editing)</summary>
			public static string esri_editing_table_timeFilterButton {
				 get { return "esri_editing_table_timeFilterButton"; }
			}
			///<summary>Returns the id string for &quot;Range&quot; (TableRangeFilterButton, Editing)</summary>
			public static string esri_editing_table_rangeFilterButton {
				 get { return "esri_editing_table_rangeFilterButton"; }
			}
			///<summary>Returns the id string for &quot;Extent&quot; (TableExtentFilterButton, Editing)</summary>
			public static string esri_editing_table_extentFilterButton {
				 get { return "esri_editing_table_extentFilterButton"; }
			}
			///<summary>Returns the id string for &quot;Statistics&quot; (esri_editing_EditingModule:TableManager.Statistics, Editing)</summary>
			public static string esri_editing_tableStatisticsButton {
				 get { return "esri_editing_tableStatisticsButton"; }
			}
			///<summary>Returns the id string for &quot;Calculate Field&quot; (esri_editing_tablePane:CalculateField, Editing)</summary>
			public static string esri_editing_tableCalculateFieldButton {
				 get { return "esri_editing_tableCalculateFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Calculate Geometry&quot; (esri_editing_tablePane:CalculateGeometry, Editing)</summary>
			public static string esri_editing_tableCalculateGeometryButton {
				 get { return "esri_editing_tableCalculateGeometryButton"; }
			}
			///<summary>Returns the id string for &quot;Summarize&quot; (esri_editing_tablePane:SummarizeField, Editing)</summary>
			public static string esri_editing_tableSummarizeButton {
				 get { return "esri_editing_tableSummarizeButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_editing_tablePane:DeleteField, Editing)</summary>
			public static string esri_editing_tableDeleteFieldButton {
				 get { return "esri_editing_tableDeleteFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Hide Field&quot; (esri_editing_tablePane:HideField, Editing)</summary>
			public static string esri_editing_tableHideFieldButton {
				 get { return "esri_editing_tableHideFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Freeze/Unfreeze Field&quot; (esri_editing_tablePane:ToggleFreezeField, Editing)</summary>
			public static string esri_editing_tableFreezeFieldButton {
				 get { return "esri_editing_tableFreezeFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Add Join&quot; (esri_editing_tablePane:AddJoin, Editing)</summary>
			public static string esri_editing_tableAddJoinButton {
				 get { return "esri_editing_tableAddJoinButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Join&quot; (esri_editing_tablePane:RemoveJoin, Editing)</summary>
			public static string esri_editing_tableRemoveJoinButton {
				 get { return "esri_editing_tableRemoveJoinButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Joins&quot; (esri_editing_tablePane:RemoveAllJoins, Editing)</summary>
			public static string esri_editing_tableRemoveAllJoinsButton {
				 get { return "esri_editing_tableRemoveAllJoinsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Relate&quot; (esri_editing_tablePane:AddRelate, Editing)</summary>
			public static string esri_editing_tableAddRelateButton {
				 get { return "esri_editing_tableAddRelateButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Relate&quot; (esri_editing_tablePane:RemoveRelate, Editing)</summary>
			public static string esri_editing_tableRemoveRelateButton {
				 get { return "esri_editing_tableRemoveRelateButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Relates&quot; (esri_editing_tablePane:RemoveAllRelates, Editing)</summary>
			public static string esri_editing_tableRemoveAllRelatesButton {
				 get { return "esri_editing_tableRemoveAllRelatesButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (esri_editing_tablePane:ZoomToSelected, Editing)</summary>
			public static string esri_editing_tableZoomToSelectedButton {
				 get { return "esri_editing_tableZoomToSelectedButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (esri_editing_tablePane:ZoomToRow, Editing)</summary>
			public static string esri_editing_tableZoomToButton {
				 get { return "esri_editing_tableZoomToButton"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (esri_editing_tablePane:PanToSelected, Editing)</summary>
			public static string esri_editing_tablePanToSelectedButton {
				 get { return "esri_editing_tablePanToSelectedButton"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (esri_editing_tablePane:PanToRow, Editing)</summary>
			public static string esri_editing_tablePanToButton {
				 get { return "esri_editing_tablePanToButton"; }
			}
			///<summary>Returns the id string for &quot;Flash&quot; (esri_editing_tablePane:FlashRow, Editing)</summary>
			public static string esri_editing_tableFlashButton {
				 get { return "esri_editing_tableFlashButton"; }
			}
			///<summary>Returns the id string for &quot;Manage Attachments&quot; (esri_editing_tablePane:OnOpenAttachmentsManager, Editing)</summary>
			public static string esri_editing_tableOpenAttachmentsButton {
				 get { return "esri_editing_tableOpenAttachmentsButton"; }
			}
			///<summary>Returns the id string for &quot;All&quot; (esri_editing_tablePane:OnSelectAllRecords, Editing)</summary>
			public static string esri_editing_tableSelectAllButton {
				 get { return "esri_editing_tableSelectAllButton"; }
			}
			///<summary>Returns the id string for &quot;Switch&quot; (esri_editing_tablePane:OnSwitchRecordSelection, Editing)</summary>
			public static string esri_editing_tableSwitchSelButton {
				 get { return "esri_editing_tableSwitchSelButton"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_editing_tablePane:OnClearRecordSelection, Editing)</summary>
			public static string esri_editing_tableClearSelectionButton {
				 get { return "esri_editing_tableClearSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_editing_tablePane:OnDeleteSelectedRows, Editing)</summary>
			public static string esri_editing_tableDeleteSelected {
				 get { return "esri_editing_tableDeleteSelected"; }
			}
			///<summary>Returns the id string for &quot;Delete Row&quot; (esri_editing_tablePane:DeleteRow, Editing)</summary>
			public static string esri_editing_tableDeleteRow {
				 get { return "esri_editing_tableDeleteRow"; }
			}
			///<summary>Returns the id string for &quot;Select/Unselect&quot; (esri_editing_tablePane:OnSelectRow, Editing)</summary>
			public static string esri_editing_tableSelectRowButton {
				 get { return "esri_editing_tableSelectRowButton"; }
			}
			///<summary>Returns the id string for &quot;Highlight/Unhighlight&quot; (esri_editing_tablePane:OnHighlightRow, Editing)</summary>
			public static string esri_editing_tableHighlightRowButton {
				 get { return "esri_editing_tableHighlightRowButton"; }
			}
			///<summary>Returns the id string for &quot;Reselect Highlighted&quot; (esri_editing_tablePane:ReselectHighlighted, Editing)</summary>
			public static string esri_editing_tableReselectHighlightedButton {
				 get { return "esri_editing_tableReselectHighlightedButton"; }
			}
			///<summary>Returns the id string for &quot;Pop-up&quot; (esri_editing_tablePane:PopupRow, Editing)</summary>
			public static string esri_editing_tablePopupButton {
				 get { return "esri_editing_tablePopupButton"; }
			}
			///<summary>Returns the id string for &quot;Pinned Pop-up&quot; (esri_editing_tablePane:PinnedPopupRow, Editing)</summary>
			public static string esri_editing_tablePinnedPopupButton {
				 get { return "esri_editing_tablePinnedPopupButton"; }
			}
			///<summary>Returns the id string for &quot;Map All Suggestions&quot; (esri_editing_rematchAddressesDockPane:ZoomToAll_Handler, Editing)</summary>
			public static string esri_editing_rematchMapAllSuggestions {
				 get { return "esri_editing_rematchMapAllSuggestions"; }
			}
			///<summary>Returns the id string for &quot;Default Sort Order&quot; (esri_editing_rematchAddressesDockPane:DefaultSortOrder_Handler, Editing)</summary>
			public static string esri_editing_rematchDefaultSortOrder {
				 get { return "esri_editing_rematchDefaultSortOrder"; }
			}
			///<summary>Returns the id string for &quot;Matched Addresses with Score 80 - 100&quot; (ArcGIS.Desktop.Editing.QueryScoreAbove80Button, Editing)</summary>
			public static string esri_editing_rematchQueryScoreAbove80 {
				 get { return "esri_editing_rematchQueryScoreAbove80"; }
			}
			///<summary>Returns the id string for &quot;Matched Addresses with Score below 80&quot; (ArcGIS.Desktop.Editing.QueryScoreBelow80Button, Editing)</summary>
			public static string esri_editing_rematchQueryScoreBelow80 {
				 get { return "esri_editing_rematchQueryScoreBelow80"; }
			}
			///<summary>Returns the id string for &quot;Unmatched Addresses&quot; (ArcGIS.Desktop.Editing.QueryUnmatchedButton, Editing)</summary>
			public static string esri_editing_rematchQueryUnmatched {
				 get { return "esri_editing_rematchQueryUnmatched"; }
			}
			///<summary>Returns the id string for &quot;Matched Addresses with Candidates Tied&quot; (ArcGIS.Desktop.Editing.QueryMatchedTiedButton, Editing)</summary>
			public static string esri_editing_rematchQueryMatchedTied {
				 get { return "esri_editing_rematchQueryMatchedTied"; }
			}
			///<summary>Returns the id string for &quot;Custom Query&quot; (ArcGIS.Desktop.Editing.QueryCustomButton, Editing)</summary>
			public static string esri_editing_rematchQueryCustom {
				 get { return "esri_editing_rematchQueryCustom"; }
			}
			///<summary>Returns the id string for &quot;All Addresses&quot; (ArcGIS.Desktop.Editing.QueryAllAddressesButton, Editing)</summary>
			public static string esri_editing_rematchAllAddresses {
				 get { return "esri_editing_rematchAllAddresses"; }
			}
			///<summary>Returns the id string for &quot;Export Features&quot; (esri_editing_tablePane:ExportFeatures, Editing)</summary>
			public static string esri_editing_tableExportFeaturesButton {
				 get { return "esri_editing_tableExportFeaturesButton"; }
			}
			///<summary>Returns the id string for &quot;Export Table&quot; (esri_editing_tablePane:TableExportTable, Editing)</summary>
			public static string esri_editing_tableExportTableButton {
				 get { return "esri_editing_tableExportTableButton"; }
			}
			///<summary>Returns the id string for &quot;Select By Attributes&quot; (esri_editing_tablePane:OnSelectByAttributes, Editing)</summary>
			public static string esri_editing_tableselectByAttributeButton {
				 get { return "esri_editing_tableselectByAttributeButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_editing_tablePane:CopyCellValue, Editing)</summary>
			public static string esri_editing_tableCopyCellButton {
				 get { return "esri_editing_tableCopyCellButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (esri_editing_tablePane:PasteCellValues, Editing)</summary>
			public static string esri_editing_tablePasteCellButton {
				 get { return "esri_editing_tablePasteCellButton"; }
			}
			///<summary>Returns the id string for &quot;Find and Replace&quot; (esri_editing_tablePane:FindAndReplace, Editing)</summary>
			public static string esri_editing_tableFindAndReplace {
				 get { return "esri_editing_tableFindAndReplace"; }
			}
			///<summary>Returns the id string for &quot;Find Next&quot; (esri_editing_tablePane:FindNext, Editing)</summary>
			public static string esri_editing_tableFindNext {
				 get { return "esri_editing_tableFindNext"; }
			}
			///<summary>Returns the id string for &quot;Find Previous&quot; (esri_editing_tablePane:FindPrevious, Editing)</summary>
			public static string esri_editing_tableFindPrevious {
				 get { return "esri_editing_tableFindPrevious"; }
			}
			///<summary>Returns the id string for &quot;Go To&quot; (esri_editing_tablePane:GoTo, Editing)</summary>
			public static string esri_editing_tableGoTo {
				 get { return "esri_editing_tableGoTo"; }
			}
			///<summary>Returns the id string for &quot;Reconcile&quot; (esri_editing_EditingModule:ShowEditorReconcileDialog, Editing)</summary>
			public static string esri_editor_reconcileVersionButton {
				 get { return "esri_editor_reconcileVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Post&quot; (esri_editing_EditingModule:OnPostVersion, Editing)</summary>
			public static string esri_editor_PostVersionButton {
				 get { return "esri_editor_PostVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Conflict Manager&quot; (esri_editing_EditingModule:ShowVersionConflictManagerDialog, Editing)</summary>
			public static string esri_editor_ConflictManagerButton {
				 get { return "esri_editor_ConflictManagerButton"; }
			}
			///<summary>Returns the id string for &quot;Version Changes&quot; (esri_editing_EditingModule:ShowVersionChangesDialog, Editing)</summary>
			public static string esri_editor_VersionChangesButton {
				 get { return "esri_editor_VersionChangesButton"; }
			}
			///<summary>Returns the id string for &quot;Refresh&quot; (esri_editing_EditingModule:RefreshSelectedVersion, Editing)</summary>
			public static string esri_editor_versionRefreshMapButton {
				 get { return "esri_editor_versionRefreshMapButton"; }
			}
			///<summary>Returns the id string for &quot;Error Inspector&quot; (esri_editing_EditingModule:ShowTopologyErrorInspectorWindow, Editing)</summary>
			public static string esri_editing_ShowTopologyErrorInspectorBtn {
				 get { return "esri_editing_ShowTopologyErrorInspectorBtn"; }
			}
			///<summary>Returns the id string for &quot;Error Inspector&quot; (esri_editing_EditingModule:ShowParcelErrorInspectorWindow, Editing)</summary>
			public static string esri_editing_ShowParcelErrorInspectorBtn {
				 get { return "esri_editing_ShowParcelErrorInspectorBtn"; }
			}
			///<summary>Returns the id string for &quot;Error Inspector&quot; (esri_editing_EditingModule:ShowGdbValidationErrorInspectorWindow, Editing)</summary>
			public static string esri_editing_ShowGdbErrorsErrorInspectorBtn {
				 get { return "esri_editing_ShowGdbErrorsErrorInspectorBtn"; }
			}
			///<summary>Returns the id string for &quot;Validate All&quot; (ArcGIS.Desktop.Editing.TopologyValidateCommand, Editing)</summary>
			public static string esri_editing_ValidateTopology {
				 get { return "esri_editing_ValidateTopology"; }
			}
			///<summary>Returns the id string for &quot;Validate Extent&quot; (ArcGIS.Desktop.Editing.TopologyValidateExtentCommand, Editing)</summary>
			public static string esri_editing_ValidateTopologyExtent {
				 get { return "esri_editing_ValidateTopologyExtent"; }
			}
			///<summary>Returns the id string for &quot;Error Inspector&quot; (esri_editing_EditingModule:ShowErrorInspectorWindow, Editing)</summary>
			public static string esri_editing_ShowErrorInspectorBtn {
				 get { return "esri_editing_ShowErrorInspectorBtn"; }
			}
			///<summary>Returns the id string for &quot;All&quot; (esri_editing_EditingModule:OnSelectAllVertices, Editing)</summary>
			public static string esri_editing_geometryViewSelectAllButton {
				 get { return "esri_editing_geometryViewSelectAllButton"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_editing_EditingModule:OnClearVertexSelection, Editing)</summary>
			public static string esri_editing_geometryViewClearSelectionButton {
				 get { return "esri_editing_geometryViewClearSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Flash&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.FlashRowCmd, Editing)</summary>
			public static string esri_editing_errorInspectorFlashButton {
				 get { return "esri_editing_errorInspectorFlashButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ZoomToRowCmd, Editing)</summary>
			public static string esri_editing_errorInspectorZoomToButton {
				 get { return "esri_editing_errorInspectorZoomToButton"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.PanToRowCmd, Editing)</summary>
			public static string esri_editing_errorInspectorPanToButton {
				 get { return "esri_editing_errorInspectorPanToButton"; }
			}
			///<summary>Returns the id string for &quot;Pop-up&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.PopupRowCmd, Editing)</summary>
			public static string esri_editing_errorInspectorPopupButton {
				 get { return "esri_editing_errorInspectorPopupButton"; }
			}
			///<summary>Returns the id string for &quot;Select/Unselect&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.SelectRowCmd, Editing)</summary>
			public static string esri_editing_errorInspectorSelectRowButton {
				 get { return "esri_editing_errorInspectorSelectRowButton"; }
			}
			///<summary>Returns the id string for &quot;All&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.SelectAllRowsCommand, Editing)</summary>
			public static string esri_editing_errorInspectorSelectAllButton {
				 get { return "esri_editing_errorInspectorSelectAllButton"; }
			}
			///<summary>Returns the id string for &quot;Switch&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.SwtichRowSelectionCommand, Editing)</summary>
			public static string esri_editing_errorInspectorSwitchSelButton {
				 get { return "esri_editing_errorInspectorSwitchSelButton"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ClearRowSelectionCommand, Editing)</summary>
			public static string esri_editing_errorInspectorClearSelectionButton {
				 get { return "esri_editing_errorInspectorClearSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ZoomToSelectedCommand, Editing)</summary>
			public static string esri_editing_errorInspectorZoomToSelectedButton {
				 get { return "esri_editing_errorInspectorZoomToSelectedButton"; }
			}
			///<summary>Returns the id string for &quot;Mark As Exception&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.MarkAsExceptionCommand, Editing)</summary>
			public static string esri_editing_errorInspectorMarkAsExceptions {
				 get { return "esri_editing_errorInspectorMarkAsExceptions"; }
			}
			///<summary>Returns the id string for &quot;Clear Exception&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.MarkAsErrorCommand, Editing)</summary>
			public static string esri_editing_errorInspectorMarkAsErrors {
				 get { return "esri_editing_errorInspectorMarkAsErrors"; }
			}
			///<summary>Returns the id string for &quot;Validate Extent&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ValidateExtentCommand, Editing)</summary>
			public static string esri_editing_errorInspectorValidateExtent {
				 get { return "esri_editing_errorInspectorValidateExtent"; }
			}
			///<summary>Returns the id string for &quot;Features&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.SelectErrorFeaturesCommand, Editing)</summary>
			public static string esri_editing_errorInspectorSelectErrorFeatures {
				 get { return "esri_editing_errorInspectorSelectErrorFeatures"; }
			}
			///<summary>Returns the id string for &quot;Map Extent&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.MapExtentFilterCommand, Editing)</summary>
			public static string esri_editing_errorInspectorMapExtentFilter {
				 get { return "esri_editing_errorInspectorMapExtentFilter"; }
			}
			///<summary>Returns the id string for &quot;Show Shape Length/Area&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ToggleShapeLengthAreaCommand, Editing)</summary>
			public static string esri_editing_errorInspectorToggleShapeLengthArea {
				 get { return "esri_editing_errorInspectorToggleShapeLengthArea"; }
			}
			///<summary>Returns the id string for &quot;Show Editor Tracking&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ToggleEditorTrackingCommand, Editing)</summary>
			public static string esri_editing_errorInspectorToggleEditorTracking {
				 get { return "esri_editing_errorInspectorToggleEditorTracking"; }
			}
			///<summary>Returns the id string for &quot;Show Status&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ToggleReviewerStatusCommand, Editing)</summary>
			public static string esri_editing_errorInspectorToggleShowStatus {
				 get { return "esri_editing_errorInspectorToggleShowStatus"; }
			}
			///<summary>Returns the id string for &quot;Rules&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.TopologyRuleFilterCommand, Editing)</summary>
			public static string esri_editing_errorInspectorTopologyRuleFilter {
				 get { return "esri_editing_errorInspectorTopologyRuleFilter"; }
			}
			///<summary>Returns the id string for &quot;Rule Description...&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.TopologyRuleInfoCommand, Editing)</summary>
			public static string esri_editing_errorInspectorTopologyShowRuleButton {
				 get { return "esri_editing_errorInspectorTopologyShowRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Overlap&quot; (TopologySubtractFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_RemoveOverlapContextMenuItem {
				 get { return "esri_editing_topology_fix_RemoveOverlapContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Remove Segment&quot; (TopologySubtractFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_RemoveSegmentContextMenuItem {
				 get { return "esri_editing_topology_fix_RemoveSegmentContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Create Feature&quot; (TopologyCreateFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_CreateContextMenuItem {
				 get { return "esri_editing_topology_fix_CreateContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Merge&quot; (TopologyMergeCommand, Editing)</summary>
			public static string esri_editing_topology_fix_MergeContextMenuItem {
				 get { return "esri_editing_topology_fix_MergeContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Merge to Largest&quot; (TopologyMergeLargestCommand, Editing)</summary>
			public static string esri_editing_topology_fix_MergeToLargestContextMenuItem {
				 get { return "esri_editing_topology_fix_MergeToLargestContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Delete Feature&quot; (TopologyDeleteFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_DeleteContextMenuItem {
				 get { return "esri_editing_topology_fix_DeleteContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Split&quot; (TopologySplitFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_SplitContextMenuItem {
				 get { return "esri_editing_topology_fix_SplitContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Extend&quot; (TopologyExtendFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_ExtendContextMenuItem {
				 get { return "esri_editing_topology_fix_ExtendContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Trim&quot; (TopologyTrimFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_TrimContextMenuItem {
				 get { return "esri_editing_topology_fix_TrimContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Snap&quot; (TopologySnapCommand, Editing)</summary>
			public static string esri_editing_topology_fix_SnapContextMenuItem {
				 get { return "esri_editing_topology_fix_SnapContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Simplify&quot; (TopologySimplifyFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_SimplifyContextMenuItem {
				 get { return "esri_editing_topology_fix_SimplifyContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Explode&quot; (TopologyExplodeLineFeaturesCommand, Editing)</summary>
			public static string esri_editing_topology_fix_ExplodeContextMenuItem {
				 get { return "esri_editing_topology_fix_ExplodeContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Build&quot; (TopologyPRTBuildCommand, Editing)</summary>
			public static string esri_editing_topology_fix_BuildContextMenuItem {
				 get { return "esri_editing_topology_fix_BuildContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Assign To Active Record&quot; (TopologyPRTAssignToActiveRecordCommand, Editing)</summary>
			public static string esri_editing_topology_fix_AssignToActiveRecordContextMenuItem {
				 get { return "esri_editing_topology_fix_AssignToActiveRecordContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;No Fix Available&quot; (Button, Editing)</summary>
			public static string esri_editing_topology_fix_NoFixContextMenuItem {
				 get { return "esri_editing_topology_fix_NoFixContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Mark as Exception&quot; (TopologyMarkAsExceptionCommand, Editing)</summary>
			public static string esri_editing_topology_fix_MarkAsExceptionContextMenuItem {
				 get { return "esri_editing_topology_fix_MarkAsExceptionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Clear Exception&quot; (TopologyMarkAsErrorCommand, Editing)</summary>
			public static string esri_editing_topology_fix_MarkAsErrorContextMenuItem {
				 get { return "esri_editing_topology_fix_MarkAsErrorContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Rule Description...&quot; (ArcGIS.Desktop.Editing.TopologyFixToolRuleInfoCommand, Editing)</summary>
			public static string esri_editing_topology_fixTool_ShowRuleButton {
				 get { return "esri_editing_topology_fixTool_ShowRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Set Origin&quot; (GridSetOriginCommand, Editing)</summary>
			public static string esri_editing_GridSetOriginCommand {
				 get { return "esri_editing_GridSetOriginCommand"; }
			}
			///<summary>Returns the id string for &quot;Set Rotation&quot; (GridSetRotationCommand, Editing)</summary>
			public static string esri_editing_GridSetRotationCommand {
				 get { return "esri_editing_GridSetRotationCommand"; }
			}
			///<summary>Returns the id string for &quot;Set Origin and Rotation&quot; (GridSetOriginAndRotationCommand, Editing)</summary>
			public static string esri_editing_GridSetOriginAndRotationCommand {
				 get { return "esri_editing_GridSetOriginAndRotationCommand"; }
			}
			///<summary>Returns the id string for &quot;Commit&quot; (GridCommitCommand, Editing)</summary>
			public static string esri_editing_GridCommit {
				 get { return "esri_editing_GridCommit"; }
			}
			///<summary>Returns the id string for &quot;Cancel&quot; (GridCancelCommand, Editing)</summary>
			public static string esri_editing_GridCancel {
				 get { return "esri_editing_GridCancel"; }
			}
			///<summary>Returns the id string for &quot;Show Only Active&quot; (ArcGIS.Desktop.Editing.ShowOnlyActiveRecordCommand, Editing)</summary>
			public static string esri_editing_parcelShowOnlyActive {
				 get { return "esri_editing_parcelShowOnlyActive"; }
			}
			///<summary>Returns the id string for &quot;Show Only Active On&quot; (ArcGIS.Desktop.Editing.ShowOnlyActiveRecordOnCommand, Editing)</summary>
			public static string esri_editing_parcelShowOnlyActiveOn {
				 get { return "esri_editing_parcelShowOnlyActiveOn"; }
			}
			///<summary>Returns the id string for &quot;Show Only Active Off&quot; (ArcGIS.Desktop.Editing.ShowOnlyActiveRecordOffCommand, Editing)</summary>
			public static string esri_editing_parcelShowOnlyActiveOff {
				 get { return "esri_editing_parcelShowOnlyActiveOff"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (esri_editing_EditingModule:ShowParcelRecordSearchWindow, Editing)</summary>
			public static string esri_editing_ShowParcelRecordSearch {
				 get { return "esri_editing_ShowParcelRecordSearch"; }
			}
			///<summary>Returns the id string for &quot;Select Features&quot; (ArcGIS.Desktop.Editing.SelectFeaturesInActiveRecordCommand, Editing)</summary>
			public static string esri_editing_SelectFeaturesInActiveRecord {
				 get { return "esri_editing_SelectFeaturesInActiveRecord"; }
			}
			///<summary>Returns the id string for &quot;Align Parcels&quot; (AlignParcelFeaturesCommand, Editing)</summary>
			public static string esri_editing_AlignParcels {
				 get { return "esri_editing_AlignParcels"; }
			}
			///<summary>Returns the id string for &quot;Switch&quot; (SwitchParcelSelectionCommand, Editing)</summary>
			public static string esri_editing_SwitchParcelSelection {
				 get { return "esri_editing_SwitchParcelSelection"; }
			}
			///<summary>Returns the id string for &quot;Align Features&quot; (TraceParcelFeaturesCommand, Editing)</summary>
			public static string esri_editing_TraceParcelFeatures {
				 get { return "esri_editing_TraceParcelFeatures"; }
			}
			///<summary>Returns the id string for &quot;Switch Gallery Size&quot; (esri_editing_EditingModule:ToggleParcelGalleryView, Editing)</summary>
			public static string esri_editing_ToggleParcelGallerySize {
				 get { return "esri_editing_ToggleParcelGallerySize"; }
			}
			///<summary>Returns the id string for &quot;Customize...&quot; (esri_editing_EditingModule:CustomizeParcelGallery, Editing)</summary>
			public static string esri_editing_CustomizeParcelGalleryButton {
				 get { return "esri_editing_CustomizeParcelGalleryButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Records&quot; (ZoomToRecordsContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_ZoomToRecords {
				 get { return "esri_editing_manage_records_ZoomToRecords"; }
			}
			///<summary>Returns the id string for &quot;Pan To Records&quot; (PanToRecordsContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_PanToRecords {
				 get { return "esri_editing_manage_records_PanToRecords"; }
			}
			///<summary>Returns the id string for &quot;Select Records&quot; (SelectRecordsContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_SelectRecords {
				 get { return "esri_editing_manage_records_SelectRecords"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table Showing Selection&quot; (RecordAttributesContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_RecordAttributes {
				 get { return "esri_editing_manage_records_RecordAttributes"; }
			}
			///<summary>Returns the id string for &quot;Set Active Record&quot; (ActivateRecordContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_ActivateRecord {
				 get { return "esri_editing_manage_records_ActivateRecord"; }
			}
			///<summary>Returns the id string for &quot;Select Features In Records&quot; (SelectFeaturesInRecordsContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_SelectFeaturesInRecords {
				 get { return "esri_editing_manage_records_SelectFeaturesInRecords"; }
			}
			///<summary>Returns the id string for &quot;Assign Selection To Record&quot; (AssignSelectionToRecordContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_AssignFeaturesToRecord {
				 get { return "esri_editing_manage_records_AssignFeaturesToRecord"; }
			}
			///<summary>Returns the id string for &quot;Delete Records&quot; (DeleteRecordsContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_DeleteRecords {
				 get { return "esri_editing_manage_records_DeleteRecords"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (RecordPropertiesContextCommand, Editing)</summary>
			public static string esri_editing_manage_records_RecordProperties {
				 get { return "esri_editing_manage_records_RecordProperties"; }
			}
			///<summary>Returns the id string for &quot;Manage Records&quot; (esri_editing_EditingModule:ShowParcelRecordSearchWindow, Editing)</summary>
			public static string esri_editing_parcel_HUD_ManageRecords {
				 get { return "esri_editing_parcel_HUD_ManageRecords"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Record&quot; (ArcGIS.Desktop.Editing.ZoomToActiveRecordCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_ZoomToActiveRecord {
				 get { return "esri_editing_parcel_HUD_ZoomToActiveRecord"; }
			}
			///<summary>Returns the id string for &quot;Pan To Record&quot; (ArcGIS.Desktop.Editing.PanToActiveRecordCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_PanToActiveRecord {
				 get { return "esri_editing_parcel_HUD_PanToActiveRecord"; }
			}
			///<summary>Returns the id string for &quot;Select Record&quot; (ArcGIS.Desktop.Editing.SelectActiveRecordCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_SelectActiveRecord {
				 get { return "esri_editing_parcel_HUD_SelectActiveRecord"; }
			}
			///<summary>Returns the id string for &quot;Select Features In Active Record&quot; (ArcGIS.Desktop.Editing.SelectFeaturesInActvieRecordCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_SelectFeaturesInActvieRecord {
				 get { return "esri_editing_parcel_HUD_SelectFeaturesInActvieRecord"; }
			}
			///<summary>Returns the id string for &quot;Assign Selection To Record&quot; (ArcGIS.Desktop.Editing.AssignFeaturesToActiveRecordHUDContextCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_AssignFeaturesToActiveRecord {
				 get { return "esri_editing_parcel_HUD_AssignFeaturesToActiveRecord"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (ArcGIS.Desktop.Editing.ActiveRecordPropertiesCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_ActiveRecordProperties {
				 get { return "esri_editing_parcel_HUD_ActiveRecordProperties"; }
			}
			///<summary>Returns the id string for &quot;Attribute Table Showing Selection&quot; (ArcGIS.Desktop.Editing.ActiveRecordAttributeTableCommand, Editing)</summary>
			public static string esri_editing_parcel_HUD_ActiveRecordAttributeTable {
				 get { return "esri_editing_parcel_HUD_ActiveRecordAttributeTable"; }
			}
		}
		public static partial class Buttonpalette {
			///<summary>Returns the id string for &quot;Arc Constructors&quot; (Buttonpalette, Editing)</summary>
			public static string esri_editing_ArcConstructorPalette {
				 get { return "esri_editing_ArcConstructorPalette"; }
			}
			///<summary>Returns the id string for &quot;Line Palette&quot; (Buttonpalette, Editing)</summary>
			public static string esri_editing_LinePalette {
				 get { return "esri_editing_LinePalette"; }
			}
			///<summary>Returns the id string for &quot;Point Palette&quot; (Buttonpalette, Editing)</summary>
			public static string esri_editing_PointPalette {
				 get { return "esri_editing_PointPalette"; }
			}
			///<summary>Returns the id string for &quot;Tracing Constructors&quot; (Buttonpalette, Editing)</summary>
			public static string esri_editing_TraceConstructorPalette {
				 get { return "esri_editing_TraceConstructorPalette"; }
			}
			///<summary>Returns the id string for &quot;Select Vertices&quot; (Buttonpalette, Editing)</summary>
			public static string esri_editing_EditVerticesNormalMenu {
				 get { return "esri_editing_EditVerticesNormalMenu"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_editing_construction_point_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_point_tools {
				 get { return "esri_editing_construction_point_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_multipoint_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_multipoint_tools {
				 get { return "esri_editing_construction_multipoint_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_polyline_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_polyline_tools {
				 get { return "esri_editing_construction_polyline_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_polygon_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_polygon_tools {
				 get { return "esri_editing_construction_polygon_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_multipatch_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_multipatch_tools {
				 get { return "esri_editing_construction_multipatch_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_radial_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_radial_tools {
				 get { return "esri_editing_construction_radial_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_annotation_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_annotation_tools {
				 get { return "esri_editing_construction_annotation_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_dimension_tools&quot; (Component, Editing)</summary>
			public static string esri_editing_construction_dimension_tools {
				 get { return "esri_editing_construction_dimension_tools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_placement_tool_options&quot; (ArcGIS.Desktop.Editing.Templates.PlacementToolOptionsViewModel, Editing)</summary>
			public static string esri_editing_placement_tool_options {
				 get { return "esri_editing_placement_tool_options"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shape3d_tool_options&quot; (ArcGIS.Desktop.Editing.Templates.Shape3DToolOptionsViewModel, Editing)</summary>
			public static string esri_editing_shape3d_tool_options {
				 get { return "esri_editing_shape3d_tool_options"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_densify_tool_options&quot; (ArcGIS.Desktop.Editing.DensifyLinesEmbeddableControl, Editing)</summary>
			public static string esri_editing_densify_tool_options {
				 get { return "esri_editing_densify_tool_options"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_twopoint_tool_options&quot; (ArcGIS.Desktop.Editing.TwoPointLineOptionsEmbeddableControl, Editing)</summary>
			public static string esri_editing_twopoint_tool_options {
				 get { return "esri_editing_twopoint_tool_options"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_gdbTopology&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.InspectorTopologyErrorType, Editing)</summary>
			public static string esri_editing_gdbTopology {
				 get { return "esri_editing_gdbTopology"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_gdbParcelFabric&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.InspectorParcelErrorType, Editing)</summary>
			public static string esri_editing_gdbParcelFabric {
				 get { return "esri_editing_gdbParcelFabric"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_gdbGDBValidationErrorType&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.InspectorGeodatabaseFeatureValidationErrorType, Editing)</summary>
			public static string esri_editing_gdbGDBValidationErrorType {
				 get { return "esri_editing_gdbGDBValidationErrorType"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ErrorInspector_PreviewTab&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.PreviewErrorViewModel, Editing)</summary>
			public static string esri_editing_ErrorInspector_PreviewTab {
				 get { return "esri_editing_ErrorInspector_PreviewTab"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ErrorInspector_DetailsTab&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.DetailsViewModel, Editing)</summary>
			public static string esri_editing_ErrorInspector_DetailsTab {
				 get { return "esri_editing_ErrorInspector_DetailsTab"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ErrorInspector_FixTab&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.FixErrorViewModel, Editing)</summary>
			public static string esri_editing_ErrorInspector_FixTab {
				 get { return "esri_editing_ErrorInspector_FixTab"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointIdentity&quot; (Templates.PointIdentityBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointIdentity {
				 get { return "esri_editing_transformation_pointIdentity"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointPrimaryIdentity&quot; (Templates.PointPrimaryIdentityBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointPrimaryIdentity {
				 get { return "esri_editing_transformation_pointPrimaryIdentity"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtEndOfLine&quot; (Templates.PointAtEndOfLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtEndOfLine {
				 get { return "esri_editing_transformation_pointAtEndOfLine"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtBeginningOfLine&quot; (Templates.PointAtBeginningOfLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtBeginningOfLine {
				 get { return "esri_editing_transformation_pointAtBeginningOfLine"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtBeginningOfRadial&quot; (Templates.PointAtBeginningOfRadialBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtBeginningOfRadial {
				 get { return "esri_editing_transformation_pointAtBeginningOfRadial"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtNotEndOfLine&quot; (Templates.PointAtNotEndOfLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtNotEndOfLine {
				 get { return "esri_editing_transformation_pointAtNotEndOfLine"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtNotBeginningOfLine&quot; (Templates.PointAtNotBeginningOfLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtNotBeginningOfLine {
				 get { return "esri_editing_transformation_pointAtNotBeginningOfLine"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtInteriorVertices&quot; (Templates.PointAtInteriorVerticesBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtInteriorVertices {
				 get { return "esri_editing_transformation_pointAtInteriorVertices"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtAllVerticesOfLine&quot; (Templates.PointAtAllVerticesOfLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtAllVerticesOfLine {
				 get { return "esri_editing_transformation_pointAtAllVerticesOfLine"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtIntersectionVerticesOfLine&quot; (Templates.PointAtIntersectionVerticesOfLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtIntersectionVerticesOfLine {
				 get { return "esri_editing_transformation_pointAtIntersectionVerticesOfLine"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_offsetLine_2.2&quot; (Templates.OffsetLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_offsetLine_2__2 {
				 get { return "esri_editing_transformation_offsetLine_2.2"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_offsetPrimaryLine_2.2&quot; (Templates.OffsetPrimaryLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_offsetPrimaryLine_2__2 {
				 get { return "esri_editing_transformation_offsetPrimaryLine_2.2"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_bufferPointToPolygon&quot; (Templates.BufferPointToPolygonBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_bufferPointToPolygon {
				 get { return "esri_editing_transformation_bufferPointToPolygon"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_bufferLineToPolygon&quot; (Templates.BufferLineToPolygonBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_bufferLineToPolygon {
				 get { return "esri_editing_transformation_bufferLineToPolygon"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_bufferPolygonToPolygon&quot; (Templates.BufferPolygonToPolygonBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_bufferPolygonToPolygon {
				 get { return "esri_editing_transformation_bufferPolygonToPolygon"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_twoPointLines&quot; (Templates.TwoPointLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_twoPointLines {
				 get { return "esri_editing_transformation_twoPointLines"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_polygonVertices&quot; (Templates.PolygonVerticesBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_polygonVertices {
				 get { return "esri_editing_transformation_polygonVertices"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtPolygonNotStart&quot; (Templates.PolygonNotStartBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtPolygonNotStart {
				 get { return "esri_editing_transformation_pointAtPolygonNotStart"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtPolygonCentroid&quot; (Templates.PointAtPolygonCentroidBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtPolygonCentroid {
				 get { return "esri_editing_transformation_pointAtPolygonCentroid"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_pointAtPolygonStart&quot; (Templates.PointAtPolygonStartBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_pointAtPolygonStart {
				 get { return "esri_editing_transformation_pointAtPolygonStart"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_polygonBoundary&quot; (Templates.PolygonBoundaryBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_polygonBoundary {
				 get { return "esri_editing_transformation_polygonBoundary"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_polygonBoundaryTwoPoint&quot; (Templates.PolygonBoundaryTwoPointBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_polygonBoundaryTwoPoint {
				 get { return "esri_editing_transformation_polygonBoundaryTwoPoint"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_polygonIdentity&quot; (Templates.PolygonIdentityBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_polygonIdentity {
				 get { return "esri_editing_transformation_polygonIdentity"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_polygonPrimaryIdentity&quot; (Templates.PolygonPrimaryIdentityBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_polygonPrimaryIdentity {
				 get { return "esri_editing_transformation_polygonPrimaryIdentity"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformation_connectionPoint&quot; (Templates.ConnectionPointLineBuilderMethod, Editing)</summary>
			public static string esri_editing_transformation_connectionPoint {
				 get { return "esri_editing_transformation_connectionPoint"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_Raster_ClassifyObjects&quot; (Component, Editing)</summary>
			public static string esri_editing_Raster_ClassifyObjects {
				 get { return "esri_editing_Raster_ClassifyObjects"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_Raster_DetectObjects&quot; (Component, Editing)</summary>
			public static string esri_editing_Raster_DetectObjects {
				 get { return "esri_editing_Raster_DetectObjects"; }
			}
		}
		public static partial class Customcontrol {
			///<summary>Returns the id string for &quot;Topology Options&quot; (ArcGIS.Desktop.Editing.TopologySelectionControlViewModel, Editing)</summary>
			public static string esri_editing_TopologySelectionComboBox {
				 get { return "esri_editing_TopologySelectionComboBox"; }
			}
			///<summary>Returns the id string for &quot;&quot; (ArcGIS.Desktop.Editing.StartSaveDiscardControlViewModel, Editing)</summary>
			public static string esri_editing_StartSaveDiscard {
				 get { return "esri_editing_StartSaveDiscard"; }
			}
			///<summary>Returns the id string for &quot;Map surfaces&quot; (ArcGIS.Desktop.Editing.MapSurfacesViewModel, Editing)</summary>
			public static string esri_editing_mapSurfacesComboBox {
				 get { return "esri_editing_mapSurfacesComboBox"; }
			}
			///<summary>Returns the id string for &quot;Enter Elevation Values&quot; (ElevationViewModel, Editing)</summary>
			public static string esri_editing_ElevationEntryBox {
				 get { return "esri_editing_ElevationEntryBox"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ElevationTools&quot; (ElevationToolsViewModel, Editing)</summary>
			public static string esri_editing_ElevationTools {
				 get { return "esri_editing_ElevationTools"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GroundToGridSplitOpenTrayButton&quot; (ArcGIS.Desktop.Editing.GroundToGridSplitOpenTrayButton, Editing)</summary>
			public static string esri_editing_GroundToGridSplitOpenTrayButton {
				 get { return "esri_editing_GroundToGridSplitOpenTrayButton"; }
			}
			///<summary>Returns the id string for &quot;Active Record&quot; (ArcGIS.Desktop.Editing.ActiveRecordControlViewModel, Editing)</summary>
			public static string esri_editing_activeParcelRecord {
				 get { return "esri_editing_activeParcelRecord"; }
			}
			///<summary>Returns the id string for &quot;Parcel Record Effects&quot; (ArcGIS.Desktop.Editing.RecordEffectsViewModel, Editing)</summary>
			public static string esri_editing_parcelParcelEffectsControl {
				 get { return "esri_editing_parcelParcelEffectsControl"; }
			}
			///<summary>Returns the id string for &quot;Enter Alignment Value&quot; (AlignParcelViewModel, Editing)</summary>
			public static string esri_editing_AlignParcelValueEntry {
				 get { return "esri_editing_AlignParcelValueEntry"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Active Tool&quot; (MapToolDockPaneViewModel, Editing)</summary>
			public static string esri_mapping_MapToolDockPane {
				 get { return "esri_mapping_MapToolDockPane"; }
			}
			///<summary>Returns the id string for &quot;Attributes&quot; (Attributes.AttributesViewModel, Editing)</summary>
			public static string esri_editing_AttributesDockPane {
				 get { return "esri_editing_AttributesDockPane"; }
			}
			///<summary>Returns the id string for &quot;Rematch Addresses&quot; (ArcGIS.Desktop.Editing.RematchAddressesDockPaneViewModel, Editing)</summary>
			public static string esri_editing_rematchAddressesDockPane {
				 get { return "esri_editing_rematchAddressesDockPane"; }
			}
			///<summary>Returns the id string for &quot;Create Features&quot; (CreateFeaturesViewModel, Editing)</summary>
			public static string esri_editing_CreateFeaturesDockPane {
				 get { return "esri_editing_CreateFeaturesDockPane"; }
			}
			///<summary>Returns the id string for &quot;Modify Features&quot; (EditFeaturesViewModel, Editing)</summary>
			public static string esri_editing_EditFeaturesDockPane {
				 get { return "esri_editing_EditFeaturesDockPane"; }
			}
			///<summary>Returns the id string for &quot;Manage Templates&quot; (Templates.ManageTemplatesViewModel, Editing)</summary>
			public static string esri_editing_ManageTemplatesDockPane {
				 get { return "esri_editing_ManageTemplatesDockPane"; }
			}
			///<summary>Returns the id string for &quot;Error Inspector&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.ErrorInspectorViewModel, Editing)</summary>
			public static string esri_editing_ErrorInspectorDockPane {
				 get { return "esri_editing_ErrorInspectorDockPane"; }
			}
			///<summary>Returns the id string for &quot;Manage Records&quot; (RecordSearchViewModel, Editing)</summary>
			public static string esri_editing_ManageRecordsDockPane {
				 get { return "esri_editing_ManageRecordsDockPane"; }
			}
			///<summary>Returns the id string for &quot;Create Record&quot; (CreateRecordPaneViewModel, Editing)</summary>
			public static string esri_editing_NewRecordDockPane {
				 get { return "esri_editing_NewRecordDockPane"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Edit Commands&quot; (EditFeaturesMenu, Editing)</summary>
			public static string esri_editing_EFW_CommandsDynamicMenu {
				 get { return "esri_editing_EFW_CommandsDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Edit Commands&quot; (EditableLayersMenu, Editing)</summary>
			public static string esri_editing_editablityDynamicMenu {
				 get { return "esri_editing_editablityDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Split By Feature&quot; (SplitByFeaturesMenu, Editing)</summary>
			public static string esri_editing_SplitByFeature_DynamicMenu {
				 get { return "esri_editing_SplitByFeature_DynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Topology Commands&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.TopologyRowDynamicMenu, Editing)</summary>
			public static string esri_editing_topology_RowDynamicMenu {
				 get { return "esri_editing_topology_RowDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Topology Fix Commands&quot; (ArcGIS.Desktop.Editing.TopologyFixToolDynamicMenu, Editing)</summary>
			public static string esri_editing_topology_fixTool_DynamicMenu {
				 get { return "esri_editing_topology_fixTool_DynamicMenu"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;Editor tool gallery&quot; (GalleryCommandListViewModel, Editing)</summary>
			public static string esri_EditFeaturesGallery {
				 get { return "esri_EditFeaturesGallery"; }
			}
			///<summary>Returns the id string for &quot;Parcel tool gallery&quot; (ParcelGalleryCommandListViewModel, Editing)</summary>
			public static string esri_ParcelGallery {
				 get { return "esri_ParcelGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Manage Edits&quot; (Group, Editing)</summary>
			public static string esri_editing_Manage {
				 get { return "esri_editing_Manage"; }
			}
			///<summary>Returns the id string for &quot;Manage Edits&quot; (Group, Editing)</summary>
			public static string esri_editing_ManageEditSession {
				 get { return "esri_editing_ManageEditSession"; }
			}
			///<summary>Returns the id string for &quot;Snapping&quot; (Group, Editing)</summary>
			public static string esri_editing_Snapping {
				 get { return "esri_editing_Snapping"; }
			}
			///<summary>Returns the id string for &quot;Features&quot; (Group, Editing)</summary>
			public static string esri_editing_Features {
				 get { return "esri_editing_Features"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Editing)</summary>
			public static string esri_editing_selectionGroup {
				 get { return "esri_editing_selectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Editing)</summary>
			public static string esri_editing_EditGallery {
				 get { return "esri_editing_EditGallery"; }
			}
			///<summary>Returns the id string for &quot;Corrections&quot; (Group, Editing)</summary>
			public static string esri_editing_correctionGroup {
				 get { return "esri_editing_correctionGroup"; }
			}
			///<summary>Returns the id string for &quot;Elevation&quot; (Group, Editing)</summary>
			public static string esri_editing_elevationGroup {
				 get { return "esri_editing_elevationGroup"; }
			}
			///<summary>Returns the id string for &quot;Row&quot; (Group, Editing)</summary>
			public static string esri_editing_tableRowGroup {
				 get { return "esri_editing_tableRowGroup"; }
			}
			///<summary>Returns the id string for &quot;Field&quot; (Group, Editing)</summary>
			public static string esri_editing_tableFieldsGroup {
				 get { return "esri_editing_tableFieldsGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Editing)</summary>
			public static string esri_editing_tableSelectionGroup {
				 get { return "esri_editing_tableSelectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Editing)</summary>
			public static string esri_editing_tableToolsGroup {
				 get { return "esri_editing_tableToolsGroup"; }
			}
			///<summary>Returns the id string for &quot;Relationship&quot; (Group, Editing)</summary>
			public static string esri_editing_tableRelationshipGroup {
				 get { return "esri_editing_tableRelationshipGroup"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Group, Editing)</summary>
			public static string esri_editing_tableExportGroup {
				 get { return "esri_editing_tableExportGroup"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (Group, Editing)</summary>
			public static string esri_editing_tableFilterGroup {
				 get { return "esri_editing_tableFilterGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage Edits&quot; (Group, Editing)</summary>
			public static string esri_editing_parcelManageEditsGroup {
				 get { return "esri_editing_parcelManageEditsGroup"; }
			}
			///<summary>Returns the id string for &quot;Records&quot; (Group, Editing)</summary>
			public static string esri_editing_parcelRecordGroup {
				 get { return "esri_editing_parcelRecordGroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Editing)</summary>
			public static string esri_editing_parcelGallery {
				 get { return "esri_editing_parcelGallery"; }
			}
			///<summary>Returns the id string for &quot;Construct&quot; (Group, Editing)</summary>
			public static string esri_editing_parcelConstructionGroup {
				 get { return "esri_editing_parcelConstructionGroup"; }
			}
			///<summary>Returns the id string for &quot;Alignment&quot; (Group, Editing)</summary>
			public static string esri_editing_parcelAlignment {
				 get { return "esri_editing_parcelAlignment"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_editing_construction_tool_group&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_tool_group {
				 get { return "esri_editing_construction_tool_group"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_point&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_point {
				 get { return "esri_editing_construction_point"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_multipoint&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_multipoint {
				 get { return "esri_editing_construction_multipoint"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_polyline&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_polyline {
				 get { return "esri_editing_construction_polyline"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_polygon&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_polygon {
				 get { return "esri_editing_construction_polygon"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_multipatch&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_multipatch {
				 get { return "esri_editing_construction_multipatch"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_annotation&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_annotation {
				 get { return "esri_editing_construction_annotation"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_construction_dimension&quot; (Category, Editing)</summary>
			public static string esri_editing_construction_dimension {
				 get { return "esri_editing_construction_dimension"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tool_options&quot; (Category, Editing)</summary>
			public static string esri_editing_tool_options {
				 get { return "esri_editing_tool_options"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ErrorInspector_ErrorTypes&quot; (Category, Editing)</summary>
			public static string esri_editing_ErrorInspector_ErrorTypes {
				 get { return "esri_editing_ErrorInspector_ErrorTypes"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ErrorInspector_Tabs&quot; (Category, Editing)</summary>
			public static string esri_editing_ErrorInspector_Tabs {
				 get { return "esri_editing_ErrorInspector_Tabs"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TemplateGroup_BuilderMethods&quot; (Category, Editing)</summary>
			public static string esri_editing_TemplateGroup_BuilderMethods {
				 get { return "esri_editing_TemplateGroup_BuilderMethods"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CommandList&quot; (Category, Editing)</summary>
			public static string esri_editing_CommandList {
				 get { return "esri_editing_CommandList"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_AttributesLayer_Toolbars&quot; (Category, Editing)</summary>
			public static string esri_editing_AttributesLayer_Toolbars {
				 get { return "esri_editing_AttributesLayer_Toolbars"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tableSimplifiedUI&quot; (Category, Editing)</summary>
			public static string esri_editing_tableSimplifiedUI {
				 get { return "esri_editing_tableSimplifiedUI"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;TopologyFixToolOverlayControl_EmbeddableControl&quot; (ArcGIS.Desktop.Internal.Editing.ErrorInspector.TopologyOverlayControlViewModel, Editing)</summary>
			public static string TopologyFixToolOverlayControl_EmbeddableControl {
				 get { return "TopologyFixToolOverlayControl_EmbeddableControl"; }
			}
			///<summary>Returns the id string for &quot;esri_moveable_mapcontrol&quot; (MoveTestViewModel, Editing)</summary>
			public static string esri_moveable_mapcontrol {
				 get { return "esri_moveable_mapcontrol"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templateList&quot; (TemplateListEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_templateList {
				 get { return "esri_editing_templateList"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_attributes&quot; (Attributes.AttributesEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_attributes {
				 get { return "esri_editing_attributes"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_inspector&quot; (Attributes.InspectorEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_inspector {
				 get { return "esri_editing_inspector"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_mergeEmbedded&quot; (MergeEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_mergeEmbedded {
				 get { return "esri_editing_mergeEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_reshapeEmbedded&quot; (ReshapeEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_reshapeEmbedded {
				 get { return "esri_editing_reshapeEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_rightAngleEmbedded&quot; (RightAngleEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_rightAngleEmbedded {
				 get { return "esri_editing_rightAngleEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_splitToolEmbedded&quot; (SplitToolEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_splitToolEmbedded {
				 get { return "esri_editing_splitToolEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_sliceMultipatchEmbedded&quot; (SliceMultipatchEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_sliceMultipatchEmbedded {
				 get { return "esri_editing_sliceMultipatchEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_divideToolEmbedded&quot; (DivideToolEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_divideToolEmbedded {
				 get { return "esri_editing_divideToolEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_moveEmbedded&quot; (MoveEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_moveEmbedded {
				 get { return "esri_editing_moveEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_rotateEmbedded&quot; (RotateEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_rotateEmbedded {
				 get { return "esri_editing_rotateEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_scaleEmbedded&quot; (ScaleEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_scaleEmbedded {
				 get { return "esri_editing_scaleEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_modifyEmbedded&quot; (ModifyEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_modifyEmbedded {
				 get { return "esri_editing_modifyEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_replaceEmbedded&quot; (ReplaceEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_replaceEmbedded {
				 get { return "esri_editing_replaceEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_continueEmbedded&quot; (ContinueEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_continueEmbedded {
				 get { return "esri_editing_continueEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_duplicateEmbedded&quot; (DuplicateVerticalEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_duplicateEmbedded {
				 get { return "esri_editing_duplicateEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_transformEmbedded&quot; (TransformEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_transformEmbedded {
				 get { return "esri_editing_transformEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_alignParcelsEmbedded&quot; (TransformParcelsEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_alignParcelsEmbedded {
				 get { return "esri_editing_alignParcelsEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_clipEmbedded&quot; (ClipEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_clipEmbedded {
				 get { return "esri_editing_clipEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_planarizeEmbedded&quot; (PlarizeEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_planarizeEmbedded {
				 get { return "esri_editing_planarizeEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_moveToEmbedded&quot; (MoveToEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_moveToEmbedded {
				 get { return "esri_editing_moveToEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_explodeEmbedded&quot; (ExplodeEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_explodeEmbedded {
				 get { return "esri_editing_explodeEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_multipatchTextureEmbedded&quot; (MultipatchTextureEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_multipatchTextureEmbedded {
				 get { return "esri_editing_multipatchTextureEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_bufferEmbedded&quot; (BufferEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_bufferEmbedded {
				 get { return "esri_editing_bufferEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_copyParallelEmbedded&quot; (CopyParallelEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_copyParallelEmbedded {
				 get { return "esri_editing_copyParallelEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_extendEmbedded&quot; (ExtendTrimFeaturesEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_extendEmbedded {
				 get { return "esri_editing_extendEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_copyLinesToParcelTypeEmbedded&quot; (ParcelFabric.CopyLinesToParcelTypeEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_copyLinesToParcelTypeEmbedded {
				 get { return "esri_editing_copyLinesToParcelTypeEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_createNewRecordEmbedded&quot; (RecordNewEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_createNewRecordEmbedded {
				 get { return "esri_editing_createNewRecordEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_seqNumEmbedded&quot; (SeqNumEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_seqNumEmbedded {
				 get { return "esri_editing_seqNumEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_offsetEmbedded&quot; (OffsetEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_offsetEmbedded {
				 get { return "esri_editing_offsetEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_lineIntersectionEmbedded&quot; (LineIntersectionEmbeddableControlViewModel, Editing)</summary>
			public static string esri_editing_lineIntersectionEmbedded {
				 get { return "esri_editing_lineIntersectionEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_traverseEmbedded&quot; (TraverseEmbeddableControlViewModel, Editing)</summary>
			public static string esri_traverseEmbedded {
				 get { return "esri_traverseEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_mirrorEmbedded&quot; (MirrorFeaturesEmbeddableControlViewModel, Editing)</summary>
			public static string esri_mirrorEmbedded {
				 get { return "esri_mirrorEmbedded"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_EditingView&quot; (EditingView, Editing)</summary>
			public static string esri_editing_EditingView {
				 get { return "esri_editing_EditingView"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tablePane_state_provider&quot; (ArcGIS.Desktop.Internal.Editing.TableViewStateProvider, Editing)</summary>
			public static string esri_editing_tablePane_state_provider {
				 get { return "esri_editing_tablePane_state_provider"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;esri_editing_EditingPossibleCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_EditingPossibleCondition {
				 get { return "esri_editing_EditingPossibleCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_EditingDoesntRequireStartCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_EditingDoesntRequireStartCondition {
				 get { return "esri_editing_EditingDoesntRequireStartCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_EditingRequiresStartCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_EditingRequiresStartCondition {
				 get { return "esri_editing_EditingRequiresStartCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_EditingCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_EditingCondition {
				 get { return "esri_editing_EditingCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_EditingMapCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_EditingMapCondition {
				 get { return "esri_editing_EditingMapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_DelSelFeaturesShortcutCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_DelSelFeaturesShortcutCondition {
				 get { return "esri_editing_DelSelFeaturesShortcutCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TopologyCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_TopologyCondition {
				 get { return "esri_editing_TopologyCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TopologyGDBCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_TopologyGDBCondition {
				 get { return "esri_editing_TopologyGDBCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TopologyMapCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_TopologyMapCondition {
				 get { return "esri_editing_TopologyMapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ShowTopologyComboCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_ShowTopologyComboCondition {
				 get { return "esri_editing_ShowTopologyComboCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_2DMapCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_2DMapCondition {
				 get { return "esri_editing_2DMapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_3DMapCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_3DMapCondition {
				 get { return "esri_editing_3DMapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ShowEditFeatures&quot; (Condition, Editing)</summary>
			public static string esri_editing_ShowEditFeatures {
				 get { return "esri_editing_ShowEditFeatures"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_activeParcelRecordCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_activeParcelRecordCondition {
				 get { return "esri_editing_activeParcelRecordCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_activeRecordAndParcelPolygonsOrLinesSelectedCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_activeRecordAndParcelPolygonsOrLinesSelectedCondition {
				 get { return "esri_editing_activeRecordAndParcelPolygonsOrLinesSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_activeRecordAndParcelPolygonsSelectedCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_activeRecordAndParcelPolygonsSelectedCondition {
				 get { return "esri_editing_activeRecordAndParcelPolygonsSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_parcelPolygonsSelectedCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_parcelPolygonsSelectedCondition {
				 get { return "esri_editing_parcelPolygonsSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_parcelPolygonOrLinesSelectedCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_parcelPolygonOrLinesSelectedCondition {
				 get { return "esri_editing_parcelPolygonOrLinesSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_parcelToolsVisibleCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_parcelToolsVisibleCondition {
				 get { return "esri_editing_parcelToolsVisibleCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_isSliceVisibleCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_isSliceVisibleCondition {
				 get { return "esri_editing_isSliceVisibleCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_parcel_activeRecordAndFeaturesSelectedCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_parcel_activeRecordAndFeaturesSelectedCondition {
				 get { return "esri_editing_parcel_activeRecordAndFeaturesSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasEditsCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_HasEditsCondition {
				 get { return "esri_editing_HasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CanSaveCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_CanSaveCondition {
				 get { return "esri_editing_CanSaveCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CanDiscardCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_CanDiscardCondition {
				 get { return "esri_editing_CanDiscardCondition"; }
			}
			///<summary>Returns the id string for &quot;ElevationPickerEnabledCondition&quot; (Condition, Editing)</summary>
			public static string ElevationPickerEnabledCondition {
				 get { return "ElevationPickerEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SurfacePickerEnabledCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_SurfacePickerEnabledCondition {
				 get { return "esri_editing_SurfacePickerEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ConstantZEnabledCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_ConstantZEnabledCondition {
				 get { return "esri_editing_ConstantZEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SurfaceZEnabledCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_SurfaceZEnabledCondition {
				 get { return "esri_editing_SurfaceZEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_PointTemplate_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_PointTemplate_condition {
				 get { return "esri_editing_PointTemplate_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_LineSketch_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_LineSketch_condition {
				 get { return "esri_editing_LineSketch_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_traceConstructor_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_traceConstructor_condition {
				 get { return "esri_editing_traceConstructor_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_streamConstructor_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_streamConstructor_condition {
				 get { return "esri_editing_streamConstructor_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_showVertices_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_showVertices_condition {
				 get { return "esri_editing_showVertices_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_streaming_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_streaming_condition {
				 get { return "esri_editing_streaming_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TOCSelectionValidForReconcile_condition&quot; (Condition, Editing)</summary>
			public static string esri_mapping_TOCSelectionValidForReconcile_condition {
				 get { return "esri_mapping_TOCSelectionValidForReconcile_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TOCSelectionValidForReconcileAndNotFeatureService_condition&quot; (Condition, Editing)</summary>
			public static string esri_mapping_TOCSelectionValidForReconcileAndNotFeatureService_condition {
				 get { return "esri_mapping_TOCSelectionValidForReconcileAndNotFeatureService_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TOCSelectionValidForRefreshCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_TOCSelectionValidForRefreshCondition {
				 get { return "esri_editing_TOCSelectionValidForRefreshCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TOCSelectionValidForPost_condition&quot; (Condition, Editing)</summary>
			public static string esri_mapping_TOCSelectionValidForPost_condition {
				 get { return "esri_mapping_TOCSelectionValidForPost_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_reconcileHasConflicts&quot; (Condition, Editing)</summary>
			public static string esri_editing_reconcileHasConflicts {
				 get { return "esri_editing_reconcileHasConflicts"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_DuplicateVerticalToolActive_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_DuplicateVerticalToolActive_condition {
				 get { return "esri_editing_DuplicateVerticalToolActive_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesBuildersPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesBuildersPage_condition {
				 get { return "esri_editing_templatePropertiesBuildersPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesFeaturesPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesFeaturesPage_condition {
				 get { return "esri_editing_templatePropertiesFeaturesPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesAssociationsPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesAssociationsPage_condition {
				 get { return "esri_editing_templatePropertiesAssociationsPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesRelationshipsPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesRelationshipsPage_condition {
				 get { return "esri_editing_templatePropertiesRelationshipsPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesAttributesPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesAttributesPage_condition {
				 get { return "esri_editing_templatePropertiesAttributesPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesAnnotationPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesAnnotationPage_condition {
				 get { return "esri_editing_templatePropertiesAnnotationPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesDimensionPage_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_templatePropertiesDimensionPage_condition {
				 get { return "esri_editing_templatePropertiesDimensionPage_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SelectTopologyToolActive_condtion&quot; (Condition, Editing)</summary>
			public static string esri_editing_SelectTopologyToolActive_condtion {
				 get { return "esri_editing_SelectTopologyToolActive_condtion"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_slice_move_visible_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_slice_move_visible_condition {
				 get { return "esri_editing_slice_move_visible_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_slice_rotate_visible_condition&quot; (Condition, Editing)</summary>
			public static string esri_editing_slice_rotate_visible_condition {
				 get { return "esri_editing_slice_rotate_visible_condition"; }
			}
			///<summary>Returns the id string for &quot;The table is open.&quot; (Condition, Editing)</summary>
			public static string esri_editing_tableOpenCondition {
				 get { return "esri_editing_tableOpenCondition"; }
			}
			///<summary>Returns the id string for &quot;The table has a spatial source.&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_spatialCondition {
				 get { return "esri_editing_tables_spatialCondition"; }
			}
			///<summary>Returns the id string for &quot;The table has selected rows.&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_selectedRowsCondition {
				 get { return "esri_editing_tables_selectedRowsCondition"; }
			}
			///<summary>Returns the id string for &quot;The table has a current row.&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_currentRowCondition {
				 get { return "esri_editing_tables_currentRowCondition"; }
			}
			///<summary>Returns the id string for &quot;The table has attachments&quot; (Condition, Editing)</summary>
			public static string esri_editing_tablePane_AttachmentsCondition {
				 get { return "esri_editing_tablePane_AttachmentsCondition"; }
			}
			///<summary>Returns the id string for &quot;The table can interact with the active map view.&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_canInteractWithMapViewCondition {
				 get { return "esri_editing_tables_canInteractWithMapViewCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_spatialSelectedRowsCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_spatialSelectedRowsCondition {
				 get { return "esri_editing_tables_spatialSelectedRowsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_spatialCurrentRowCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_spatialCurrentRowCondition {
				 get { return "esri_editing_tables_spatialCurrentRowCondition"; }
			}
			///<summary>Returns the id string for &quot;The active field in the table can be deleted.&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_canDeleteFieldCondition {
				 get { return "esri_editing_tables_canDeleteFieldCondition"; }
			}
			///<summary>Returns the id string for &quot;The table has an active field (column.)&quot; (Condition, Editing)</summary>
			public static string esri_editing_tables_activeFieldCondition {
				 get { return "esri_editing_tables_activeFieldCondition"; }
			}
			///<summary>Returns the id string for &quot;The table has an active numeric field (column.)&quot; (Condition, Editing)</summary>
			public static string esri_editing_tablesTablePane_isNumericFieldCondition {
				 get { return "esri_editing_tablesTablePane_isNumericFieldCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_FeatureLayerRematchAddressesCondition&quot; (Condition, Editing)</summary>
			public static string esri_mapping_FeatureLayerRematchAddressesCondition {
				 get { return "esri_mapping_FeatureLayerRematchAddressesCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasParcelFabricCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_HasParcelFabricCondition {
				 get { return "esri_editing_HasParcelFabricCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_FalseCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_FalseCondition {
				 get { return "esri_editing_FalseCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ReviewerHasLicenseCondition&quot; (Condition, Editing)</summary>
			public static string esri_editing_ReviewerHasLicenseCondition {
				 get { return "esri_editing_ReviewerHasLicenseCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Editing&quot; (EditingModule, Editing)</summary>
			public static string esri_editing_EditingModule {
				 get { return "esri_editing_EditingModule"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_EditingModule_loader&quot; (EditingModuleLoader, Editing)</summary>
			public static string esri_editing_EditingModule_loader {
				 get { return "esri_editing_EditingModule_loader"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Editing&quot; (OptionsViewModel, Editing)</summary>
			public static string esri_editing_editingPropertyPage {
				 get { return "esri_editing_editingPropertyPage"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Editor Settings&quot; (Sheet, Editing)</summary>
			public static string esri_editing_settingsPropertySheet {
				 get { return "esri_editing_settingsPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Feature Template Properties&quot; (Sheet, Editing)</summary>
			public static string esri_editing_templatePropertySheet {
				 get { return "esri_editing_templatePropertySheet"; }
			}
		}
		public static partial class Shortcuttable {
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_tablePane&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_tablePane {
				 get { return "esri_editing_shortcutList_tablePane"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_topologySource_errorInspector&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_topologySource_errorInspector {
				 get { return "esri_editing_shortcutList_topologySource_errorInspector"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_SketchLinesAndPolys&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_SketchLinesAndPolys {
				 get { return "esri_editing_shortcutList_SketchLinesAndPolys"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_SketchCircle&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_SketchCircle {
				 get { return "esri_editing_shortcutList_SketchCircle"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_SketchRectangle&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_SketchRectangle {
				 get { return "esri_editing_shortcutList_SketchRectangle"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_SketchEllipse&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_SketchEllipse {
				 get { return "esri_editing_shortcutList_SketchEllipse"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Tracing&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Tracing {
				 get { return "esri_editing_shortcutList_Tracing"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Streaming&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Streaming {
				 get { return "esri_editing_shortcutList_Streaming"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_TwoPointLines&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_TwoPointLines {
				 get { return "esri_editing_shortcutList_TwoPointLines"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_CanStream&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_CanStream {
				 get { return "esri_editing_shortcutList_CanStream"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_CanShowVertices&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_CanShowVertices {
				 get { return "esri_editing_shortcutList_CanShowVertices"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_AnnoSketches&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_AnnoSketches {
				 get { return "esri_editing_shortcutList_AnnoSketches"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_DimensionSketches&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_DimensionSketches {
				 get { return "esri_editing_shortcutList_DimensionSketches"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_SliceMultipatch&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_SliceMultipatch {
				 get { return "esri_editing_shortcutList_SliceMultipatch"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_AnnoTextBox&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_AnnoTextBox {
				 get { return "esri_editing_shortcutList_AnnoTextBox"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_FindTextCycle&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_FindTextCycle {
				 get { return "esri_editing_shortcutList_FindTextCycle"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_FindTextAndFollowOptions&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_FindTextAndFollowOptions {
				 get { return "esri_editing_shortcutList_FindTextAndFollowOptions"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Sketches&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Sketches {
				 get { return "esri_editing_shortcutList_Sketches"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_ConstantZPlane&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_ConstantZPlane {
				 get { return "esri_editing_shortcutList_ConstantZPlane"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_QuickSelect&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_QuickSelect {
				 get { return "esri_editing_shortcutList_QuickSelect"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_PushPullTool&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_PushPullTool {
				 get { return "esri_editing_shortcutList_PushPullTool"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcuList_PushPullTool_Face&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcuList_PushPullTool_Face {
				 get { return "esri_editing_shortcuList_PushPullTool_Face"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_PushPullTool_Sketch&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_PushPullTool_Sketch {
				 get { return "esri_editing_shortcutList_PushPullTool_Sketch"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_EditVertices&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_EditVertices {
				 get { return "esri_editing_shortcutList_EditVertices"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Rotate&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Rotate {
				 get { return "esri_editing_shortcutList_Rotate"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Scale&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Scale {
				 get { return "esri_editing_shortcutList_Scale"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Fillet&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Fillet {
				 get { return "esri_editing_shortcutList_Fillet"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shorcutList_SingleClickMirror&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shorcutList_SingleClickMirror {
				 get { return "esri_editing_shorcutList_SingleClickMirror"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_DistanceDistance&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_DistanceDistance {
				 get { return "esri_editing_shortcutList_DistanceDistance"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_DirectionDistance&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_DirectionDistance {
				 get { return "esri_editing_shortcutList_DirectionDistance"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_DirectionDirection&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_DirectionDirection {
				 get { return "esri_editing_shortcutList_DirectionDirection"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_Intersection&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_Intersection {
				 get { return "esri_editing_shortcutList_Intersection"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_LineIntersection&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_LineIntersection {
				 get { return "esri_editing_shortcutList_LineIntersection"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_shortcutList_geometryView&quot; (Shortcuttable, Editing)</summary>
			public static string esri_editing_shortcutList_geometryView {
				 get { return "esri_editing_shortcutList_geometryView"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Favorites&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupFavorites2d {
				 get { return "esri_editing_toolGroupFavorites2d"; }
			}
			///<summary>Returns the id string for &quot;Favorites&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupFavorites3d {
				 get { return "esri_editing_toolGroupFavorites3d"; }
			}
			///<summary>Returns the id string for &quot;Favorites&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupParcelFavorites2d {
				 get { return "esri_editing_toolGroupParcelFavorites2d"; }
			}
			///<summary>Returns the id string for &quot;Favorites&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupParcelFavorites3d {
				 get { return "esri_editing_toolGroupParcelFavorites3d"; }
			}
			///<summary>Returns the id string for &quot;Alignment&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupAlignment {
				 get { return "esri_editing_toolGroupAlignment"; }
			}
			///<summary>Returns the id string for &quot;Reshape&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupReshape {
				 get { return "esri_editing_toolGroupReshape"; }
			}
			///<summary>Returns the id string for &quot;Divide&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupDivide {
				 get { return "esri_editing_toolGroupDivide"; }
			}
			///<summary>Returns the id string for &quot;Construct&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupConstruct {
				 get { return "esri_editing_toolGroupConstruct"; }
			}
			///<summary>Returns the id string for &quot;Attributes&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupAttributes {
				 get { return "esri_editing_toolGroupAttributes"; }
			}
			///<summary>Returns the id string for &quot;COGO&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupCogo {
				 get { return "esri_editing_toolGroupCogo"; }
			}
			///<summary>Returns the id string for &quot;Validate&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupValidate {
				 get { return "esri_editing_toolGroupValidate"; }
			}
			///<summary>Returns the id string for &quot;Parcel&quot; (Menu, Editing)</summary>
			public static string esri_editing_toolGroupParcel {
				 get { return "esri_editing_toolGroupParcel"; }
			}
			///<summary>Returns the id string for &quot;All Tools&quot; (Menu, Editing)</summary>
			public static string esri_editing_AllToolsGroupOrder {
				 get { return "esri_editing_AllToolsGroupOrder"; }
			}
			///<summary>Returns the id string for &quot;Grid&quot; (Menu, Editing)</summary>
			public static string esri_editing_GridContextMenu {
				 get { return "esri_editing_GridContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Associations&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_AssociationContextMenu {
				 get { return "esri_editing_Attributes_AssociationContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Feature&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_Layers_FeatureContextMenu {
				 get { return "esri_editing_Attributes_Layers_FeatureContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Feature&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_Selection_FeatureContextMenu {
				 get { return "esri_editing_Attributes_Selection_FeatureContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Feature&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_NonFeatureRowContextMenu {
				 get { return "esri_editing_Attributes_NonFeatureRowContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_LayerContextMenu {
				 get { return "esri_editing_Attributes_LayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Standalone Table&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_TableContextMenu {
				 get { return "esri_editing_Attributes_TableContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Feature&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_RelatedFeatureContextMenu {
				 get { return "esri_editing_Attributes_RelatedFeatureContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Feature&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_RelatedNonFeatureRowContextMenu {
				 get { return "esri_editing_Attributes_RelatedNonFeatureRowContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Relationship&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_RelationshipLayerContextMenu {
				 get { return "esri_editing_Attributes_RelationshipLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Relationship&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_RelationshipStandaloneTableContextMenu {
				 get { return "esri_editing_Attributes_RelationshipStandaloneTableContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Relationship&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_RelationshipNotInMapContextMenu {
				 get { return "esri_editing_Attributes_RelationshipNotInMapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_SimpleSelectionContextMenu {
				 get { return "esri_editing_Attributes_SimpleSelectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Editing)</summary>
			public static string esri_editing_SplitbyFeature_SimpleSelectionContextMenu {
				 get { return "esri_editing_SplitbyFeature_SimpleSelectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Point Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_PointSketchContextMenu {
				 get { return "esri_editing_PointSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Point Sketch Context Menu for AnnotationTemplate&quot; (Menu, Editing)</summary>
			public static string esri_editing_PointSketchContextMenuAnnotation {
				 get { return "esri_editing_PointSketchContextMenuAnnotation"; }
			}
			///<summary>Returns the id string for &quot;Point Sketch Context Menu for AnnotationTemplate&quot; (Menu, Editing)</summary>
			public static string esri_editing_PointSketchContextMenuAnnotationOptions {
				 get { return "esri_editing_PointSketchContextMenuAnnotationOptions"; }
			}
			///<summary>Returns the id string for &quot;Point Sketch Context Menu for Fillet&quot; (Menu, Editing)</summary>
			public static string esri_editing_PointSketchContextMenuFillet {
				 get { return "esri_editing_PointSketchContextMenuFillet"; }
			}
			///<summary>Returns the id string for &quot;Set Attributes Pane Playback Speed&quot; (Menu, Editing)</summary>
			public static string esri_editing_Attributes_PlaybackSpeedMenu {
				 get { return "esri_editing_Attributes_PlaybackSpeedMenu"; }
			}
			///<summary>Returns the id string for &quot;Multipoint Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_MultipointSketchContextMenu {
				 get { return "esri_editing_MultipointSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Dimension Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_DimensionSketchContextMenu {
				 get { return "esri_editing_DimensionSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Multipatch Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_MultipatchSketchContextMenu {
				 get { return "esri_editing_MultipatchSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Line/Polygon Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_SketchContextMenu {
				 get { return "esri_editing_SketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Midpoint Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_MidpointSketchContextMenu {
				 get { return "esri_editing_MidpointSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Line Sketch Context Menu for Annotation Template&quot; (Menu, Editing)</summary>
			public static string esri_editing_SketchContextMenuAnnotation {
				 get { return "esri_editing_SketchContextMenuAnnotation"; }
			}
			///<summary>Returns the id string for &quot;Sketch Context Menu (Multiaptch)&quot; (Menu, Editing)</summary>
			public static string esri_editing_menu_PushPullTool {
				 get { return "esri_editing_menu_PushPullTool"; }
			}
			///<summary>Returns the id string for &quot;Sketch Context Menu (Multipatch)&quot; (Menu, Editing)</summary>
			public static string esri_editing_menu_PushPullTool_Modify {
				 get { return "esri_editing_menu_PushPullTool_Modify"; }
			}
			///<summary>Returns the id string for &quot;Sketch Context Menu (Sketch)&quot; (Menu, Editing)</summary>
			public static string esri_editing_menu_PushPullTool_Sketch {
				 get { return "esri_editing_menu_PushPullTool_Sketch"; }
			}
			///<summary>Returns the id string for &quot;Sketch Context Menu (Multipatch face)&quot; (Menu, Editing)</summary>
			public static string esri_editing_menu_PushPullTool_Face {
				 get { return "esri_editing_menu_PushPullTool_Face"; }
			}
			///<summary>Returns the id string for &quot;Segment Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_SegmentSketchContextMenu {
				 get { return "esri_editing_SegmentSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Vertex Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_VertexSketchContextMenu {
				 get { return "esri_editing_VertexSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Line/Polygon Tracing Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_TracingSketchContextMenu {
				 get { return "esri_editing_TracingSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Line/Polygon Streaming Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_StreamingSketchContextMenu {
				 get { return "esri_editing_StreamingSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Follow&quot; (Menu, Editing)</summary>
			public static string esri_editing_FollowFeatureMenu {
				 get { return "esri_editing_FollowFeatureMenu"; }
			}
			///<summary>Returns the id string for &quot;Curvature&quot; (Menu, Editing)</summary>
			public static string esri_editing_annotationCurvatureMenu {
				 get { return "esri_editing_annotationCurvatureMenu"; }
			}
			///<summary>Returns the id string for &quot;Annotation Edit tool Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_AnnotationEditContextMenu {
				 get { return "esri_editing_AnnotationEditContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Dimension Edit tool Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_DimensionEditContextMenu {
				 get { return "esri_editing_DimensionEditContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Circle Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_CircleToolContextMenu {
				 get { return "esri_editing_CircleToolContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Rectangle/Ellipse Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_RectangleToolContextMenu {
				 get { return "esri_editing_RectangleToolContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Rectangle/Ellipse Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_EllipseToolContextMenu {
				 get { return "esri_editing_EllipseToolContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Three Point Circle Sketch Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_ThreePointCircleSketchContextMenu {
				 get { return "esri_editing_ThreePointCircleSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Distance-Distance Constructor Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_DistanceDistanceContextMenu {
				 get { return "esri_editing_DistanceDistanceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Direction-Distance Constructor Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_DirectionDistanceContextMenu {
				 get { return "esri_editing_DirectionDistanceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Direction-Direction Constructor Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_DirectionDirectionContextMenu {
				 get { return "esri_editing_DirectionDirectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Intersection Constructor Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_IntersectionContextMenu {
				 get { return "esri_editing_IntersectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Change Segment&quot; (Menu, Editing)</summary>
			public static string esri_editing_ChangeSegmentMenu {
				 get { return "esri_editing_ChangeSegmentMenu"; }
			}
			///<summary>Returns the id string for &quot;Part&quot; (Menu, Editing)</summary>
			public static string esri_editing_PartMenu {
				 get { return "esri_editing_PartMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_ActiveTemplate_AttributesContextMenu {
				 get { return "esri_editing_ActiveTemplate_AttributesContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_CFW_FeatureTemplateContextMenu {
				 get { return "esri_editing_CFW_FeatureTemplateContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_CFW_GroupTemplateContextMenu {
				 get { return "esri_editing_CFW_GroupTemplateContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CFW_TemplateFolderContextMenu&quot; (Menu, Editing)</summary>
			public static string esri_editing_CFW_TemplateFolderContextMenu {
				 get { return "esri_editing_CFW_TemplateFolderContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CFW_TemplateFolderRootContextMenu&quot; (Menu, Editing)</summary>
			public static string esri_editing_CFW_TemplateFolderRootContextMenu {
				 get { return "esri_editing_CFW_TemplateFolderRootContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CFW_TemplateWithinFolderContextMenu&quot; (Menu, Editing)</summary>
			public static string esri_editing_CFW_TemplateWithinFolderContextMenu {
				 get { return "esri_editing_CFW_TemplateWithinFolderContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_MFT_FeatureTemplateContextMenu {
				 get { return "esri_editing_MFT_FeatureTemplateContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_MFT_GroupTemplateContextMenu {
				 get { return "esri_editing_MFT_GroupTemplateContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Template Tool Context Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_TemplateToolContextMenu {
				 get { return "esri_editing_TemplateToolContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_CFW_MpModelSelectorContextMenu {
				 get { return "esri_editing_CFW_MpModelSelectorContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_ActiveTemplate_MpModelsContextMenu {
				 get { return "esri_editing_ActiveTemplate_MpModelsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_ActiveTemplate_GroupTemplateContextMenu {
				 get { return "esri_editing_ActiveTemplate_GroupTemplateContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (Menu, Editing)</summary>
			public static string esri_editing_MFT_MapContextMenu {
				 get { return "esri_editing_MFT_MapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Group Layer&quot; (Menu, Editing)</summary>
			public static string esri_editing_MFT_LayerContainerContextMenu {
				 get { return "esri_editing_MFT_LayerContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Menu, Editing)</summary>
			public static string esri_editing_MFT_LayerContextMenu {
				 get { return "esri_editing_MFT_LayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Table&quot; (Menu, Editing)</summary>
			public static string esri_editing_MFT_StandaloneTableContextMenu {
				 get { return "esri_editing_MFT_StandaloneTableContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing Options&quot; (Menu, Editing)</summary>
			public static string esri_editing_SystemCommandsBurgerMenu {
				 get { return "esri_editing_SystemCommandsBurgerMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing Options&quot; (Menu, Editing)</summary>
			public static string esri_editing_FavoriteCommandsBurgerMenu {
				 get { return "esri_editing_FavoriteCommandsBurgerMenu"; }
			}
			///<summary>Returns the id string for &quot;Edit Commands&quot; (Menu, Editing)</summary>
			public static string esri_editing_EFW_CommandsMenu {
				 get { return "esri_editing_EFW_CommandsMenu"; }
			}
			///<summary>Returns the id string for &quot;Select/Deselect&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableSelectionMenu {
				 get { return "esri_editing_tableSelectionMenu"; }
			}
			///<summary>Returns the id string for &quot;Sort&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableSortMenu {
				 get { return "esri_editing_tableSortMenu"; }
			}
			///<summary>Returns the id string for &quot;Column&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableColumnContextMenu {
				 get { return "esri_editing_tableColumnContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Row&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableAllRowContextMenu {
				 get { return "esri_editing_tableAllRowContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Row&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableSelectedRowContextMenu {
				 get { return "esri_editing_tableSelectedRowContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Joins&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableJoinsMenu {
				 get { return "esri_editing_tableJoinsMenu"; }
			}
			///<summary>Returns the id string for &quot;Relates&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableRelatesMenu {
				 get { return "esri_editing_tableRelatesMenu"; }
			}
			///<summary>Returns the id string for &quot;Cell&quot; (Menu, Editing)</summary>
			public static string esri_editing_tableCellContextMenu {
				 get { return "esri_editing_tableCellContextMenu"; }
			}
			///<summary>Returns the id string for &quot;RematchAddress&quot; (Menu, Editing)</summary>
			public static string esri_editing_rematchAddressContextMenu {
				 get { return "esri_editing_rematchAddressContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Predefined Queries&quot; (Menu, Editing)</summary>
			public static string esri_editing_rematchQueriesMenu {
				 get { return "esri_editing_rematchQueriesMenu"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Menu, Editing)</summary>
			public static string esri_editing_data_subtypeGroupLayer {
				 get { return "esri_editing_data_subtypeGroupLayer"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Menu, Editing)</summary>
			public static string esri_editing_data {
				 get { return "esri_editing_data"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Menu, Editing)</summary>
			public static string esri_editing_standalonetable_data_menu {
				 get { return "esri_editing_standalonetable_data_menu"; }
			}
			///<summary>Returns the id string for &quot;Traverse&quot; (Menu, Editing)</summary>
			public static string esri_editing_traverseMenu {
				 get { return "esri_editing_traverseMenu"; }
			}
			///<summary>Returns the id string for &quot;Traverse Operations&quot; (Menu, Editing)</summary>
			public static string esri_editing_traverseRowContextMenu {
				 get { return "esri_editing_traverseRowContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_errorInspectorRowContextMenu {
				 get { return "esri_editing_errorInspectorRowContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_errorInspectorRowContextMenu_topologySource {
				 get { return "esri_editing_errorInspectorRowContextMenu_topologySource"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (Menu, Editing)</summary>
			public static string esri_editing_errorInspectorRowContextMenu_geodatabaseFeatureValidationSource {
				 get { return "esri_editing_errorInspectorRowContextMenu_geodatabaseFeatureValidationSource"; }
			}
			///<summary>Returns the id string for &quot;Topology Options&quot; (Menu, Editing)</summary>
			public static string esri_editing_burgerMenu_topologySource_errorInspector {
				 get { return "esri_editing_burgerMenu_topologySource_errorInspector"; }
			}
			///<summary>Returns the id string for &quot;Geodatabase Feature Validation Options&quot; (Menu, Editing)</summary>
			public static string esri_editing_burgerMenu_geodatabaseFeatureValidationSource_errorInspector {
				 get { return "esri_editing_burgerMenu_geodatabaseFeatureValidationSource_errorInspector"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Larger Than Cluster Tolerance&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleFeatureLargerThanClusterToleranceContextMenu {
				 get { return "esri_editing_topology_RuleFeatureLargerThanClusterToleranceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Have Gaps&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaNoGapsContextMenu {
				 get { return "esri_editing_topology_RuleAreaNoGapsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Overlap&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaNoOverlapContextMenu {
				 get { return "esri_editing_topology_RuleAreaNoOverlapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Covered By Feature Class Of&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaCoveredByAreaClassContextMenu {
				 get { return "esri_editing_topology_RuleAreaCoveredByAreaClassContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Cover Each Other&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaAreaCoverEachOtherContextMenu {
				 get { return "esri_editing_topology_RuleAreaAreaCoverEachOtherContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Covered By&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaCoveredByAreaContextMenu {
				 get { return "esri_editing_topology_RuleAreaCoveredByAreaContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Overlap With&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaNoOverlapAreaContextMenu {
				 get { return "esri_editing_topology_RuleAreaNoOverlapAreaContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Contains One Point&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaContainOnePointContextMenu {
				 get { return "esri_editing_topology_RuleAreaContainOnePointContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Boundary Must be Covered By&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaAreaBoundaryCoveredByLineContextMenu {
				 get { return "esri_editing_topology_RuleAreaAreaBoundaryCoveredByLineContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Area Boundary Must Be Covered By Boundary Of&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaBoundaryCoveredByAreaBoundaryContextMenu {
				 get { return "esri_editing_topology_RuleAreaBoundaryCoveredByAreaBoundaryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Contains Point&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleAreaContainPointContextMenu {
				 get { return "esri_editing_topology_RuleAreaContainPointContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Covered By Boundary Of&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineCoveredByAreaBoundaryOfContextMenu {
				 get { return "esri_editing_topology_RuleLineCoveredByAreaBoundaryOfContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Inside&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineInsideAreaContextMenu {
				 get { return "esri_editing_topology_RuleLineInsideAreaContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Overlap&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoOverlapContextMenu {
				 get { return "esri_editing_topology_RuleLineNoOverlapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Intersect&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoIntersectionContextMenu {
				 get { return "esri_editing_topology_RuleLineNoIntersectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Have Dangles&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoDanglesContextMenu {
				 get { return "esri_editing_topology_RuleLineNoDanglesContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Have Pseudo Nodes&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoPseudosContextMenu {
				 get { return "esri_editing_topology_RuleLineNoPseudosContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Covered By Feature Class Of&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineCoveredByLineClassContextMenu {
				 get { return "esri_editing_topology_RuleLineCoveredByLineClassContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Overlap With&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoOverlapLineContextMenu {
				 get { return "esri_editing_topology_RuleLineNoOverlapLineContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Self-Overlap&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoSelfOverlapContextMenu {
				 get { return "esri_editing_topology_RuleLineNoSelfOverlapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Self-Intersect&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoSelfIntersectContextMenu {
				 get { return "esri_editing_topology_RuleLineNoSelfIntersectContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Self-Intersect (Point)&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoSelfIntersect_PointErrorContextMenu {
				 get { return "esri_editing_topology_RuleLineNoSelfIntersect_PointErrorContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Intersect Or Touch Interior&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoIntersectOrInteriorTouchContextMenu {
				 get { return "esri_editing_topology_RuleLineNoIntersectOrInteriorTouchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Intersect Or Touch Interior (Point)&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoIntersectOrInteriorTouch_PointErrorContextMenu {
				 get { return "esri_editing_topology_RuleLineNoIntersectOrInteriorTouch_PointErrorContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Intersect Or Touch Interior (Line)&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoIntersectOrInteriorTouch_LineErrorContextMenu {
				 get { return "esri_editing_topology_RuleLineNoIntersectOrInteriorTouch_LineErrorContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Endpoint Must Be Covered By&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineEndpointCoveredByPointContextMenu {
				 get { return "esri_editing_topology_RuleLineEndpointCoveredByPointContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Single Part&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoMultipartContextMenu {
				 get { return "esri_editing_topology_RuleLineNoMultipartContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Intersect With&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoIntersectLineContextMenu {
				 get { return "esri_editing_topology_RuleLineNoIntersectLineContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Not Intersect Or Touch Interior With&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RuleLineNoIntersectOrInteriorTouchLineContextMenu {
				 get { return "esri_editing_topology_RuleLineNoIntersectOrInteriorTouchLineContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Covered By Boundary Of&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RulePointCoveredByAreaBoundaryContextMenu {
				 get { return "esri_editing_topology_RulePointCoveredByAreaBoundaryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Must Be Properly Inside&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RulePointProperlyInsideAreaContextMenu {
				 get { return "esri_editing_topology_RulePointProperlyInsideAreaContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Point Must Be Covered By Line&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RulePointCoveredByLineContextMenu {
				 get { return "esri_editing_topology_RulePointCoveredByLineContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Point Must Be Covered By Endpoint Of&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RulePointCoveredByEndPointContextMenu {
				 get { return "esri_editing_topology_RulePointCoveredByEndPointContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Point Must Be Disjoint&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RulePointDisjointContextMenu {
				 get { return "esri_editing_topology_RulePointDisjointContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Point Must Coincide With&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_RulePointCoincidePointContextMenu {
				 get { return "esri_editing_topology_RulePointCoincidePointContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Fix Tool&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_FixToolContextMenu {
				 get { return "esri_editing_topology_FixToolContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Parcels Must Have A Record&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_PRTNonEmptyRecordIdContextMenu {
				 get { return "esri_editing_topology_PRTNonEmptyRecordIdContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Editing GDB Topology Error Parcel Must Have Non-empty Record ID&quot; (Menu, Editing)</summary>
			public static string esri_editing_topology_PRTNonEmptyPolygonRecordIdContextMenu {
				 get { return "esri_editing_topology_PRTNonEmptyPolygonRecordIdContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Mange Records&quot; (Menu, Editing)</summary>
			public static string esri_editing_ParcelManageRecordsPaneContextMenu {
				 get { return "esri_editing_ParcelManageRecordsPaneContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Parcel HUD&quot; (Menu, Editing)</summary>
			public static string esri_editing_ParcelHUDActiveRecordContextMenu {
				 get { return "esri_editing_ParcelHUDActiveRecordContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Attribute Transfer Menu&quot; (Menu, Editing)</summary>
			public static string esri_editing_attributeTransferContextMenu {
				 get { return "esri_editing_attributeTransferContextMenu"; }
			}
		}
		public static partial class Minitoolbar {
			///<summary>Returns the id string for &quot;esri_editing_GridToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GridToolbar {
				 get { return "esri_editing_GridToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SegmentSketchContextToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_SegmentSketchContextToolbar {
				 get { return "esri_editing_SegmentSketchContextToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_StraightAnnoSketchToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_StraightAnnoSketchToolbar {
				 get { return "esri_editing_StraightAnnoSketchToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SegmentSketchFinishClearContextToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_SegmentSketchFinishClearContextToolbar {
				 get { return "esri_editing_SegmentSketchFinishClearContextToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_Attributes_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_Attributes_Toolbar {
				 get { return "esri_editing_Attributes_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_Raster_Attributes_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_Raster_Attributes_Toolbar {
				 get { return "esri_editing_Raster_Attributes_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ManageTemplatesToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_ManageTemplatesToolbar {
				 get { return "esri_editing_ManageTemplatesToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Points_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Points_Toolbar {
				 get { return "esri_editing_GeometryInspector_Points_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_MultiPoints_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_MultiPoints_Toolbar {
				 get { return "esri_editing_GeometryInspector_MultiPoints_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Lines_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Lines_Toolbar {
				 get { return "esri_editing_GeometryInspector_Lines_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Polygons_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Polygons_Toolbar {
				 get { return "esri_editing_GeometryInspector_Polygons_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Multipatches_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Multipatches_Toolbar {
				 get { return "esri_editing_GeometryInspector_Multipatches_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Annotation_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Annotation_Toolbar {
				 get { return "esri_editing_GeometryInspector_Annotation_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Dimensions_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Dimensions_Toolbar {
				 get { return "esri_editing_GeometryInspector_Dimensions_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_GeometryInspector_Sketch_Toolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_GeometryInspector_Sketch_Toolbar {
				 get { return "esri_editing_GeometryInspector_Sketch_Toolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_MultipointContextToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_MultipointContextToolbar {
				 get { return "esri_editing_MultipointContextToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SketchToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_SketchToolbar {
				 get { return "esri_editing_SketchToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SketchUtilityToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_SketchUtilityToolbar {
				 get { return "esri_editing_SketchUtilityToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TextEditToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_TextEditToolbar {
				 get { return "esri_editing_TextEditToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_DimensionEditToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_DimensionEditToolbar {
				 get { return "esri_editing_DimensionEditToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_FollowFeatureTextEditToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_FollowFeatureTextEditToolbar {
				 get { return "esri_editing_FollowFeatureTextEditToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ModifyEdgeSketchToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_ModifyEdgeSketchToolbar {
				 get { return "esri_editing_ModifyEdgeSketchToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_MoveToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_MoveToolbar {
				 get { return "esri_editing_MoveToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_MoveEdgeToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_MoveEdgeToolbar {
				 get { return "esri_editing_MoveEdgeToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_MoveUtilityToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_MoveUtilityToolbar {
				 get { return "esri_editing_MoveUtilityToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_toolbar_PushPullTool&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_toolbar_PushPullTool {
				 get { return "esri_editing_toolbar_PushPullTool"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_toolbar_TexturingTool&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_toolbar_TexturingTool {
				 get { return "esri_editing_toolbar_TexturingTool"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_toolbar_OffsetTool&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_toolbar_OffsetTool {
				 get { return "esri_editing_toolbar_OffsetTool"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_toolbar_SliceMultipatchTool&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_toolbar_SliceMultipatchTool {
				 get { return "esri_editing_toolbar_SliceMultipatchTool"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_LineCircleToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_LineCircleToolbar {
				 get { return "esri_editing_LineCircleToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_PolygonCircleToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_PolygonCircleToolbar {
				 get { return "esri_editing_PolygonCircleToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_CreatePointsToolbar&quot; (Minitoolbar, Editing)</summary>
			public static string esri_editing_CreatePointsToolbar {
				 get { return "esri_editing_CreatePointsToolbar"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Grid&quot; (GridSettingsViewModel, Editing)</summary>
			public static string esri_editing_GridPropertyPage {
				 get { return "esri_editing_GridPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Annotation&quot; (AnnotationSettingsViewModel, Editing)</summary>
			public static string esri_editing_AnnotationPropertyPage {
				 get { return "esri_editing_AnnotationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Field Mapping&quot; (FieldMappingsViewModel, Editing)</summary>
			public static string esri_editing_FieldMappingsPropertyPage {
				 get { return "esri_editing_FieldMappingsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_generalTemplatePropertyPage {
				 get { return "esri_editing_generalTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_toolsTemplatePropertyPage {
				 get { return "esri_editing_toolsTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Attributes&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_attributesTemplatePropertyPage {
				 get { return "esri_editing_attributesTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Annotation&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_annotationTemplatePropertyPage {
				 get { return "esri_editing_annotationTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Dimension&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_dimensionTemplatePropertyPage {
				 get { return "esri_editing_dimensionTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Builders&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_buildersTemplatePropertyPage {
				 get { return "esri_editing_buildersTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Features&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_featuresTemplatePropertyPage {
				 get { return "esri_editing_featuresTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Associations&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_associationsTemplatePropertyPage {
				 get { return "esri_editing_associationsTemplatePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Relationships&quot; (Templates.TemplatePropertiesPageViewModel, Editing)</summary>
			public static string esri_editing_relationshipsTemplatePropertyPage {
				 get { return "esri_editing_relationshipsTemplatePropertyPage"; }
			}
		}
		public static partial class Splitbutton {
			///<summary>Returns the id string for &quot;Play&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_Attributes_TogglePlayWithSpeeds {
				 get { return "esri_editing_Attributes_TogglePlayWithSpeeds"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_updateParcelHistorySplitButton {
				 get { return "esri_editing_updateParcelHistorySplitButton"; }
			}
			///<summary>Returns the id string for &quot;Manage Record&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_manageRecordSplitButton {
				 get { return "esri_editing_manageRecordSplitButton"; }
			}
			///<summary>Returns the id string for &quot;Build&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_parcelBuildSplitButton {
				 get { return "esri_editing_parcelBuildSplitButton"; }
			}
			///<summary>Returns the id string for &quot;Align&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_alignParcelsSplitButton {
				 get { return "esri_editing_alignParcelsSplitButton"; }
			}
			///<summary>Returns the id string for &quot;Ground To Grid&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_GroundToGridSplitButton {
				 get { return "esri_editing_GroundToGridSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ElevationModeSplitButton&quot; (Splitbutton, Editing)</summary>
			public static string esri_editing_ElevationModeSplitButton {
				 get { return "esri_editing_ElevationModeSplitButton"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_editing_editorDisabled&quot; (State, Editing)</summary>
			public static string esri_editing_editorDisabled {
				 get { return "esri_editing_editorDisabled"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_editingNotAvailable&quot; (State, Editing)</summary>
			public static string esri_editing_editingNotAvailable {
				 get { return "esri_editing_editingNotAvailable"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_editingRequiresStart&quot; (State, Editing)</summary>
			public static string esri_editing_editingRequiresStart {
				 get { return "esri_editing_editingRequiresStart"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tablePane&quot; (State, Editing)</summary>
			public static string esri_editing_tablePane {
				 get { return "esri_editing_tablePane"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_versionConflictsPane&quot; (State, Editing)</summary>
			public static string esri_editing_versionConflictsPane {
				 get { return "esri_editing_versionConflictsPane"; }
			}
			///<summary>Returns the id string for &quot;esri_charts_chartsPane&quot; (State, Editing)</summary>
			public static string esri_charts_chartsPane {
				 get { return "esri_charts_chartsPane"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_annoSketching&quot; (State, Editing)</summary>
			public static string esri_editing_annoSketching {
				 get { return "esri_editing_annoSketching"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_UseTopology&quot; (State, Editing)</summary>
			public static string esri_editing_UseTopology {
				 get { return "esri_editing_UseTopology"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_NoGDBTopologyLayer&quot; (State, Editing)</summary>
			public static string esri_editing_NoGDBTopologyLayer {
				 get { return "esri_editing_NoGDBTopologyLayer"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_UseGDBTopology&quot; (State, Editing)</summary>
			public static string esri_editing_UseGDBTopology {
				 get { return "esri_editing_UseGDBTopology"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_2DMap&quot; (State, Editing)</summary>
			public static string esri_editing_2DMap {
				 get { return "esri_editing_2DMap"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_editFeaturePersistence&quot; (State, Editing)</summary>
			public static string esri_editing_editFeaturePersistence {
				 get { return "esri_editing_editFeaturePersistence"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_hasActiveParcelRecord&quot; (State, Editing)</summary>
			public static string esri_editing_hasActiveParcelRecord {
				 get { return "esri_editing_hasActiveParcelRecord"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasParcelFabric&quot; (State, Editing)</summary>
			public static string esri_editing_HasParcelFabric {
				 get { return "esri_editing_HasParcelFabric"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasParcelPolygonsSelected&quot; (State, Editing)</summary>
			public static string esri_editing_HasParcelPolygonsSelected {
				 get { return "esri_editing_HasParcelPolygonsSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasParcelLinesSelected&quot; (State, Editing)</summary>
			public static string esri_editing_HasParcelLinesSelected {
				 get { return "esri_editing_HasParcelLinesSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_canDelete&quot; (State, Editing)</summary>
			public static string esri_editing_canDelete {
				 get { return "esri_editing_canDelete"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasEdits&quot; (State, Editing)</summary>
			public static string esri_editing_HasEdits {
				 get { return "esri_editing_HasEdits"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasUndo&quot; (State, Editing)</summary>
			public static string esri_editing_HasUndo {
				 get { return "esri_editing_HasUndo"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasReconcile&quot; (State, Editing)</summary>
			public static string esri_editing_HasReconcile {
				 get { return "esri_editing_HasReconcile"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_HasRedo&quot; (State, Editing)</summary>
			public static string esri_editing_HasRedo {
				 get { return "esri_editing_HasRedo"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ElevationPickerEnabled&quot; (State, Editing)</summary>
			public static string esri_editing_ElevationPickerEnabled {
				 get { return "esri_editing_ElevationPickerEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SurfacePickerEnabled&quot; (State, Editing)</summary>
			public static string esri_editing_SurfacePickerEnabled {
				 get { return "esri_editing_SurfacePickerEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_ConstantZEnabled&quot; (State, Editing)</summary>
			public static string esri_editing_ConstantZEnabled {
				 get { return "esri_editing_ConstantZEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SurfaceZEnabled&quot; (State, Editing)</summary>
			public static string esri_editing_SurfaceZEnabled {
				 get { return "esri_editing_SurfaceZEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_PointTemplate&quot; (State, Editing)</summary>
			public static string esri_editing_PointTemplate {
				 get { return "esri_editing_PointTemplate"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_LineSketch&quot; (State, Editing)</summary>
			public static string esri_editing_LineSketch {
				 get { return "esri_editing_LineSketch"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SplitToolActive_state&quot; (State, Editing)</summary>
			public static string esri_editing_SplitToolActive_state {
				 get { return "esri_editing_SplitToolActive_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_StereoView&quot; (State, Editing)</summary>
			public static string esri_editing_StereoView {
				 get { return "esri_editing_StereoView"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_Streaming_state&quot; (State, Editing)</summary>
			public static string esri_editing_Streaming_state {
				 get { return "esri_editing_Streaming_state"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TOCSelectionValidForReconcileState&quot; (State, Editing)</summary>
			public static string esri_mapping_TOCSelectionValidForReconcileState {
				 get { return "esri_mapping_TOCSelectionValidForReconcileState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_dataSourceSelectedIsVersionableState&quot; (State, Editing)</summary>
			public static string esri_mapping_dataSourceSelectedIsVersionableState {
				 get { return "esri_mapping_dataSourceSelectedIsVersionableState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapMemberSelectedIsVersionableState&quot; (State, Editing)</summary>
			public static string esri_mapping_mapMemberSelectedIsVersionableState {
				 get { return "esri_mapping_mapMemberSelectedIsVersionableState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_dataSourceSelectedIsHistoricalVersionState&quot; (State, Editing)</summary>
			public static string esri_mapping_dataSourceSelectedIsHistoricalVersionState {
				 get { return "esri_mapping_dataSourceSelectedIsHistoricalVersionState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_dataSourceSelectedIsConnectedAsBranchClientServerState&quot; (State, Editing)</summary>
			public static string esri_mapping_dataSourceSelectedIsConnectedAsBranchClientServerState {
				 get { return "esri_mapping_dataSourceSelectedIsConnectedAsBranchClientServerState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_dataSourceSelectedIsFeatureServiceState&quot; (State, Editing)</summary>
			public static string esri_mapping_dataSourceSelectedIsFeatureServiceState {
				 get { return "esri_mapping_dataSourceSelectedIsFeatureServiceState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TOCItemSelectedIsValidForPost&quot; (State, Editing)</summary>
			public static string esri_editing_TOCItemSelectedIsValidForPost {
				 get { return "esri_editing_TOCItemSelectedIsValidForPost"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_TOCItemSelectedHasConflicts&quot; (State, Editing)</summary>
			public static string esri_editing_TOCItemSelectedHasConflicts {
				 get { return "esri_editing_TOCItemSelectedHasConflicts"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_DuplicateVerticalToolActive_state&quot; (State, Editing)</summary>
			public static string esri_editing_DuplicateVerticalToolActive_state {
				 get { return "esri_editing_DuplicateVerticalToolActive_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesBuildersPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertiesBuildersPage_state {
				 get { return "esri_editing_templatePropertiesBuildersPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesFeaturesPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertiesFeaturesPage_state {
				 get { return "esri_editing_templatePropertiesFeaturesPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesAssociationsPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertiesAssociationsPage_state {
				 get { return "esri_editing_templatePropertiesAssociationsPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesRelationshipsPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertiesRelationshipsPage_state {
				 get { return "esri_editing_templatePropertiesRelationshipsPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesAttributesPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertiesAttributesPage_state {
				 get { return "esri_editing_templatePropertiesAttributesPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertieAnnotationPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertieAnnotationPage_state {
				 get { return "esri_editing_templatePropertieAnnotationPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_templatePropertiesDimensionPage_state&quot; (State, Editing)</summary>
			public static string esri_editing_templatePropertiesDimensionPage_state {
				 get { return "esri_editing_templatePropertiesDimensionPage_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_SelectTopologyToolActive_state&quot; (State, Editing)</summary>
			public static string esri_editing_SelectTopologyToolActive_state {
				 get { return "esri_editing_SelectTopologyToolActive_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_slice_move_visible_state&quot; (State, Editing)</summary>
			public static string esri_editing_slice_move_visible_state {
				 get { return "esri_editing_slice_move_visible_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_slice_rotate_visible_state&quot; (State, Editing)</summary>
			public static string esri_editing_slice_rotate_visible_state {
				 get { return "esri_editing_slice_rotate_visible_state"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tableOpenState&quot; (State, Editing)</summary>
			public static string esri_editing_tableOpenState {
				 get { return "esri_editing_tableOpenState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_spatialSourceState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_spatialSourceState {
				 get { return "esri_editing_tables_spatialSourceState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_selectedRowsState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_selectedRowsState {
				 get { return "esri_editing_tables_selectedRowsState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_currentRowState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_currentRowState {
				 get { return "esri_editing_tables_currentRowState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_canInteractWithMapViewState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_canInteractWithMapViewState {
				 get { return "esri_editing_tables_canInteractWithMapViewState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tablePane_Attachments&quot; (State, Editing)</summary>
			public static string esri_editing_tablePane_Attachments {
				 get { return "esri_editing_tablePane_Attachments"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_activeFieldFieldState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_activeFieldFieldState {
				 get { return "esri_editing_tables_activeFieldFieldState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_canDeleteFieldState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_canDeleteFieldState {
				 get { return "esri_editing_tables_canDeleteFieldState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_tables_isNumericFieldState&quot; (State, Editing)</summary>
			public static string esri_editing_tables_isNumericFieldState {
				 get { return "esri_editing_tables_isNumericFieldState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_FeatureLayerRematchAddressesState&quot; (State, Editing)</summary>
			public static string esri_mapping_FeatureLayerRematchAddressesState {
				 get { return "esri_mapping_FeatureLayerRematchAddressesState"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_FalseState_NotDefined&quot; (State, Editing)</summary>
			public static string esri_editing_FalseState_NotDefined {
				 get { return "esri_editing_FalseState_NotDefined"; }
			}
			///<summary>Returns the id string for &quot;esri_registry_ReviewerHasLicenseState&quot; (State, Editing)</summary>
			public static string esri_registry_ReviewerHasLicenseState {
				 get { return "esri_registry_ReviewerHasLicenseState"; }
			}
		}
		public static partial class Subgroup {
			///<summary>Returns the id string for &quot;esri_editing_table_rowSubGroup&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_rowSubGroup {
				 get { return "esri_editing_table_rowSubGroup"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_fieldsSubGroup1&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_fieldsSubGroup1 {
				 get { return "esri_editing_table_fieldsSubGroup1"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_fieldsSubGroup2&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_fieldsSubGroup2 {
				 get { return "esri_editing_table_fieldsSubGroup2"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_selectSubGroup1&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_selectSubGroup1 {
				 get { return "esri_editing_table_selectSubGroup1"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_selectSubGroup2&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_selectSubGroup2 {
				 get { return "esri_editing_table_selectSubGroup2"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_toolsSubGroup&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_toolsSubGroup {
				 get { return "esri_editing_table_toolsSubGroup"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_relationshipSubGroup&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_relationshipSubGroup {
				 get { return "esri_editing_table_relationshipSubGroup"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_exportSubGroup&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_exportSubGroup {
				 get { return "esri_editing_table_exportSubGroup"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_table_filterSubGroup&quot; (Subgroup, Editing)</summary>
			public static string esri_editing_table_filterSubGroup {
				 get { return "esri_editing_table_filterSubGroup"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Edit&quot; (Tab, Editing)</summary>
			public static string esri_editing_EditingTab {
				 get { return "esri_editing_EditingTab"; }
			}
			///<summary>Returns the id string for &quot;Records&quot; (Tab, Editing)</summary>
			public static string esri_editing_parcelTab {
				 get { return "esri_editing_parcelTab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Parcels&quot; (Tabgroup, Editing)</summary>
			public static string esri_parcelfabric_CoreTabGroup {
				 get { return "esri_parcelfabric_CoreTabGroup"; }
			}
		}
		public static partial class Tool {
			///<summary>Returns the id string for &quot;Create 3D Geometry&quot; (PushPullTool, Editing)</summary>
			public static string esri_editing_PushPullTool {
				 get { return "esri_editing_PushPullTool"; }
			}
			///<summary>Returns the id string for &quot;Modify 3D Geometry&quot; (ModifyPushPullTool, Editing)</summary>
			public static string esri_editing_ModifyPushPullTool {
				 get { return "esri_editing_ModifyPushPullTool"; }
			}
			///<summary>Returns the id string for &quot;Get Point Tool&quot; (GetPointTool, Editing)</summary>
			public static string esri_editing_GetPointTool {
				 get { return "esri_editing_GetPointTool"; }
			}
			///<summary>Returns the id string for &quot;Trace Traverse Tool&quot; (TraceTraverseTool, Editing)</summary>
			public static string esri_editing_TraceTraverseTool {
				 get { return "esri_editing_TraceTraverseTool"; }
			}
			///<summary>Returns the id string for &quot;Point Tool&quot; (SketchPointTool, Editing)</summary>
			public static string esri_editing_SketchPointTool {
				 get { return "esri_editing_SketchPointTool"; }
			}
			///<summary>Returns the id string for &quot;Multipoint Tool&quot; (SketchMultiPointTool, Editing)</summary>
			public static string esri_editing_SketchMultiPointTool {
				 get { return "esri_editing_SketchMultiPointTool"; }
			}
			///<summary>Returns the id string for &quot;Line Tool&quot; (SketchLineTool, Editing)</summary>
			public static string esri_editing_SketchLineTool {
				 get { return "esri_editing_SketchLineTool"; }
			}
			///<summary>Returns the id string for &quot;Two-Point Line Tool&quot; (SketchTwoPointLineTool, Editing)</summary>
			public static string esri_editing_SketchTwoPointLineTool {
				 get { return "esri_editing_SketchTwoPointLineTool"; }
			}
			///<summary>Returns the id string for &quot;Right Angle Line Tool&quot; (SketchLineRightTool, Editing)</summary>
			public static string esri_editing_SketchRightLineTool {
				 get { return "esri_editing_SketchRightLineTool"; }
			}
			///<summary>Returns the id string for &quot;Radial Line Tool&quot; (SketchLineRadialTool, Editing)</summary>
			public static string esri_editing_SketchRadialLineTool {
				 get { return "esri_editing_SketchRadialLineTool"; }
			}
			///<summary>Returns the id string for &quot;Circle Tool&quot; (SketchLineCircleTool, Editing)</summary>
			public static string esri_editing_SketchCircleLineTool {
				 get { return "esri_editing_SketchCircleLineTool"; }
			}
			///<summary>Returns the id string for &quot;Three Point Circle Tool&quot; (SketchLineThreePointCircleTool, Editing)</summary>
			public static string esri_editing_SketchLineThreePointCircleTool {
				 get { return "esri_editing_SketchLineThreePointCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle Tool&quot; (SketchLineRectangleTool, Editing)</summary>
			public static string esri_editing_SketchRectangleLineTool {
				 get { return "esri_editing_SketchRectangleLineTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse Tool&quot; (SketchLineEllipseTool, Editing)</summary>
			public static string esri_editing_SketchEllipseLineTool {
				 get { return "esri_editing_SketchEllipseLineTool"; }
			}
			///<summary>Returns the id string for &quot;Freehand Line Tool&quot; (SketchLineFreehandTool, Editing)</summary>
			public static string esri_editing_SketchFreehandLineTool {
				 get { return "esri_editing_SketchFreehandLineTool"; }
			}
			///<summary>Returns the id string for &quot;Trace Line Tool&quot; (SketchLineTraceTool, Editing)</summary>
			public static string esri_editing_SketchTraceLineTool {
				 get { return "esri_editing_SketchTraceLineTool"; }
			}
			///<summary>Returns the id string for &quot;Stream Line Tool&quot; (SketchLineStreamTool, Editing)</summary>
			public static string esri_editing_SketchStreamLineTool {
				 get { return "esri_editing_SketchStreamLineTool"; }
			}
			///<summary>Returns the id string for &quot;Trace Polygon Tool&quot; (SketchPolygonTraceTool, Editing)</summary>
			public static string esri_editing_SketchTracePolygonTool {
				 get { return "esri_editing_SketchTracePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Stream Polygon Tool&quot; (SketchPolygonStreamTool, Editing)</summary>
			public static string esri_editing_SketchStreamPolygonTool {
				 get { return "esri_editing_SketchStreamPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon Tool&quot; (SketchPolygonTool, Editing)</summary>
			public static string esri_editing_SketchPolygonTool {
				 get { return "esri_editing_SketchPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Right Angle Polygon Tool&quot; (SketchPolygonRightTool, Editing)</summary>
			public static string esri_editing_SketchRightPolygonTool {
				 get { return "esri_editing_SketchRightPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Circle Polygon Tool&quot; (SketchPolygonCircleTool, Editing)</summary>
			public static string esri_editing_SketchCirclePolygonTool {
				 get { return "esri_editing_SketchCirclePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Three Point Circle Polygon Tool&quot; (SketchPolygonThreePointCircleTool, Editing)</summary>
			public static string esri_editing_SketchPolygonThreePointCircleTool {
				 get { return "esri_editing_SketchPolygonThreePointCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle Polygon Tool&quot; (SketchPolygonRectangleTool, Editing)</summary>
			public static string esri_editing_SketchRectanglePolygonTool {
				 get { return "esri_editing_SketchRectanglePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse Polygon Tool&quot; (SketchPolygonEllipseTool, Editing)</summary>
			public static string esri_editing_SketchEllipsePolygonTool {
				 get { return "esri_editing_SketchEllipsePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Freehand Polygon Tool&quot; (SketchPolygonFreehandTool, Editing)</summary>
			public static string esri_editing_SketchFreehandPolygonTool {
				 get { return "esri_editing_SketchFreehandPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Point At End of Line Tool&quot; (SketchPointAtLineEndPointsTool, Editing)</summary>
			public static string esri_editing_SketchPointAtLineEndPointsTool {
				 get { return "esri_editing_SketchPointAtLineEndPointsTool"; }
			}
			///<summary>Returns the id string for &quot;AutoComplete Polygons Tool&quot; (AutoCompletePolygonTool, Editing)</summary>
			public static string esri_editing_SketchAutoCompletePolygonTool {
				 get { return "esri_editing_SketchAutoCompletePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;AutoComplete Freehand Polygons Tool&quot; (AutoCompleteFreehandPolygonTool, Editing)</summary>
			public static string esri_editing_SketchAutoCompleteFreehandPolygonTool {
				 get { return "esri_editing_SketchAutoCompleteFreehandPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Parcel Seed Tool&quot; (SketchParcelSeedTool, Editing)</summary>
			public static string esri_editing_SketchParcelSeedTool {
				 get { return "esri_editing_SketchParcelSeedTool"; }
			}
			///<summary>Returns the id string for &quot;Set snapping tolerance&quot; (SnappingCircleTool, Editing)</summary>
			public static string esri_editing_SnappingCircleTool {
				 get { return "esri_editing_SnappingCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Horizontal Annotation Tool&quot; (SketchHorizontalAnnoTool, Editing)</summary>
			public static string esri_editing_SketchHorizontalAnnoTool {
				 get { return "esri_editing_SketchHorizontalAnnoTool"; }
			}
			///<summary>Returns the id string for &quot;Straight Annotation Tool&quot; (SketchStraightAnnoTool, Editing)</summary>
			public static string esri_editing_SketchStraightAnnoTool {
				 get { return "esri_editing_SketchStraightAnnoTool"; }
			}
			///<summary>Returns the id string for &quot;Curved Annotation Tool&quot; (SketchCurvedAnnoTool, Editing)</summary>
			public static string esri_editing_SketchCurvedAnnoTool {
				 get { return "esri_editing_SketchCurvedAnnoTool"; }
			}
			///<summary>Returns the id string for &quot;Follow Feature Annotation Tool&quot; (SketchFollowFeatureAnnoTool, Editing)</summary>
			public static string esri_editing_SketchFollowFeatureAnnoTool {
				 get { return "esri_editing_SketchFollowFeatureAnnoTool"; }
			}
			///<summary>Returns the id string for &quot;Leader Line Annotation Tool&quot; (SketchLeaderLineAnnoTool, Editing)</summary>
			public static string esri_editing_SketchLeaderLineAnnoTool {
				 get { return "esri_editing_SketchLeaderLineAnnoTool"; }
			}
			///<summary>Returns the id string for &quot;Aligned&quot; (SketchAlignedDimensionTool, Editing)</summary>
			public static string esri_editing_AlignedDimensionTool {
				 get { return "esri_editing_AlignedDimensionTool"; }
			}
			///<summary>Returns the id string for &quot;Simple Aligned&quot; (SketchSimpleAlignedDimensionTool, Editing)</summary>
			public static string esri_editing_SketchSimpleAlignedDimensionTool {
				 get { return "esri_editing_SketchSimpleAlignedDimensionTool"; }
			}
			///<summary>Returns the id string for &quot;Linear&quot; (SketchLinearDimensionTool, Editing)</summary>
			public static string esri_editing_LinearDimensionTool {
				 get { return "esri_editing_LinearDimensionTool"; }
			}
			///<summary>Returns the id string for &quot;Rotated Linear&quot; (SketchRotatedLinearDimensionTool, Editing)</summary>
			public static string esri_editing_RotatedLinearDimensionTool {
				 get { return "esri_editing_RotatedLinearDimensionTool"; }
			}
			///<summary>Returns the id string for &quot;Free Linear&quot; (FreeLinearDimensionTool, Editing)</summary>
			public static string esri_editing_FreeLinearDimensionTool {
				 get { return "esri_editing_FreeLinearDimensionTool"; }
			}
			///<summary>Returns the id string for &quot;Free Aligned&quot; (FreeAlignedDimensionTool, Editing)</summary>
			public static string esri_editing_FreeAlignedDimensionTool {
				 get { return "esri_editing_FreeAlignedDimensionTool"; }
			}
			///<summary>Returns the id string for &quot;Transform&quot; (TransformTool, Editing)</summary>
			public static string esri_editing_TransformTool {
				 get { return "esri_editing_TransformTool"; }
			}
			///<summary>Returns the id string for &quot;Mirror&quot; (MirrorTool, Editing)</summary>
			public static string esri_editing_MirrorFeaturesTool {
				 get { return "esri_editing_MirrorFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Reshape&quot; (ReshapeFeatureTool, Editing)</summary>
			public static string esri_editing_ReshapeFeature {
				 get { return "esri_editing_ReshapeFeature"; }
			}
			///<summary>Returns the id string for &quot;Replace Multipatch&quot; (ReplaceMultiPatchTool, Editing)</summary>
			public static string esri_editing_ReplaceMultiPatchTool {
				 get { return "esri_editing_ReplaceMultiPatchTool"; }
			}
			///<summary>Returns the id string for &quot;Multipatch Texture&quot; (TexturePushPullTool, Editing)</summary>
			public static string esri_editing_PushPullTextureTool {
				 get { return "esri_editing_PushPullTextureTool"; }
			}
			///<summary>Returns the id string for &quot;Clip&quot; (ClipTool, Editing)</summary>
			public static string esri_editing_ClipTool {
				 get { return "esri_editing_ClipTool"; }
			}
			///<summary>Returns the id string for &quot;Extend or Trim&quot; (ExtendTrimFeaturesTool, Editing)</summary>
			public static string esri_editing_ExtendTrimTool {
				 get { return "esri_editing_ExtendTrimTool"; }
			}
			///<summary>Returns the id string for &quot;Fillet&quot; (FilletTool, Editing)</summary>
			public static string esri_editing_FilletTool {
				 get { return "esri_editing_FilletTool"; }
			}
			///<summary>Returns the id string for &quot;Right Angle&quot; (GeneralizeTool, Editing)</summary>
			public static string esri_editing_GeneralizeTool {
				 get { return "esri_editing_GeneralizeTool"; }
			}
			///<summary>Returns the id string for &quot;Line Intersection&quot; (LineIntersectionTool, Editing)</summary>
			public static string esri_editing_LineIntersectionTool {
				 get { return "esri_editing_LineIntersectionTool"; }
			}
			///<summary>Returns the id string for &quot;Buffer&quot; (BufferFeaturesTool, Editing)</summary>
			public static string esri_editing_BufferFeaturesTool {
				 get { return "esri_editing_BufferFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Copy Parallel&quot; (CopyParallelTool, Editing)</summary>
			public static string esri_editing_CopyParallelTool {
				 get { return "esri_editing_CopyParallelTool"; }
			}
			///<summary>Returns the id string for &quot;Split&quot; (SplitTool, Editing)</summary>
			public static string esri_editing_SplitTool {
				 get { return "esri_editing_SplitTool"; }
			}
			///<summary>Returns the id string for &quot;Slice Multipatch&quot; (SliceMultipatchTool, Editing)</summary>
			public static string esri_editing_SliceMultipatchTool {
				 get { return "esri_editing_SliceMultipatchTool"; }
			}
			///<summary>Returns the id string for &quot;Divide&quot; (DivideTool, Editing)</summary>
			public static string esri_editing_DivideTool {
				 get { return "esri_editing_DivideTool"; }
			}
			///<summary>Returns the id string for &quot;Offset&quot; (OffsetTool, Editing)</summary>
			public static string esri_editing_OffsetTool {
				 get { return "esri_editing_OffsetTool"; }
			}
			///<summary>Returns the id string for &quot;Sequential Numbering&quot; (SeqNumTool, Editing)</summary>
			public static string esri_editing_SeqNumTool {
				 get { return "esri_editing_SeqNumTool"; }
			}
			///<summary>Returns the id string for &quot;Transfer Attributes&quot; (AttributeTransferTool, Editing)</summary>
			public static string esri_editing_AttributeTransferTool {
				 get { return "esri_editing_AttributeTransferTool"; }
			}
			///<summary>Returns the id string for &quot;Update COGO&quot; (UpdateCOGOAttributesTool, Editing)</summary>
			public static string esri_editing_UpdateCogoAttributesTool {
				 get { return "esri_editing_UpdateCogoAttributesTool"; }
			}
			///<summary>Returns the id string for &quot;Right Angle&quot; (RightAngleTool, Editing)</summary>
			public static string esri_editing_RightAngleTool {
				 get { return "esri_editing_RightAngleTool"; }
			}
			///<summary>Returns the id string for &quot;Align Edge&quot; (AlignEdgeTool, Editing)</summary>
			public static string esri_editing_AlignEdgeTool {
				 get { return "esri_editing_AlignEdgeTool"; }
			}
			///<summary>Returns the id string for &quot;Align Features&quot; (AlignFeaturesTool, Editing)</summary>
			public static string esri_editing_AlignFeaturesTool {
				 get { return "esri_editing_AlignFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Modify Edge&quot; (ModifyEdgeTool, Editing)</summary>
			public static string esri_editing_ModifyEdgeTool {
				 get { return "esri_editing_ModifyEdgeTool"; }
			}
			///<summary>Returns the id string for &quot;Reshape Edge&quot; (ReshapeEdgeTool, Editing)</summary>
			public static string esri_editing_ReshapeEdgeTool {
				 get { return "esri_editing_ReshapeEdgeTool"; }
			}
			///<summary>Returns the id string for &quot;Select Topology&quot; (SelectTopologyTool, Editing)</summary>
			public static string esri_editing_SelectTopologyTool {
				 get { return "esri_editing_SelectTopologyTool"; }
			}
			///<summary>Returns the id string for &quot;Fix Error&quot; (TopologyFixTool, Editing)</summary>
			public static string esri_editing_TopologyFixTool {
				 get { return "esri_editing_TopologyFixTool"; }
			}
			///<summary>Returns the id string for &quot;Planarize&quot; (PlanarizeLinesTool, Editing)</summary>
			public static string esri_editing_PlanarizeLineFeaturesTool {
				 get { return "esri_editing_PlanarizeLineFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Move To&quot; (MoveToTool, Editing)</summary>
			public static string esri_editing_MoveToFeaturesTool {
				 get { return "esri_editing_MoveToFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Explode&quot; (ExplodeFeaturesTool, Editing)</summary>
			public static string esri_editing_ExplodeFeaturesTool {
				 get { return "esri_editing_ExplodeFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Explode&quot; (InteractiveExplodeTool, Editing)</summary>
			public static string esri_editing_InteractiveExplodeTool {
				 get { return "esri_editing_InteractiveExplodeTool"; }
			}
			///<summary>Returns the id string for &quot;Construct Polygons&quot; (ConstructPolygonsTool, Editing)</summary>
			public static string esri_editing_ConstructPolygonsTool {
				 get { return "esri_editing_ConstructPolygonsTool"; }
			}
			///<summary>Returns the id string for &quot;Duplicate Vertical&quot; (DuplicateVerticalTool, Editing)</summary>
			public static string esri_editing_DuplicateVerticalTool {
				 get { return "esri_editing_DuplicateVerticalTool"; }
			}
			///<summary>Returns the id string for &quot;Split&quot; (SketchPlanarLineTool, Editing)</summary>
			public static string esri_editing_CreateAndCutFeatures {
				 get { return "esri_editing_CreateAndCutFeatures"; }
			}
			///<summary>Returns the id string for &quot;Modify&quot; (ModifyFeatureTool, Editing)</summary>
			public static string esri_editing_ModifyFeatureImpl {
				 get { return "esri_editing_ModifyFeatureImpl"; }
			}
			///<summary>Returns the id string for &quot;MultiPatch Tool&quot; (SketchMultiPatchTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchTool {
				 get { return "esri_editing_SketchMultiPatchTool"; }
			}
			///<summary>Returns the id string for &quot;Cube Tool&quot; (SketchMultiPatchCubeTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchCubeTool {
				 get { return "esri_editing_SketchMultiPatchCubeTool"; }
			}
			///<summary>Returns the id string for &quot;Cylinder Tool&quot; (SketchMultiPatchCylinderTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchCylinderTool {
				 get { return "esri_editing_SketchMultiPatchCylinderTool"; }
			}
			///<summary>Returns the id string for &quot;Sphere Tool&quot; (SketchMultiPatchSphereTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchSphereTool {
				 get { return "esri_editing_SketchMultiPatchSphereTool"; }
			}
			///<summary>Returns the id string for &quot;Cone Tool&quot; (SketchMultiPatchConeTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchConeTool {
				 get { return "esri_editing_SketchMultiPatchConeTool"; }
			}
			///<summary>Returns the id string for &quot;Tetrahedron Tool&quot; (SketchMultiPatchTetraTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchTetraTool {
				 get { return "esri_editing_SketchMultiPatchTetraTool"; }
			}
			///<summary>Returns the id string for &quot;Hexagon Tool&quot; (SketchMultiPatchHexagonTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchHexagonTool {
				 get { return "esri_editing_SketchMultiPatchHexagonTool"; }
			}
			///<summary>Returns the id string for &quot;Diamond Tool&quot; (SketchMultiPatchDiamondTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchDiamondTool {
				 get { return "esri_editing_SketchMultiPatchDiamondTool"; }
			}
			///<summary>Returns the id string for &quot;Sphere Frame Tool&quot; (SketchMultiPatchSphereFrameTool, Editing)</summary>
			public static string esri_editing_SketchMultiPatchSphereFrameTool {
				 get { return "esri_editing_SketchMultiPatchSphereFrameTool"; }
			}
			///<summary>Returns the id string for &quot;Get Z From View&quot; (ArcGIS.Desktop.Editing.ElevationPickerTool, Editing)</summary>
			public static string esri_editing_ElevationPicker {
				 get { return "esri_editing_ElevationPicker"; }
			}
			///<summary>Returns the id string for &quot;Enter the ground line and draw the grid line&quot; (GroundToGridEnterGroundTool, Editing)</summary>
			public static string esri_editing_GroundToGrid_EnterGroundTool {
				 get { return "esri_editing_GroundToGrid_EnterGroundTool"; }
			}
			///<summary>Returns the id string for &quot;Draw the ground line and the grid line&quot; (GroundToGridTwoPointTool, Editing)</summary>
			public static string esri_editing_GroundToGrid_GroundTool {
				 get { return "esri_editing_GroundToGrid_GroundTool"; }
			}
			///<summary>Returns the id string for &quot;Enter the ground line and draw the grid line&quot; (GroundToGridTwoPointTool, Editing)</summary>
			public static string esri_editing_GroundToGrid_GridTool {
				 get { return "esri_editing_GroundToGrid_GridTool"; }
			}
			///<summary>Returns the id string for &quot;Set Origin&quot; (GridSetOriginTool, Editing)</summary>
			public static string esri_editing_GridSetOrigin {
				 get { return "esri_editing_GridSetOrigin"; }
			}
			///<summary>Returns the id string for &quot;Set Rotation&quot; (GridSetRotationTool, Editing)</summary>
			public static string esri_editing_GridSetRotation {
				 get { return "esri_editing_GridSetRotation"; }
			}
			///<summary>Returns the id string for &quot;Set Origin and Rotation&quot; (GridSetOriginAndRotationTool, Editing)</summary>
			public static string esri_editing_GridSetOriginAndRotation {
				 get { return "esri_editing_GridSetOriginAndRotation"; }
			}
			///<summary>Returns the id string for &quot;Show&quot; (AlignParcelShowBufferCommand, Editing)</summary>
			public static string esri_editing_AlignParcelShowBuffer {
				 get { return "esri_editing_AlignParcelShowBuffer"; }
			}
			///<summary>Returns the id string for &quot;Select Parcels&quot; (SelectParcelsTool, Editing)</summary>
			public static string esri_editing_SelectParcelsTool {
				 get { return "esri_editing_SelectParcelsTool"; }
			}
		}
		public static partial class Toolbar {
			///<summary>Returns the id string for &quot;esri_editing_parcelRecordToolbar&quot; (Toolbar, Editing)</summary>
			public static string esri_editing_parcelRecordToolbar {
				 get { return "esri_editing_parcelRecordToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_editing_AlignParcelValueToolbar&quot; (Toolbar, Editing)</summary>
			public static string esri_editing_AlignParcelValueToolbar {
				 get { return "esri_editing_AlignParcelValueToolbar"; }
			}
		}
		public static partial class Toolpalette {
			///<summary>Returns the id string for &quot;Sketch&quot; (Toolpalette, Editing)</summary>
			public static string esri_editing_offsetLineToolPalette {
				 get { return "esri_editing_offsetLineToolPalette"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Bezier&quot; (esri_geoprocessing_module:Commands.SetLinkShapeBezier, GeoProcessing)</summary>
			public static string esri_modelbuilder_bezierLinkTypeButton {
				 get { return "esri_modelbuilder_bezierLinkTypeButton"; }
			}
			///<summary>Returns the id string for &quot;Cascade&quot; (esri_geoprocessing_module:Commands.SetLinkShapeCascading, GeoProcessing)</summary>
			public static string esri_modelbuilder_cascadeLinkTypeButton {
				 get { return "esri_modelbuilder_cascadeLinkTypeButton"; }
			}
			///<summary>Returns the id string for &quot;Polyline&quot; (esri_geoprocessing_module:Commands.SetLinkShapePolyline, GeoProcessing)</summary>
			public static string esri_modelbuilder_polylineLinkTypeButton {
				 get { return "esri_modelbuilder_polylineLinkTypeButton"; }
			}
			///<summary>Returns the id string for &quot;Spline&quot; (esri_geoprocessing_module:Commands.SetLinkShapeBezier, GeoProcessing)</summary>
			public static string esri_modelbuilder_splineLinkTypeButton {
				 get { return "esri_modelbuilder_splineLinkTypeButton"; }
			}
			///<summary>Returns the id string for &quot;Grow Font&quot; (esri_geoprocessing_module:Commands.FontSizeIncrementButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextIncreaseSizeButton {
				 get { return "esri_modelbuilder_labelTextIncreaseSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Shrink Font&quot; (esri_geoprocessing_module:Commands.FontSizeDecrementButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextDecreaseSizeButton {
				 get { return "esri_modelbuilder_labelTextDecreaseSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Italics&quot; (FontItalicButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextItalicButton {
				 get { return "esri_modelbuilder_labelTextItalicButton"; }
			}
			///<summary>Returns the id string for &quot;Bold&quot; (FontBoldButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextBoldButton {
				 get { return "esri_modelbuilder_labelTextBoldButton"; }
			}
			///<summary>Returns the id string for &quot;Underline&quot; (FontUnderlineButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextUnderlineButton {
				 get { return "esri_modelbuilder_labelTextUnderlineButton"; }
			}
			///<summary>Returns the id string for &quot;Left&quot; (FontLeftJustifyButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextILeftJustification {
				 get { return "esri_modelbuilder_labelTextILeftJustification"; }
			}
			///<summary>Returns the id string for &quot;Center&quot; (FontCenterJustifyButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextCenterJustification {
				 get { return "esri_modelbuilder_labelTextCenterJustification"; }
			}
			///<summary>Returns the id string for &quot;Right&quot; (FontRightJustifyButton, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextRightJustification {
				 get { return "esri_modelbuilder_labelTextRightJustification"; }
			}
			///<summary>Returns the id string for &quot;Add Toolbox&quot; (esri_geoprocessing_module:Commands.AddToolbox, GeoProcessing)</summary>
			public static string esri_geoprocessing_addToolboxButton {
				 get { return "esri_geoprocessing_addToolboxButton"; }
			}
			///<summary>Returns the id string for &quot;New Toolbox&quot; (esri_geoprocessing_module:Commands.NewToolbox, GeoProcessing)</summary>
			public static string esri_geoprocessing_newToolboxButton {
				 get { return "esri_geoprocessing_newToolboxButton"; }
			}
			///<summary>Returns the id string for &quot;New Toolbox&quot; (esri_geoprocessing_module:Commands.NewToolbox, GeoProcessing)</summary>
			public static string esri_geoprocessing_newToolboxButtonNoDlg {
				 get { return "esri_geoprocessing_newToolboxButtonNoDlg"; }
			}
			///<summary>Returns the id string for &quot;New Python Toolbox&quot; (esri_geoprocessing_module:Commands.NewPythonToolbox, GeoProcessing)</summary>
			public static string esri_geoprocessing_newPythonToolboxButton {
				 get { return "esri_geoprocessing_newPythonToolboxButton"; }
			}
			///<summary>Returns the id string for &quot;ModelBuilder&quot; (esri_geoprocessing_module:Commands.NewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_modelBuilderButton {
				 get { return "esri_geoprocessing_modelBuilderButton"; }
			}
			///<summary>Returns the id string for &quot;Python&quot; (esri_geoprocessing_module:Commands.ShowPythonWindow, GeoProcessing)</summary>
			public static string esri_geoprocessing_pythonButton {
				 get { return "esri_geoprocessing_pythonButton"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (esri_geoprocessing_module:Commands.ShowTools, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolsButton {
				 get { return "esri_geoprocessing_toolsButton"; }
			}
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (esri_geoprocessing_module:Commands.ShowTools, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolsViewTabButton {
				 get { return "esri_geoprocessing_toolsViewTabButton"; }
			}
			///<summary>Returns the id string for &quot;More Tools...&quot; (esri_geoprocessing_module:Commands.ShowTools, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolsButtonFromGallery {
				 get { return "esri_geoprocessing_toolsButtonFromGallery"; }
			}
			///<summary>Returns the id string for &quot;Customize...&quot; (esri_geoprocessing_module:Commands.CustomizeGallery, GeoProcessing)</summary>
			public static string esri_geoprocessing_CustomizeGalleryButton {
				 get { return "esri_geoprocessing_CustomizeGalleryButton"; }
			}
			///<summary>Returns the id string for &quot;Environments&quot; (esri_geoprocessing_module:Commands.ShowEnvironments, GeoProcessing)</summary>
			public static string esri_geoprocessing_environmentsButton {
				 get { return "esri_geoprocessing_environmentsButton"; }
			}
			///<summary>Returns the id string for &quot;Edit&quot; (esri_geoprocessing_module:Commands.OnEditSchedule, GeoProcessing)</summary>
			public static string esri_geoprocessing_EditSchedule {
				 get { return "esri_geoprocessing_EditSchedule"; }
			}
			///<summary>Returns the id string for &quot;Run Now&quot; (esri_geoprocessing_module:Commands.OnRunScheduleNow, GeoProcessing)</summary>
			public static string esri_geoprocessing_runNow {
				 get { return "esri_geoprocessing_runNow"; }
			}
			///<summary>Returns the id string for &quot;Disable&quot; (esri_geoprocessing_module:Commands.OnPauseSchedule, GeoProcessing)</summary>
			public static string esri_geoprocessing_PauseSchedule {
				 get { return "esri_geoprocessing_PauseSchedule"; }
			}
			///<summary>Returns the id string for &quot;Enable&quot; (esri_geoprocessing_module:Commands.OnUnPauseSchedule, GeoProcessing)</summary>
			public static string esri_geoprocessing_UnPauseSchedule {
				 get { return "esri_geoprocessing_UnPauseSchedule"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_geoprocessing_module:Commands.OnDeleteSchedule, GeoProcessing)</summary>
			public static string esri_geoprocessing_DeleteSchedule {
				 get { return "esri_geoprocessing_DeleteSchedule"; }
			}
			///<summary>Returns the id string for &quot;Clear Logs&quot; (esri_geoprocessing_module:Commands.OnClearScheduleLogs, GeoProcessing)</summary>
			public static string esri_geoprocessing_ClearLogs {
				 get { return "esri_geoprocessing_ClearLogs"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_geoprocessing_module:Commands.OnOpenToolHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_openToolHistory {
				 get { return "esri_geoprocessing_openToolHistory"; }
			}
			///<summary>Returns the id string for &quot;View Details&quot; (esri_geoprocessing_module:Commands.OnOpenResultDialog, GeoProcessing)</summary>
			public static string esri_geoprocessing_showResult {
				 get { return "esri_geoprocessing_showResult"; }
			}
			///<summary>Returns the id string for &quot;Run&quot; (esri_geoprocessing_module:Commands.OnRunToolFromHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_runToolFromHistory {
				 get { return "esri_geoprocessing_runToolFromHistory"; }
			}
			///<summary>Returns the id string for &quot;Copy Python command&quot; (esri_geoprocessing_module:Commands.OnCopySnippetToolHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_copy_snippetHistory {
				 get { return "esri_geoprocessing_copy_snippetHistory"; }
			}
			///<summary>Returns the id string for &quot;Send To Python Window&quot; (esri_geoprocessing_module:Commands.OnSendSnippetPythonWindow, GeoProcessing)</summary>
			public static string esri_geoprocessing_sendToPythonWindow {
				 get { return "esri_geoprocessing_sendToPythonWindow"; }
			}
			///<summary>Returns the id string for &quot;Save As Python Script&quot; (esri_geoprocessing_module:Commands.OnMakePythonScript, GeoProcessing)</summary>
			public static string esri_geoprocessing_makePythonScript {
				 get { return "esri_geoprocessing_makePythonScript"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_geoprocessing_module:Commands.OnRemoveToolHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_removeToolHistory {
				 get { return "esri_geoprocessing_removeToolHistory"; }
			}
			///<summary>Returns the id string for &quot;Remove Items With Errors&quot; (esri_geoprocessing_module:Commands.OnRemoveErrorsFromToolHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_removeErrorsFromToolHistory {
				 get { return "esri_geoprocessing_removeErrorsFromToolHistory"; }
			}
			///<summary>Returns the id string for &quot;Clear History&quot; (esri_geoprocessing_module:Commands.OnClearToolHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_clearToolHistory {
				 get { return "esri_geoprocessing_clearToolHistory"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (esri_geoprocessing_module:Commands.ShowToolHistory, GeoProcessing)</summary>
			public static string esri_geoprocessing_showToolHistory {
				 get { return "esri_geoprocessing_showToolHistory"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_geoprocessing_module:Commands.OnOpenTool, GeoProcessing)</summary>
			public static string esri_geoprocessing_openTool {
				 get { return "esri_geoprocessing_openTool"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_geoprocessing_module:Commands.OnDeleteToolboxComponent, GeoProcessing)</summary>
			public static string esri_geoprocessing_deleteTool {
				 get { return "esri_geoprocessing_deleteTool"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_geoprocessing_module:Commands.OnDeleteToolboxComponent, GeoProcessing)</summary>
			public static string esri_geoprocessing_deleteToolset {
				 get { return "esri_geoprocessing_deleteToolset"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_geoprocessing_module:Commands.OnDeleteToolboxComponent, GeoProcessing)</summary>
			public static string esri_geoprocessing_deleteToolbox {
				 get { return "esri_geoprocessing_deleteToolbox"; }
			}
			///<summary>Returns the id string for &quot;Geoprocessing Options&quot; (esri_geoprocessing_module:Commands.ShowGPOptions, GeoProcessing)</summary>
			public static string esri_geoprocessing_openGPOptionsButton {
				 get { return "esri_geoprocessing_openGPOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Favorites&quot; (esri_geoprocessing_module:Commands.OnAddToFavorities, GeoProcessing)</summary>
			public static string esri_geoprocessing_addToFavorities {
				 get { return "esri_geoprocessing_addToFavorities"; }
			}
			///<summary>Returns the id string for &quot;Add To Analysis Gallery&quot; (esri_geoprocessing_module:Commands.OnAddToGallery, GeoProcessing)</summary>
			public static string esri_geoprocessing_addToGallery {
				 get { return "esri_geoprocessing_addToGallery"; }
			}
			///<summary>Returns the id string for &quot;Add To Model&quot; (esri_geoprocessing_module:Commands.OnAddToModelBuilder, GeoProcessing)</summary>
			public static string esri_geoprocessing_addToModelBuilder {
				 get { return "esri_geoprocessing_addToModelBuilder"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_geoprocessing_module:Commands.OnRemoveFromFavorities, GeoProcessing)</summary>
			public static string esri_geoprocessing_removeFromFavorities {
				 get { return "esri_geoprocessing_removeFromFavorities"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_geoprocessing_module:Commands.OnRemoveFromGallery, GeoProcessing)</summary>
			public static string esri_geoprocessing_removeFromGallery {
				 get { return "esri_geoprocessing_removeFromGallery"; }
			}
			///<summary>Returns the id string for &quot;Clear Progress&quot; (esri_geoprocessing_module:Commands.OnHideMainProgressor, GeoProcessing)</summary>
			public static string esri_geoprocessing_HideMainProgressor {
				 get { return "esri_geoprocessing_HideMainProgressor"; }
			}
			///<summary>Returns the id string for &quot;Locate&quot; (esri_geoprocessing_module:Commands.OnLocateTool, GeoProcessing)</summary>
			public static string esri_geoprocessing_locateTool {
				 get { return "esri_geoprocessing_locateTool"; }
			}
			///<summary>Returns the id string for &quot;Edit&quot; (esri_geoprocessing_module:Commands.OnEditTool, GeoProcessing)</summary>
			public static string esri_geoprocessing_editTool {
				 get { return "esri_geoprocessing_editTool"; }
			}
			///<summary>Returns the id string for &quot;Batch&quot; (esri_geoprocessing_module:Commands.OnBatchTool, GeoProcessing)</summary>
			public static string esri_geoprocessing_BatchTool {
				 get { return "esri_geoprocessing_BatchTool"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_geoprocessing_module:Commands.OnEditToolboxProperties, GeoProcessing)</summary>
			public static string esri_geoprocessing_editToolboxProperties {
				 get { return "esri_geoprocessing_editToolboxProperties"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_geoprocessing_module:Commands.OnEditToolProperties, GeoProcessing)</summary>
			public static string esri_geoprocessing_editToolProperties {
				 get { return "esri_geoprocessing_editToolProperties"; }
			}
			///<summary>Returns the id string for &quot;Help&quot; (esri_geoprocessing_module:Commands.OnShowHelp, GeoProcessing)</summary>
			public static string esri_geoprocessing_helpCommand {
				 get { return "esri_geoprocessing_helpCommand"; }
			}
			///<summary>Returns the id string for &quot;Service Information&quot; (esri_geoprocessing_module:Commands.OnShowServiceInformation, GeoProcessing)</summary>
			public static string esri_geoprocessing_serviceInformation {
				 get { return "esri_geoprocessing_serviceInformation"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_geoprocessing_module:Commands.OnClearProjectTool, GeoProcessing)</summary>
			public static string esri_geoprocessing_ProjectItem_Tool_clear {
				 get { return "esri_geoprocessing_ProjectItem_Tool_clear"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_geoprocessing_module:Commands.OnRemoveToolbox, GeoProcessing)</summary>
			public static string esri_geoprocessing_ProjectItem_Toolbox_remove {
				 get { return "esri_geoprocessing_ProjectItem_Toolbox_remove"; }
			}
			///<summary>Returns the id string for &quot;Make Default&quot; (esri_geoprocessing_module:Commands.SetDefaultToolboxButton, GeoProcessing)</summary>
			public static string esri_geoprocessing_Toolbox_MakeDefaultButton {
				 get { return "esri_geoprocessing_Toolbox_MakeDefaultButton"; }
			}
			///<summary>Returns the id string for &quot;Spatial Join&quot; (esri_geoprocessing_module:Commands.SpatialJoin, GeoProcessing)</summary>
			public static string esri_geoprocessing_spatialJoinsButton {
				 get { return "esri_geoprocessing_spatialJoinsButton"; }
			}
			///<summary>Returns the id string for &quot;New Selection Layer&quot; (esri_geoprocessing_module:Commands.NewSelectionLayer, GeoProcessing)</summary>
			public static string esri_geoprocessing_newSelectionLayerButton {
				 get { return "esri_geoprocessing_newSelectionLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Export Features&quot; (esri_geoprocessing_module:Commands.ExportData, GeoProcessing)</summary>
			public static string esri_geoprocessing_exportDataButton {
				 get { return "esri_geoprocessing_exportDataButton"; }
			}
			///<summary>Returns the id string for &quot;Select By Attributes&quot; (esri_geoprocessing_module:Commands.SelectLayerByAttribute, GeoProcessing)</summary>
			public static string esri_geoprocessing_selectByAttributeButton {
				 get { return "esri_geoprocessing_selectByAttributeButton"; }
			}
			///<summary>Returns the id string for &quot;Select By Location&quot; (esri_geoprocessing_module:Commands.SelectByLocation, GeoProcessing)</summary>
			public static string esri_geoprocessing_selectByLocationButton {
				 get { return "esri_geoprocessing_selectByLocationButton"; }
			}
			///<summary>Returns the id string for &quot;Select By Attributes&quot; (esri_geoprocessing_module:Commands.SelectByAttributeTable, GeoProcessing)</summary>
			public static string esri_geoprocessing_selectByAttributeTableButton {
				 get { return "esri_geoprocessing_selectByAttributeTableButton"; }
			}
			///<summary>Returns the id string for &quot;By Attributes&quot; (esri_geoprocessing_module:Commands.SelectLayerByAttribute, GeoProcessing)</summary>
			public static string esri_geoprocessing_rasterSelectByAttributeButton {
				 get { return "esri_geoprocessing_rasterSelectByAttributeButton"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (esri_geoprocessing_module:Commands.TableAddField, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableAddFieldButton {
				 get { return "esri_geoprocessing_tableAddFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_geoprocessing_module:Commands.TableDeleteField, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableDeleteFieldButton {
				 get { return "esri_geoprocessing_tableDeleteFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Add Join&quot; (esri_geoprocessing_module:Commands.TableAddJoin, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableAddJoinButton {
				 get { return "esri_geoprocessing_tableAddJoinButton"; }
			}
			///<summary>Returns the id string for &quot;Geocode Table&quot; (esri_geoprocessing_module:Commands.GeocodeAddresses, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableGeocodeAddresses {
				 get { return "esri_geoprocessing_tableGeocodeAddresses"; }
			}
			///<summary>Returns the id string for &quot;Remove Join&quot; (esri_geoprocessing_module:Commands.TableRemoveJoin, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableRemoveJoinButton {
				 get { return "esri_geoprocessing_tableRemoveJoinButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Joins&quot; (esri_geoprocessing_module:Commands.TableRemoveAllJoins, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableRemoveAllJoinsButton {
				 get { return "esri_geoprocessing_tableRemoveAllJoinsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Relate&quot; (esri_geoprocessing_module:Commands.TableAddRelate, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableAddRelateButton {
				 get { return "esri_geoprocessing_tableAddRelateButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Relate&quot; (esri_geoprocessing_module:Commands.TableRemoveRelate, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableRemoveRelateButton {
				 get { return "esri_geoprocessing_tableRemoveRelateButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Relates&quot; (esri_geoprocessing_module:Commands.TableRemoveAllRelates, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableRemoveAllRelatesButton {
				 get { return "esri_geoprocessing_tableRemoveAllRelatesButton"; }
			}
			///<summary>Returns the id string for &quot;Script&quot; (esri_geoprocessing_module:Commands.OnNewScript, GeoProcessing)</summary>
			public static string esri_geoprocessing_Add_ScriptTool {
				 get { return "esri_geoprocessing_Add_ScriptTool"; }
			}
			///<summary>Returns the id string for &quot;Model&quot; (esri_geoprocessing_module:Commands.OnNewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_Add_ModelTool {
				 get { return "esri_geoprocessing_Add_ModelTool"; }
			}
			///<summary>Returns the id string for &quot;Toolset&quot; (esri_geoprocessing_module:Commands.OnNewToolset, GeoProcessing)</summary>
			public static string esri_geoprocessing_Add_Toolset {
				 get { return "esri_geoprocessing_Add_Toolset"; }
			}
			///<summary>Returns the id string for &quot;New Geometry Attributes&quot; (esri_geoprocessing_module:Commands.TableAddGeometryAttributes, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableAddGeometryAttributesButton {
				 get { return "esri_geoprocessing_tableAddGeometryAttributesButton"; }
			}
			///<summary>Returns the id string for &quot;Calculate Field&quot; (esri_geoprocessing_module:Commands.TableCalculateField, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableCalculateFieldButton {
				 get { return "esri_geoprocessing_tableCalculateFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Summarize&quot; (esri_geoprocessing_module:Commands.TableSummarize, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableSummarizeButton {
				 get { return "esri_geoprocessing_tableSummarizeButton"; }
			}
			///<summary>Returns the id string for &quot;Display XY Data&quot; (esri_geoprocessing_module:Commands.TableDisplayXYData, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableDisplayXYDataButton {
				 get { return "esri_geoprocessing_tableDisplayXYDataButton"; }
			}
			///<summary>Returns the id string for &quot;Export Table&quot; (esri_geoprocessing_module:Commands.TableExportTable, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableExportTableButton {
				 get { return "esri_geoprocessing_tableExportTableButton"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_geoprocessing_module:Commands.ImportSymbology, GeoProcessing)</summary>
			public static string esri_geoprocessing_importSymbologyButton {
				 get { return "esri_geoprocessing_importSymbologyButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_geoprocessing_module:Commands.SaveModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_saveButton {
				 get { return "esri_modelbuilder_saveButton"; }
			}
			///<summary>Returns the id string for &quot;Save As&quot; (esri_geoprocessing_module:Commands.SaveAsModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_saveAsButton {
				 get { return "esri_modelbuilder_saveAsButton"; }
			}
			///<summary>Returns the id string for &quot;Export To Graphic&quot; (esri_geoprocessing_module:Commands.ExportModelImage, GeoProcessing)</summary>
			public static string esri_modelbuilder_exportImageButton {
				 get { return "esri_modelbuilder_exportImageButton"; }
			}
			///<summary>Returns the id string for &quot;Export To Python File&quot; (esri_geoprocessing_module:Commands.ExportModelScript, GeoProcessing)</summary>
			public static string esri_modelbuilder_exportScriptButton {
				 get { return "esri_modelbuilder_exportScriptButton"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (esri_geoprocessing_module:Commands.ExportModelScript, GeoProcessing)</summary>
			public static string esri_modelbuilder_exportFromModelButton {
				 get { return "esri_modelbuilder_exportFromModelButton"; }
			}
			///<summary>Returns the id string for &quot;Send To Python Window&quot; (esri_geoprocessing_module:Commands.SendModelToPythonWindow, GeoProcessing)</summary>
			public static string esri_modelbuilder_SentModelToPythonWindowButton {
				 get { return "esri_modelbuilder_SentModelToPythonWindowButton"; }
			}
			///<summary>Returns the id string for &quot;Export Report&quot; (esri_geoprocessing_module:Commands.ExportModelReport, GeoProcessing)</summary>
			public static string esri_modelbuilder_exportReportButton {
				 get { return "esri_modelbuilder_exportReportButton"; }
			}
			///<summary>Returns the id string for &quot;Expand All Groups&quot; (esri_geoprocessing_module:Commands.ExpandAllGroups, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupExpandAll {
				 get { return "esri_modelbuilder_groupExpandAll"; }
			}
			///<summary>Returns the id string for &quot;Collapse All Groups&quot; (esri_geoprocessing_module:Commands.CollapseAllGroups, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupCollapseAll {
				 get { return "esri_modelbuilder_groupCollapseAll"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (esri_geoprocessing_module:Commands.CreateGroupFromSelection, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupButton {
				 get { return "esri_modelbuilder_groupButton"; }
			}
			///<summary>Returns the id string for &quot;UnGroup&quot; (esri_geoprocessing_module:Commands.RemoveMembersFromGroup, GeoProcessing)</summary>
			public static string esri_modelbuilder_ungroupButton {
				 get { return "esri_modelbuilder_ungroupButton"; }
			}
			///<summary>Returns the id string for &quot;Fit To Window&quot; (esri_geoprocessing_module:Commands.FitToWindow, GeoProcessing)</summary>
			public static string esri_modelbuilder_fitToWindowButton {
				 get { return "esri_modelbuilder_fitToWindowButton"; }
			}
			///<summary>Returns the id string for &quot;Previous&quot; (esri_geoprocessing_module:Commands.PreviousExtent, GeoProcessing)</summary>
			public static string esri_modelbuilder_prevExtentButton {
				 get { return "esri_modelbuilder_prevExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Next&quot; (esri_geoprocessing_module:Commands.NextExtent, GeoProcessing)</summary>
			public static string esri_modelbuilder_nextExtentButton {
				 get { return "esri_modelbuilder_nextExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Lock&quot; (Lock, GeoProcessing)</summary>
			public static string esri_modelbuilder_lockButton {
				 get { return "esri_modelbuilder_lockButton"; }
			}
			///<summary>Returns the id string for &quot;Unlock&quot; (Unlock, GeoProcessing)</summary>
			public static string esri_modelbuilder_unlockButton {
				 get { return "esri_modelbuilder_unlockButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom in&quot; (esri_geoprocessing_module:Commands.ZoomIn, GeoProcessing)</summary>
			public static string esri_modelbuilder_zoomInButton {
				 get { return "esri_modelbuilder_zoomInButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom out&quot; (esri_geoprocessing_module:Commands.ZoomOut, GeoProcessing)</summary>
			public static string esri_modelbuilder_zoomOutButton {
				 get { return "esri_modelbuilder_zoomOutButton"; }
			}
			///<summary>Returns the id string for &quot;Auto Layout&quot; (esri_geoprocessing_module:Commands.AutoLayout, GeoProcessing)</summary>
			public static string esri_modelbuilder_autoLayoutButton {
				 get { return "esri_modelbuilder_autoLayoutButton"; }
			}
			///<summary>Returns the id string for &quot;Auto Layout Diagram&quot; (esri_geoprocessing_module:Commands.AutoLayout, GeoProcessing)</summary>
			public static string esri_modelbuilder_autoLayoutDiagramButton {
				 get { return "esri_modelbuilder_autoLayoutDiagramButton"; }
			}
			///<summary>Returns the id string for &quot;Route Group Links&quot; (esri_geoprocessing_module:Commands.RouteAllGroupLinks, GeoProcessing)</summary>
			public static string esri_modelbuilder_RouteAllGroupLinksButton {
				 get { return "esri_modelbuilder_RouteAllGroupLinksButton"; }
			}
			///<summary>Returns the id string for &quot;Route All Links&quot; (esri_geoprocessing_module:Commands.RouteAllLinks, GeoProcessing)</summary>
			public static string esri_modelbuilder_RouteAllLinksButton {
				 get { return "esri_modelbuilder_RouteAllLinksButton"; }
			}
			///<summary>Returns the id string for &quot;Route Link(s)&quot; (esri_geoprocessing_module:Commands.RouteSelectedLinks, GeoProcessing)</summary>
			public static string esri_modelbuilder_RouteSelectedLinksButton {
				 get { return "esri_modelbuilder_RouteSelectedLinksButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_geoprocessing_module:Commands.OnEditModelToolProperties, GeoProcessing)</summary>
			public static string esri_modelBuilder_editToolProperties {
				 get { return "esri_modelBuilder_editToolProperties"; }
			}
			///<summary>Returns the id string for &quot;Environments&quot; (esri_geoprocessing_module:Commands.ShowModelEnvironments, GeoProcessing)</summary>
			public static string esri_modelbuilder_environmentsButton {
				 get { return "esri_modelbuilder_environmentsButton"; }
			}
			///<summary>Returns the id string for &quot;Report&quot; (esri_geoprocessing_module:Commands.ShowModelReportView, GeoProcessing)</summary>
			public static string esri_modelbuilder_reportViewButton {
				 get { return "esri_modelbuilder_reportViewButton"; }
			}
			///<summary>Returns the id string for &quot;Cut&quot; (esri_geoprocessing_module:Commands.CutElements, GeoProcessing)</summary>
			public static string esri_modelbuilder_cutElementsButton {
				 get { return "esri_modelbuilder_cutElementsButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_geoprocessing_module:Commands.CopyElements, GeoProcessing)</summary>
			public static string esri_modelbuilder_copyElementsButton {
				 get { return "esri_modelbuilder_copyElementsButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (esri_geoprocessing_module:Commands.PasteElements, GeoProcessing)</summary>
			public static string esri_modelbuilder_pasteElementsButton {
				 get { return "esri_modelbuilder_pasteElementsButton"; }
			}
			///<summary>Returns the id string for &quot;Cut&quot; (esri_geoprocessing_module:Commands.CutElement, GeoProcessing)</summary>
			public static string esri_modelbuilder_cutElementButton {
				 get { return "esri_modelbuilder_cutElementButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_geoprocessing_module:Commands.CopyElement, GeoProcessing)</summary>
			public static string esri_modelbuilder_copyElementButton {
				 get { return "esri_modelbuilder_copyElementButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_geoprocessing_module:Commands.CutConnection, GeoProcessing)</summary>
			public static string esri_modelbuilder_cutConnectionButton {
				 get { return "esri_modelbuilder_cutConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;Validate&quot; (esri_geoprocessing_module:Commands.ValidateModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_validateButton {
				 get { return "esri_modelbuilder_validateButton"; }
			}
			///<summary>Returns the id string for &quot;Run&quot; (esri_geoprocessing_module:Commands.RunModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_runModelButton {
				 get { return "esri_modelbuilder_runModelButton"; }
			}
			///<summary>Returns the id string for &quot;Pan&quot; (esri_geoprocessing_module:Commands.PanMode, GeoProcessing)</summary>
			public static string esri_modelbuilder_panButton {
				 get { return "esri_modelbuilder_panButton"; }
			}
			///<summary>Returns the id string for &quot;Select&quot; (esri_geoprocessing_module:Commands.SelectMode, GeoProcessing)</summary>
			public static string esri_modelbuilder_selectButton {
				 get { return "esri_modelbuilder_selectButton"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_geoprocessing_module:Commands.SelectAll, GeoProcessing)</summary>
			public static string esri_modelbuilder_selectAllButton {
				 get { return "esri_modelbuilder_selectAllButton"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_geoprocessing_module:Commands.SelectAllGroup, GeoProcessing)</summary>
			public static string esri_modelbuilder_selectAllGroupButton {
				 get { return "esri_modelbuilder_selectAllGroupButton"; }
			}
			///<summary>Returns the id string for &quot;Messages...&quot; (esri_geoprocessing_module:Commands.ElementMessages, GeoProcessing)</summary>
			public static string esri_modelbuilder_elementMessagesButton {
				 get { return "esri_modelbuilder_elementMessagesButton"; }
			}
			///<summary>Returns the id string for &quot;Open...&quot; (esri_geoprocessing_module:Commands.OpenElement, GeoProcessing)</summary>
			public static string esri_modelbuilder_openElementButton {
				 get { return "esri_modelbuilder_openElementButton"; }
			}
			///<summary>Returns the id string for &quot;Edit...&quot; (esri_geoprocessing_module:Commands.EditProcessTool, GeoProcessing)</summary>
			public static string esri_modelbuilder_editProcessToolButton {
				 get { return "esri_modelbuilder_editProcessToolButton"; }
			}
			///<summary>Returns the id string for &quot;Parameter&quot; (esri_geoprocessing_module:Commands.ModelParameter, GeoProcessing)</summary>
			public static string esri_modelbuilder_parameterOffButton {
				 get { return "esri_modelbuilder_parameterOffButton"; }
			}
			///<summary>Returns the id string for &quot;Parameter&quot; (esri_geoprocessing_module:Commands.ModelParameter, GeoProcessing)</summary>
			public static string esri_modelbuilder_parameterOnButton {
				 get { return "esri_modelbuilder_parameterOnButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Display&quot; (esri_geoprocessing_module:Commands.RemoveFromDisplay, GeoProcessing)</summary>
			public static string esri_modelBuilder_addToDisplayOnButton {
				 get { return "esri_modelBuilder_addToDisplayOnButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Display&quot; (esri_geoprocessing_module:Commands.AddToDisplay, GeoProcessing)</summary>
			public static string esri_modelBuilder_addToDisplayOffButton {
				 get { return "esri_modelBuilder_addToDisplayOffButton"; }
			}
			///<summary>Returns the id string for &quot;Run&quot; (esri_geoprocessing_module:Commands.RunProcess, GeoProcessing)</summary>
			public static string esri_modelbuilder_runProcessButton {
				 get { return "esri_modelbuilder_runProcessButton"; }
			}
			///<summary>Returns the id string for &quot;Rename&quot; (esri_geoprocessing_module:Commands.RenameElement, GeoProcessing)</summary>
			public static string esri_modelbuilder_renameElementButton {
				 get { return "esri_modelbuilder_renameElementButton"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (esri_geoprocessing_module:Commands.CreateModelVariable, GeoProcessing)</summary>
			public static string esri_modelbuilder_createModelVariableButton {
				 get { return "esri_modelbuilder_createModelVariableButton"; }
			}
			///<summary>Returns the id string for &quot;Create Variable...&quot; (esri_geoprocessing_module:Commands.CreateVariableElement, GeoProcessing)</summary>
			public static string esri_modelbuilder_createVariableButton {
				 get { return "esri_modelbuilder_createVariableButton"; }
			}
			///<summary>Returns the id string for &quot;Label&quot; (esri_geoprocessing_module:Commands.CreateModelLabel, GeoProcessing)</summary>
			public static string esri_modelbuilder_createModelLabelButton {
				 get { return "esri_modelbuilder_createModelLabelButton"; }
			}
			///<summary>Returns the id string for &quot;Create Label&quot; (esri_geoprocessing_module:Commands.CreateLabelElement, GeoProcessing)</summary>
			public static string esri_modelbuilder_createLabelButton {
				 get { return "esri_modelbuilder_createLabelButton"; }
			}
			///<summary>Returns the id string for &quot;Create Label&quot; (esri_geoprocessing_module:Commands.CreateElementLabel, GeoProcessing)</summary>
			public static string esri_modelbuilder_createElementLabelButton {
				 get { return "esri_modelbuilder_createElementLabelButton"; }
			}
			///<summary>Returns the id string for &quot;For&quot; (esri_geoprocessing_module:Commands.IterateCount, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateCountButton {
				 get { return "esri_modelbuilder_iterateCountButton"; }
			}
			///<summary>Returns the id string for &quot;While&quot; (esri_geoprocessing_module:Commands.IterateCondition, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateConditionButton {
				 get { return "esri_modelbuilder_iterateConditionButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Feature Selection&quot; (esri_geoprocessing_module:Commands.IterateFeatureSelection, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateFeatureSelectionButton {
				 get { return "esri_modelbuilder_iterateFeatureSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Row Selection&quot; (esri_geoprocessing_module:Commands.IterateRowSelection, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateRowSelectionButton {
				 get { return "esri_modelbuilder_iterateRowSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Field Value&quot; (esri_geoprocessing_module:Commands.IterateFieldValues, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateFieldValuesButton {
				 get { return "esri_modelbuilder_iterateFieldValuesButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Multivalue&quot; (esri_geoprocessing_module:Commands.IterateMultivalue, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateMultivalueButton {
				 get { return "esri_modelbuilder_iterateMultivalueButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Datasets&quot; (esri_geoprocessing_module:Commands.IterateDatasets, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateDatasetsButton {
				 get { return "esri_modelbuilder_iterateDatasetsButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Feature Classes&quot; (esri_geoprocessing_module:Commands.IterateFeatureClasses, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateFeatureClassesButton {
				 get { return "esri_modelbuilder_iterateFeatureClassesButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Files&quot; (esri_geoprocessing_module:Commands.IterateFiles, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateFilesButton {
				 get { return "esri_modelbuilder_iterateFilesButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Rasters&quot; (esri_geoprocessing_module:Commands.IterateRasters, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateRastersButton {
				 get { return "esri_modelbuilder_iterateRastersButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Tables&quot; (esri_geoprocessing_module:Commands.IterateTables, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateTablesButton {
				 get { return "esri_modelbuilder_iterateTablesButton"; }
			}
			///<summary>Returns the id string for &quot;Iterate Workspaces&quot; (esri_geoprocessing_module:Commands.IterateWorkspaces, GeoProcessing)</summary>
			public static string esri_modelbuilder_iterateWorkspacesButton {
				 get { return "esri_modelbuilder_iterateWorkspacesButton"; }
			}
			///<summary>Returns the id string for &quot;Get Field Value&quot; (esri_geoprocessing_module:Commands.GetFieldValue, GeoProcessing)</summary>
			public static string esri_modelbuilder_getFieldValueButton {
				 get { return "esri_modelbuilder_getFieldValueButton"; }
			}
			///<summary>Returns the id string for &quot;Parse Path&quot; (esri_geoprocessing_module:Commands.ParsePathExt, GeoProcessing)</summary>
			public static string esri_modelbuilder_parsePathExtButton {
				 get { return "esri_modelbuilder_parsePathExtButton"; }
			}
			///<summary>Returns the id string for &quot;Select Data&quot; (esri_geoprocessing_module:Commands.SelectData, GeoProcessing)</summary>
			public static string esri_modelbuilder_selectDataButton {
				 get { return "esri_modelbuilder_selectDataButton"; }
			}
			///<summary>Returns the id string for &quot;Calculate Value&quot; (esri_geoprocessing_module:Commands.CalculateValue, GeoProcessing)</summary>
			public static string esri_modelbuilder_calculateValueButton {
				 get { return "esri_modelbuilder_calculateValueButton"; }
			}
			///<summary>Returns the id string for &quot;Collect Values&quot; (esri_geoprocessing_module:Commands.CollectValues, GeoProcessing)</summary>
			public static string esri_modelbuilder_collectValuesButton {
				 get { return "esri_modelbuilder_collectValuesButton"; }
			}
			///<summary>Returns the id string for &quot;Merge Branch&quot; (esri_geoprocessing_module:Commands.MergeBranch, GeoProcessing)</summary>
			public static string esri_modelbuilder_mergeBranchButton {
				 get { return "esri_modelbuilder_mergeBranchButton"; }
			}
			///<summary>Returns the id string for &quot;Stop&quot; (esri_geoprocessing_module:Commands.Stop, GeoProcessing)</summary>
			public static string esri_modelbuilder_stopButton {
				 get { return "esri_modelbuilder_stopButton"; }
			}
			///<summary>Returns the id string for &quot;If Data Exists&quot; (esri_geoprocessing_module:Commands.IfDataExists, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfDataExistsButton {
				 get { return "esri_modelbuilder_IfDataExistsButton"; }
			}
			///<summary>Returns the id string for &quot;If Field Value Is&quot; (esri_geoprocessing_module:Commands.IfFieldValueIs, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfFieldValueIsButton {
				 get { return "esri_modelbuilder_IfFieldValueIsButton"; }
			}
			///<summary>Returns the id string for &quot;If Field Exists&quot; (esri_geoprocessing_module:Commands.IfFieldExists, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfFieldExistsButton {
				 get { return "esri_modelbuilder_IfFieldExistsButton"; }
			}
			///<summary>Returns the id string for &quot;If Selection Exists&quot; (esri_geoprocessing_module:Commands.IfSelectionExists, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfSelectionExistsButton {
				 get { return "esri_modelbuilder_IfSelectionExistsButton"; }
			}
			///<summary>Returns the id string for &quot;If Row Count Is&quot; (esri_geoprocessing_module:Commands.IfRowCountIs, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfRowCountIsButton {
				 get { return "esri_modelbuilder_IfRowCountIsButton"; }
			}
			///<summary>Returns the id string for &quot;If Coordinate System Is&quot; (esri_geoprocessing_module:Commands.IfCoordinationSystemIs, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfCoordinationSystemIsButton {
				 get { return "esri_modelbuilder_IfCoordinationSystemIsButton"; }
			}
			///<summary>Returns the id string for &quot;If Data Type Is&quot; (esri_geoprocessing_module:Commands.IfDataTypeIs, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfDataTypeIsButton {
				 get { return "esri_modelbuilder_IfDataTypeIsButton"; }
			}
			///<summary>Returns the id string for &quot;If Value Is&quot; (esri_geoprocessing_module:Commands.IfValueIs, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfValueIsButton {
				 get { return "esri_modelbuilder_IfValueIsButton"; }
			}
			///<summary>Returns the id string for &quot;If Feature Type Is&quot; (esri_geoprocessing_module:Commands.IfFeatureTypeIs, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfFeatureTypeIsButton {
				 get { return "esri_modelbuilder_IfFeatureTypeIsButton"; }
			}
			///<summary>Returns the id string for &quot;If Spatial Relationship Is&quot; (esri_geoprocessing_module:Commands.IfSpatialRelationshipExists, GeoProcessing)</summary>
			public static string esri_modelbuilder_IfSpatialRelationshipExistsButton {
				 get { return "esri_modelbuilder_IfSpatialRelationshipExistsButton"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (esri_geoprocessing_module:Commands.NewModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_NewModelButton {
				 get { return "esri_modelbuilder_NewModelButton"; }
			}
			///<summary>Returns the id string for &quot;10.3 Toolbox...&quot; (esri_geoprocessing_module:Commands.OnSaveAsToolbox103, GeoProcessing)</summary>
			public static string esri_geoprocessing_saveAsToolbox103 {
				 get { return "esri_geoprocessing_saveAsToolbox103"; }
			}
			///<summary>Returns the id string for &quot;10.1/10.2 Toolbox...&quot; (esri_geoprocessing_module:Commands.OnSaveAsToolbox102, GeoProcessing)</summary>
			public static string esri_geoprocessing_saveAsToolbox102 {
				 get { return "esri_geoprocessing_saveAsToolbox102"; }
			}
			///<summary>Returns the id string for &quot;10.0 Toolbox...&quot; (esri_geoprocessing_module:Commands.OnSaveAsToolbox100, GeoProcessing)</summary>
			public static string esri_geoprocessing_saveAsToolbox100 {
				 get { return "esri_geoprocessing_saveAsToolbox100"; }
			}
			///<summary>Returns the id string for &quot;10.4 Toolbox...&quot; (esri_geoprocessing_module:Commands.OnSaveAsToolbox104, GeoProcessing)</summary>
			public static string esri_geoprocessing_saveAsToolbox104 {
				 get { return "esri_geoprocessing_saveAsToolbox104"; }
			}
			///<summary>Returns the id string for &quot;10.5/10.6 Toolbox...&quot; (esri_geoprocessing_module:Commands.OnSaveAsToolbox105, GeoProcessing)</summary>
			public static string esri_geoprocessing_saveAsToolbox105 {
				 get { return "esri_geoprocessing_saveAsToolbox105"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (ArcGIS.Desktop.Framework.CopyCMD, GeoProcessing)</summary>
			public static string esri_geoprocessing_editCopy {
				 get { return "esri_geoprocessing_editCopy"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Framework.PasteCMD, GeoProcessing)</summary>
			public static string esri_geoprocessing_pasteTool {
				 get { return "esri_geoprocessing_pasteTool"; }
			}
			///<summary>Returns the id string for &quot;Edit&quot; (esri_geoprocessing_module:Commands.OnEditPythonToolbox, GeoProcessing)</summary>
			public static string esri_geoprocessing_editPythonToolbox {
				 get { return "esri_geoprocessing_editPythonToolbox"; }
			}
			///<summary>Returns the id string for &quot;Check Syntax...&quot; (esri_geoprocessing_module:Commands.OnCheckPythonToolboxSyntax, GeoProcessing)</summary>
			public static string esri_geoprocessing_checkPythonToolboxSyntax {
				 get { return "esri_geoprocessing_checkPythonToolboxSyntax"; }
			}
			///<summary>Returns the id string for &quot;Add To Project&quot; (esri_geoprocessing_module:Commands.OnAddPackageToProject, GeoProcessing)</summary>
			public static string esri_geoprocessing_ItemUnpackOpenButton {
				 get { return "esri_geoprocessing_ItemUnpackOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Save as Model&quot; (esri_geoprocessing_module:Commands.exportGroupToModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_exportGroupToModel {
				 get { return "esri_modelbuilder_exportGroupToModel"; }
			}
			///<summary>Returns the id string for &quot;UnGroup&quot; (esri_geoprocessing_module:Commands.dissolveGroup, GeoProcessing)</summary>
			public static string esri_modelbuilder_dissolveGroup {
				 get { return "esri_modelbuilder_dissolveGroup"; }
			}
			///<summary>Returns the id string for &quot;Rename&quot; (esri_geoprocessing_module:Commands.renameGroup, GeoProcessing)</summary>
			public static string esri_modelbuilder_renameGroup {
				 get { return "esri_modelbuilder_renameGroup"; }
			}
			///<summary>Returns the id string for &quot;Create Group&quot; (esri_geoprocessing_module:Commands.AddToGroup, GeoProcessing)</summary>
			public static string esri_modelbuilder_AddSubGroup {
				 get { return "esri_modelbuilder_AddSubGroup"; }
			}
			///<summary>Returns the id string for &quot;Auto Layout Group&quot; (esri_geoprocessing_module:Commands.AutoLayoutGroup, GeoProcessing)</summary>
			public static string esri_modelbuilder_AutoLayoutGroup {
				 get { return "esri_modelbuilder_AutoLayoutGroup"; }
			}
			///<summary>Returns the id string for &quot;Workbench&quot; (esri_geoprocessing_module:OnStartWorkBench, GeoProcessing)</summary>
			public static string esri_datainterop_startWorkbench {
				 get { return "esri_datainterop_startWorkbench"; }
			}
			///<summary>Returns the id string for &quot;Spatial ETL Tool&quot; (NewETLToolButton, GeoProcessing)</summary>
			public static string esri_datainterop_newETLTool {
				 get { return "esri_datainterop_newETLTool"; }
			}
			///<summary>Returns the id string for &quot;Encrypt...&quot; (EncryptPythonToolboxButton, GeoProcessing)</summary>
			public static string esri_geoprocessing_encryptPyt {
				 get { return "esri_geoprocessing_encryptPyt"; }
			}
			///<summary>Returns the id string for &quot;Decrypt...&quot; (DecryptPythonToolboxButton, GeoProcessing)</summary>
			public static string esri_geoprocessing_decryptPyt {
				 get { return "esri_geoprocessing_decryptPyt"; }
			}
			///<summary>Returns the id string for &quot;Define Projection&quot; (esri_geoprocessing_module:CadCommands.DefineProjection, GeoProcessing)</summary>
			public static string esri_geoprocessing_cadDefineProjectionButton {
				 get { return "esri_geoprocessing_cadDefineProjectionButton"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (esri_geodatabase_module:AddNewNotebookFromNoteBookTab, GeoProcessing)</summary>
			public static string esri_pnotebook_New {
				 get { return "esri_pnotebook_New"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_geoprocessing_module:Commands.SavePythonNotebook, GeoProcessing)</summary>
			public static string esri_pnotebook_Save {
				 get { return "esri_pnotebook_Save"; }
			}
			///<summary>Returns the id string for &quot;Interrupt Kernel&quot; (esri_geoprocessing_module:Commands.InterruptPythonNotebook, GeoProcessing)</summary>
			public static string esri_pnotebook_Interrupt {
				 get { return "esri_pnotebook_Interrupt"; }
			}
		}
		public static partial class Buttonpalette {
			///<summary>Returns the id string for &quot;esri_geoprocessing_selectByPalette&quot; (Buttonpalette, GeoProcessing)</summary>
			public static string esri_geoprocessing_selectByPalette {
				 get { return "esri_geoprocessing_selectByPalette"; }
			}
		}
		public static partial class Checkbox {
			///<summary>Returns the id string for &quot;Enforce Link Flow&quot; (MBLinkStatusEnforceLinkFlow, GeoProcessing)</summary>
			public static string esri_modelbuilder_enforceLinkFlow {
				 get { return "esri_modelbuilder_enforceLinkFlow"; }
			}
			///<summary>Returns the id string for &quot;Straighten Long Links&quot; (MBLinkStatusStraightenLongLinks, GeoProcessing)</summary>
			public static string esri_modelbuilder_straightenLongLinks {
				 get { return "esri_modelbuilder_straightenLongLinks"; }
			}
			///<summary>Returns the id string for &quot;Orthogonal Links&quot; (MBLinkStatusOrthogonalLinks, GeoProcessing)</summary>
			public static string esri_modelbuilder_orthogonalLinks {
				 get { return "esri_modelbuilder_orthogonalLinks"; }
			}
			///<summary>Returns the id string for &quot;Show Grid&quot; (MBShowGrid, GeoProcessing)</summary>
			public static string esri_modelbuilder_showGridCheckbox {
				 get { return "esri_modelbuilder_showGridCheckbox"; }
			}
			///<summary>Returns the id string for &quot;Use Grid Router&quot; (MBUseGridRouter, GeoProcessing)</summary>
			public static string esri_modelbuilder_useGridRouter {
				 get { return "esri_modelbuilder_useGridRouter"; }
			}
			///<summary>Returns the id string for &quot;Flip Orientation&quot; (MBOrientationFlipOrientation, GeoProcessing)</summary>
			public static string esri_modelbuilder_FlipOrientation {
				 get { return "esri_modelbuilder_FlipOrientation"; }
			}
			///<summary>Returns the id string for &quot;Reverse Direction&quot; (MBOrientationReverseDirection, GeoProcessing)</summary>
			public static string esri_modelbuilder_ReverserDirection {
				 get { return "esri_modelbuilder_ReverserDirection"; }
			}
			///<summary>Returns the id string for &quot;Flip Flow Direction&quot; (MBOrientationFlipTextDirection, GeoProcessing)</summary>
			public static string esri_modelbuilder_FlipTextDirection {
				 get { return "esri_modelbuilder_FlipTextDirection"; }
			}
		}
		public static partial class Combobox {
			///<summary>Returns the id string for &quot;esri_modelbuilder_subGraphPlacement&quot; (ArcGIS.Desktop.GeoProcessing.MBSubGraph, GeoProcessing)</summary>
			public static string esri_modelbuilder_subGraphPlacement {
				 get { return "esri_modelbuilder_subGraphPlacement"; }
			}
			///<summary>Returns the id string for &quot;esri_modelbuilder_groupGraphPlacement&quot; (ArcGIS.Desktop.GeoProcessing.MBSubGraphInGroups, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupGraphPlacement {
				 get { return "esri_modelbuilder_groupGraphPlacement"; }
			}
			///<summary>Returns the id string for &quot;esri_modelbuilder_labelTextFontFamilyComboBox&quot; (Commands+FontFamilyChoices, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextFontFamilyComboBox {
				 get { return "esri_modelbuilder_labelTextFontFamilyComboBox"; }
			}
			///<summary>Returns the id string for &quot;Font Size&quot; (Commands+FontFamilySizes, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextFontSizeComboBox {
				 get { return "esri_modelbuilder_labelTextFontSizeComboBox"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;CLSID_MdStringCtrl&quot; (Component, GeoProcessing)</summary>
			public static string CLSID_MdStringCtrl {
				 get { return "CLSID_MdStringCtrl"; }
			}
			///<summary>Returns the id string for &quot;icon_overlay_cloud_type&quot; (Component, GeoProcessing)</summary>
			public static string icon_overlay_cloud_type {
				 get { return "icon_overlay_cloud_type"; }
			}
			///<summary>Returns the id string for &quot;icon_overlay_coin_type&quot; (Component, GeoProcessing)</summary>
			public static string icon_overlay_coin_type {
				 get { return "icon_overlay_coin_type"; }
			}
			///<summary>Returns the id string for &quot;icon_overlay_gpu_leverage&quot; (Component, GeoProcessing)</summary>
			public static string icon_overlay_gpu_leverage {
				 get { return "icon_overlay_gpu_leverage"; }
			}
			///<summary>Returns the id string for &quot;icon_overlay_parallelproc_type&quot; (Component, GeoProcessing)</summary>
			public static string icon_overlay_parallelproc_type {
				 get { return "icon_overlay_parallelproc_type"; }
			}
			///<summary>Returns the id string for &quot;_consume_always&quot; (Component, GeoProcessing)</summary>
			public static string _consume_always {
				 get { return "_consume_always"; }
			}
			///<summary>Returns the id string for &quot;_geocoding&quot; (Component, GeoProcessing)</summary>
			public static string _geocoding {
				 get { return "_geocoding"; }
			}
			///<summary>Returns the id string for &quot;_na&quot; (, GeoProcessing)</summary>
			public static string _na {
				 get { return "_na"; }
			}
			///<summary>Returns the id string for &quot;DEDatasetType&quot; (Component, GeoProcessing)</summary>
			public static string DEDatasetType {
				 get { return "DEDatasetType"; }
			}
			///<summary>Returns the id string for &quot;DEAddressLocator&quot; (Component, GeoProcessing)</summary>
			public static string DEAddressLocator {
				 get { return "DEAddressLocator"; }
			}
			///<summary>Returns the id string for &quot;DEBimFileWorkspace&quot; (Component, GeoProcessing)</summary>
			public static string DEBimFileWorkspace {
				 get { return "DEBimFileWorkspace"; }
			}
			///<summary>Returns the id string for &quot;DECadastralFabric&quot; (Component, GeoProcessing)</summary>
			public static string DECadastralFabric {
				 get { return "DECadastralFabric"; }
			}
			///<summary>Returns the id string for &quot;DECadDrawingDataset&quot; (Component, GeoProcessing)</summary>
			public static string DECadDrawingDataset {
				 get { return "DECadDrawingDataset"; }
			}
			///<summary>Returns the id string for &quot;DECatalogRoot&quot; (Component, GeoProcessing)</summary>
			public static string DECatalogRoot {
				 get { return "DECatalogRoot"; }
			}
			///<summary>Returns the id string for &quot;DEDbaseTable&quot; (Component, GeoProcessing)</summary>
			public static string DEDbaseTable {
				 get { return "DEDbaseTable"; }
			}
			///<summary>Returns the id string for &quot;DEDiskConnection&quot; (Component, GeoProcessing)</summary>
			public static string DEDiskConnection {
				 get { return "DEDiskConnection"; }
			}
			///<summary>Returns the id string for &quot;DEUtilityNetwork&quot; (Component, GeoProcessing)</summary>
			public static string DEUtilityNetwork {
				 get { return "DEUtilityNetwork"; }
			}
			///<summary>Returns the id string for &quot;DETraceNetwork&quot; (Component, GeoProcessing)</summary>
			public static string DETraceNetwork {
				 get { return "DETraceNetwork"; }
			}
			///<summary>Returns the id string for &quot;DEFeatureClass&quot; (Component, GeoProcessing)</summary>
			public static string DEFeatureClass {
				 get { return "DEFeatureClass"; }
			}
			///<summary>Returns the id string for &quot;DEFeatureDataset&quot; (Component, GeoProcessing)</summary>
			public static string DEFeatureDataset {
				 get { return "DEFeatureDataset"; }
			}
			///<summary>Returns the id string for &quot;DEFolder&quot; (Component, GeoProcessing)</summary>
			public static string DEFolder {
				 get { return "DEFolder"; }
			}
			///<summary>Returns the id string for &quot;DEGeoDataServer&quot; (Component, GeoProcessing)</summary>
			public static string DEGeoDataServer {
				 get { return "DEGeoDataServer"; }
			}
			///<summary>Returns the id string for &quot;DEGeoDatasetType&quot; (Component, GeoProcessing)</summary>
			public static string DEGeoDatasetType {
				 get { return "DEGeoDatasetType"; }
			}
			///<summary>Returns the id string for &quot;DEGeometricNetwork&quot; (Component, GeoProcessing)</summary>
			public static string DEGeometricNetwork {
				 get { return "DEGeometricNetwork"; }
			}
			///<summary>Returns the id string for &quot;DEGlobeServer&quot; (Component, GeoProcessing)</summary>
			public static string DEGlobeServer {
				 get { return "DEGlobeServer"; }
			}
			///<summary>Returns the id string for &quot;DEGPServer&quot; (Component, GeoProcessing)</summary>
			public static string DEGPServer {
				 get { return "DEGPServer"; }
			}
			///<summary>Returns the id string for &quot;DEImageServer&quot; (Component, GeoProcessing)</summary>
			public static string DEImageServer {
				 get { return "DEImageServer"; }
			}
			///<summary>Returns the id string for &quot;DELasDataset&quot; (Component, GeoProcessing)</summary>
			public static string DELasDataset {
				 get { return "DELasDataset"; }
			}
			///<summary>Returns the id string for &quot;DELayer&quot; (Component, GeoProcessing)</summary>
			public static string DELayer {
				 get { return "DELayer"; }
			}
			///<summary>Returns the id string for &quot;DELink&quot; (Component, GeoProcessing)</summary>
			public static string DELink {
				 get { return "DELink"; }
			}
			///<summary>Returns the id string for &quot;DEMapDocument&quot; (Component, GeoProcessing)</summary>
			public static string DEMapDocument {
				 get { return "DEMapDocument"; }
			}
			///<summary>Returns the id string for &quot;DEMapServer&quot; (Component, GeoProcessing)</summary>
			public static string DEMapServer {
				 get { return "DEMapServer"; }
			}
			///<summary>Returns the id string for &quot;DEMosaicDataset&quot; (Component, GeoProcessing)</summary>
			public static string DEMosaicDataset {
				 get { return "DEMosaicDataset"; }
			}
			///<summary>Returns the id string for &quot;DENetworkDataset&quot; (Component, GeoProcessing)</summary>
			public static string DENetworkDataset {
				 get { return "DENetworkDataset"; }
			}
			///<summary>Returns the id string for &quot;GPNetworkDataSource&quot; (Component, GeoProcessing)</summary>
			public static string GPNetworkDataSource {
				 get { return "GPNetworkDataSource"; }
			}
			///<summary>Returns the id string for &quot;DEParcelDataset&quot; (Component, GeoProcessing)</summary>
			public static string DEParcelDataset {
				 get { return "DEParcelDataset"; }
			}
			///<summary>Returns the id string for &quot;DEPrjFile&quot; (Component, GeoProcessing)</summary>
			public static string DEPrjFile {
				 get { return "DEPrjFile"; }
			}
			///<summary>Returns the id string for &quot;DERasterBand&quot; (Component, GeoProcessing)</summary>
			public static string DERasterBand {
				 get { return "DERasterBand"; }
			}
			///<summary>Returns the id string for &quot;DERasterCatalog&quot; (Component, GeoProcessing)</summary>
			public static string DERasterCatalog {
				 get { return "DERasterCatalog"; }
			}
			///<summary>Returns the id string for &quot;DERasterDataset&quot; (Component, GeoProcessing)</summary>
			public static string DERasterDataset {
				 get { return "DERasterDataset"; }
			}
			///<summary>Returns the id string for &quot;DERelationshipClass&quot; (Component, GeoProcessing)</summary>
			public static string DERelationshipClass {
				 get { return "DERelationshipClass"; }
			}
			///<summary>Returns the id string for &quot;DENetworkDiagram&quot; (Component, GeoProcessing)</summary>
			public static string DENetworkDiagram {
				 get { return "DENetworkDiagram"; }
			}
			///<summary>Returns the id string for &quot;DEDiagramDataset&quot; (Component, GeoProcessing)</summary>
			public static string DEDiagramDataset {
				 get { return "DEDiagramDataset"; }
			}
			///<summary>Returns the id string for &quot;DEServerConnection&quot; (Component, GeoProcessing)</summary>
			public static string DEServerConnection {
				 get { return "DEServerConnection"; }
			}
			///<summary>Returns the id string for &quot;DEShapeFile&quot; (Component, GeoProcessing)</summary>
			public static string DEShapeFile {
				 get { return "DEShapeFile"; }
			}
			///<summary>Returns the id string for &quot;DETable&quot; (Component, GeoProcessing)</summary>
			public static string DETable {
				 get { return "DETable"; }
			}
			///<summary>Returns the id string for &quot;DETerrain&quot; (Component, GeoProcessing)</summary>
			public static string DETerrain {
				 get { return "DETerrain"; }
			}
			///<summary>Returns the id string for &quot;DETextFile&quot; (Component, GeoProcessing)</summary>
			public static string DETextFile {
				 get { return "DETextFile"; }
			}
			///<summary>Returns the id string for &quot;DETin&quot; (Component, GeoProcessing)</summary>
			public static string DETin {
				 get { return "DETin"; }
			}
			///<summary>Returns the id string for &quot;DEToolbox&quot; (Component, GeoProcessing)</summary>
			public static string DEToolbox {
				 get { return "DEToolbox"; }
			}
			///<summary>Returns the id string for &quot;DETool&quot; (Component, GeoProcessing)</summary>
			public static string DETool {
				 get { return "DETool"; }
			}
			///<summary>Returns the id string for &quot;DETopology&quot; (Component, GeoProcessing)</summary>
			public static string DETopology {
				 get { return "DETopology"; }
			}
			///<summary>Returns the id string for &quot;DEType&quot; (Component, GeoProcessing)</summary>
			public static string DEType {
				 get { return "DEType"; }
			}
			///<summary>Returns the id string for &quot;DEWCSCoverage&quot; (Component, GeoProcessing)</summary>
			public static string DEWCSCoverage {
				 get { return "DEWCSCoverage"; }
			}
			///<summary>Returns the id string for &quot;DEWMSMap&quot; (Component, GeoProcessing)</summary>
			public static string DEWMSMap {
				 get { return "DEWMSMap"; }
			}
			///<summary>Returns the id string for &quot;DEWorkspace&quot; (Component, GeoProcessing)</summary>
			public static string DEWorkspace {
				 get { return "DEWorkspace"; }
			}
			///<summary>Returns the id string for &quot;GPCadastralFabricLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPCadastralFabricLayer {
				 get { return "GPCadastralFabricLayer"; }
			}
			///<summary>Returns the id string for &quot;GPFeatureLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPFeatureLayer {
				 get { return "GPFeatureLayer"; }
			}
			///<summary>Returns the id string for &quot;GPFeatureRecordSetLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPFeatureRecordSetLayer {
				 get { return "GPFeatureRecordSetLayer"; }
			}
			///<summary>Returns the id string for &quot;GPAnnotationLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPAnnotationLayer {
				 get { return "GPAnnotationLayer"; }
			}
			///<summary>Returns the id string for &quot;GPDimensionLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPDimensionLayer {
				 get { return "GPDimensionLayer"; }
			}
			///<summary>Returns the id string for &quot;GPGALayer&quot; (Component, GeoProcessing)</summary>
			public static string GPGALayer {
				 get { return "GPGALayer"; }
			}
			///<summary>Returns the id string for &quot;GPLasDatasetLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPLasDatasetLayer {
				 get { return "GPLasDatasetLayer"; }
			}
			///<summary>Returns the id string for &quot;GPLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPLayer {
				 get { return "GPLayer"; }
			}
			///<summary>Returns the id string for &quot;GPLayout&quot; (Component, GeoProcessing)</summary>
			public static string GPLayout {
				 get { return "GPLayout"; }
			}
			///<summary>Returns the id string for &quot;GPMap&quot; (Component, GeoProcessing)</summary>
			public static string GPMap {
				 get { return "GPMap"; }
			}
			///<summary>Returns the id string for &quot;GPMosaicLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPMosaicLayer {
				 get { return "GPMosaicLayer"; }
			}
			///<summary>Returns the id string for &quot;GPNALayer&quot; (Component, GeoProcessing)</summary>
			public static string GPNALayer {
				 get { return "GPNALayer"; }
			}
			///<summary>Returns the id string for &quot;GPNetworkDatasetLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPNetworkDatasetLayer {
				 get { return "GPNetworkDatasetLayer"; }
			}
			///<summary>Returns the id string for &quot;GPParcelLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPParcelLayer {
				 get { return "GPParcelLayer"; }
			}
			///<summary>Returns the id string for &quot;GPRasterLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPRasterLayer {
				 get { return "GPRasterLayer"; }
			}
			///<summary>Returns the id string for &quot;GPRecordSet&quot; (Component, GeoProcessing)</summary>
			public static string GPRecordSet {
				 get { return "GPRecordSet"; }
			}
			///<summary>Returns the id string for &quot;GPSACellSize&quot; (Component, GeoProcessing)</summary>
			public static string GPSACellSize {
				 get { return "GPSACellSize"; }
			}
			///<summary>Returns the id string for &quot;GPSAGeoData&quot; (Component, GeoProcessing)</summary>
			public static string GPSAGeoData {
				 get { return "GPSAGeoData"; }
			}
			///<summary>Returns the id string for &quot;GPSAGeoDataWithSqlite&quot; (Component, GeoProcessing)</summary>
			public static string GPSAGeoDataWithSqlite {
				 get { return "GPSAGeoDataWithSqlite"; }
			}
			///<summary>Returns the id string for &quot;GPTableView&quot; (Component, GeoProcessing)</summary>
			public static string GPTableView {
				 get { return "GPTableView"; }
			}
			///<summary>Returns the id string for &quot;GPTerrainLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPTerrainLayer {
				 get { return "GPTerrainLayer"; }
			}
			///<summary>Returns the id string for &quot;GPTinLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPTinLayer {
				 get { return "GPTinLayer"; }
			}
			///<summary>Returns the id string for &quot;GPTopologyLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPTopologyLayer {
				 get { return "GPTopologyLayer"; }
			}
			///<summary>Returns the id string for &quot;GPSceneServiceLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPSceneServiceLayer {
				 get { return "GPSceneServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;GPUtilityNetworkLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPUtilityNetworkLayer {
				 get { return "GPUtilityNetworkLayer"; }
			}
			///<summary>Returns the id string for &quot;GPTraceNetworkLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPTraceNetworkLayer {
				 get { return "GPTraceNetworkLayer"; }
			}
			///<summary>Returns the id string for &quot;GPVectorLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPVectorLayer {
				 get { return "GPVectorLayer"; }
			}
			///<summary>Returns the id string for &quot;GPInternetTiledLayer&quot; (Component, GeoProcessing)</summary>
			public static string GPInternetTiledLayer {
				 get { return "GPInternetTiledLayer"; }
			}
			///<summary>Returns the id string for &quot;_gpDefaultProjectTools&quot; (Component, GeoProcessing)</summary>
			public static string _gpDefaultProjectTools {
				 get { return "_gpDefaultProjectTools"; }
			}
			///<summary>Returns the id string for &quot;_gpDefaultGalleryTools&quot; (Component, GeoProcessing)</summary>
			public static string _gpDefaultGalleryTools {
				 get { return "_gpDefaultGalleryTools"; }
			}
			///<summary>Returns the id string for &quot;_gpDefaultCadGalleryTools&quot; (Component, GeoProcessing)</summary>
			public static string _gpDefaultCadGalleryTools {
				 get { return "_gpDefaultCadGalleryTools"; }
			}
			///<summary>Returns the id string for &quot;_gpDefaultBimGalleryTools&quot; (Component, GeoProcessing)</summary>
			public static string _gpDefaultBimGalleryTools {
				 get { return "_gpDefaultBimGalleryTools"; }
			}
		}
		public static partial class Customcontrol {
			///<summary>Returns the id string for &quot;Grid Size&quot; (ArcGIS.Desktop.GeoProcessing.ModelBuilder.Ribbon.GridRouterSettingsViewModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_gridRouterSettings {
				 get { return "esri_modelbuilder_gridRouterSettings"; }
			}
			///<summary>Returns the id string for &quot;Element&quot; (ArcGIS.Desktop.GeoProcessing.ModelBuilder.Ribbon.ElementSlider, GeoProcessing)</summary>
			public static string esri_modelbuilder_elementSlider {
				 get { return "esri_modelbuilder_elementSlider"; }
			}
			///<summary>Returns the id string for &quot;Level&quot; (ArcGIS.Desktop.GeoProcessing.ModelBuilder.Ribbon.LevelSlider, GeoProcessing)</summary>
			public static string esri_modelbuilder_levelSlider {
				 get { return "esri_modelbuilder_levelSlider"; }
			}
			///<summary>Returns the id string for &quot;Element&quot; (ArcGIS.Desktop.GeoProcessing.ModelBuilder.Ribbon.SubGraphSlider, GeoProcessing)</summary>
			public static string esri_modelbuilder_subGraphSlider {
				 get { return "esri_modelbuilder_subGraphSlider"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Commands+TextColorPickerViewModel, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextColorGallery {
				 get { return "esri_modelbuilder_labelTextColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (ArcGIS.Desktop.GeoProcessing.ToolSearcherViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolsSearch {
				 get { return "esri_geoprocessing_toolsSearch"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (GPStartViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_Start {
				 get { return "esri_geoprocessing_Start"; }
			}
			///<summary>Returns the id string for &quot;Ready To Use Tools&quot; (PortalGalleryCtrl, GeoProcessing)</summary>
			public static string esri_geoprocessingAnalysisButton_readytouse {
				 get { return "esri_geoprocessingAnalysisButton_readytouse"; }
			}
			///<summary>Returns the id string for &quot;Feature Analysis&quot; (PortalGalleryCtrl, GeoProcessing)</summary>
			public static string esri_geoprocessingAnalysisButton_feature {
				 get { return "esri_geoprocessingAnalysisButton_feature"; }
			}
			///<summary>Returns the id string for &quot;Raster Analysis&quot; (RAPortalGalleryCtrl, GeoProcessing)</summary>
			public static string esri_geoprocessingAnalysisButton_raster {
				 get { return "esri_geoprocessingAnalysisButton_raster"; }
			}
		}
		public static partial class Dialog {
			///<summary>Returns the id string for &quot;GPEnvironments&quot; (EnvironmentsViewModel, GeoProcessing)</summary>
			public static string GPEnvironments {
				 get { return "GPEnvironments"; }
			}
			///<summary>Returns the id string for &quot;GP_Gallery_Customize&quot; (GalleryCustomizeViewModel, GeoProcessing)</summary>
			public static string GP_Gallery_Customize {
				 get { return "GP_Gallery_Customize"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (GPDocPaneViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolBoxes {
				 get { return "esri_geoprocessing_toolBoxes"; }
			}
			///<summary>Returns the id string for &quot;Python&quot; (PythonWindowDockPaneViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_pythonWindow {
				 get { return "esri_geoprocessing_pythonWindow"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Connect&quot; (ConnectElementsDynamicMenu, GeoProcessing)</summary>
			public static string esri_modelbuilder_connectElementsDynamicMenu {
				 get { return "esri_modelbuilder_connectElementsDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;From Parameter&quot; (MakeVariableFromParameterDynamicMenu, GeoProcessing)</summary>
			public static string esri_modelbuilder_makeVariableFromParameterDynamicMenu {
				 get { return "esri_modelbuilder_makeVariableFromParameterDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;From Environment&quot; (MakeVariableFromEnvironmentDynamicMenu, GeoProcessing)</summary>
			public static string esri_modelbuilder_makeVariableFromEnvironmentDynamicMenu {
				 get { return "esri_modelbuilder_makeVariableFromEnvironmentDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Search Filter&quot; (SearchFilterDynamicMenu, GeoProcessing)</summary>
			public static string esri_modelbuilder_searchFilterDynamicMenu {
				 get { return "esri_modelbuilder_searchFilterDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Spatial ETL Tool&quot; (NewETLToolMenu, GeoProcessing)</summary>
			public static string esri_geoprocessing_NewETLTool {
				 get { return "esri_geoprocessing_NewETLTool"; }
			}
			///<summary>Returns the id string for &quot;Python Toolbox&quot; (PythonToolboxEncryptionMenu, GeoProcessing)</summary>
			public static string esri_geoprocessing_PythonToolboxEncryptionMenu {
				 get { return "esri_geoprocessing_PythonToolboxEncryptionMenu"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;Analysis Gallery&quot; (FavoritesGalleryViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessingGallery {
				 get { return "esri_geoprocessingGallery"; }
			}
			///<summary>Returns the id string for &quot;Cad Tool Gallery&quot; (CadGalleryViewModel, GeoProcessing)</summary>
			public static string esri_cadToolsGallery {
				 get { return "esri_cadToolsGallery"; }
			}
			///<summary>Returns the id string for &quot;Building Tool Gallery&quot; (BimGalleryViewModel, GeoProcessing)</summary>
			public static string esri_bimToolsGallery {
				 get { return "esri_bimToolsGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Project&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_container_ProjectGroup {
				 get { return "esri_geoprocessing_container_ProjectGroup"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_container_CreateGroup {
				 get { return "esri_geoprocessing_container_CreateGroup"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextFormatGroup {
				 get { return "esri_modelbuilder_labelTextFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_projectTools {
				 get { return "esri_geoprocessing_projectTools"; }
			}
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_analysisTools {
				 get { return "esri_geoprocessing_analysisTools"; }
			}
			///<summary>Returns the id string for &quot;Portal&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_portal {
				 get { return "esri_geoprocessing_portal"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_analysis2 {
				 get { return "esri_geoprocessing_analysis2"; }
			}
			///<summary>Returns the id string for &quot;Clipboard&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_editGroup {
				 get { return "esri_modelbuilder_editGroup"; }
			}
			///<summary>Returns the id string for &quot;Model&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_newModelGroup {
				 get { return "esri_modelbuilder_newModelGroup"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_viewGroup {
				 get { return "esri_modelbuilder_viewGroup"; }
			}
			///<summary>Returns the id string for &quot;Run&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_runGroup {
				 get { return "esri_modelbuilder_runGroup"; }
			}
			///<summary>Returns the id string for &quot;Mode&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_modeGroup {
				 get { return "esri_modelbuilder_modeGroup"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_insertGroup {
				 get { return "esri_modelbuilder_insertGroup"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupGroup {
				 get { return "esri_modelbuilder_groupGroup"; }
			}
			///<summary>Returns the id string for &quot;Data Interoperability&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_datainterop_group {
				 get { return "esri_geoprocessing_datainterop_group"; }
			}
			///<summary>Returns the id string for &quot;Spacing&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_spacingGroup {
				 get { return "esri_modelbuilder_spacingGroup"; }
			}
			///<summary>Returns the id string for &quot;Links&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_linkGroup {
				 get { return "esri_modelbuilder_linkGroup"; }
			}
			///<summary>Returns the id string for &quot;Orientation&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_orientationGroup {
				 get { return "esri_modelbuilder_orientationGroup"; }
			}
			///<summary>Returns the id string for &quot;Layout&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_layoutGroup {
				 get { return "esri_modelbuilder_layoutGroup"; }
			}
			///<summary>Returns the id string for &quot;Routing&quot; (Group, GeoProcessing)</summary>
			public static string esri_modelbuilder_routingGroup {
				 get { return "esri_modelbuilder_routingGroup"; }
			}
			///<summary>Returns the id string for &quot;Notebook&quot; (Group, GeoProcessing)</summary>
			public static string esri_python_savegroup {
				 get { return "esri_python_savegroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_cadToolsGroup {
				 get { return "esri_geoprocessing_cadToolsGroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, GeoProcessing)</summary>
			public static string esri_geoprocessing_bimToolsGroup {
				 get { return "esri_geoprocessing_bimToolsGroup"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_gpGuidToControl&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpGuidToControl {
				 get { return "esri_gpGuidToControl"; }
			}
			///<summary>Returns the id string for &quot;esri_gpToolIconOverlay&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpToolIconOverlay {
				 get { return "esri_gpToolIconOverlay"; }
			}
			///<summary>Returns the id string for &quot;esri_gpToolConsumeCredit&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpToolConsumeCredit {
				 get { return "esri_gpToolConsumeCredit"; }
			}
			///<summary>Returns the id string for &quot;gpDataTypeFilters&quot; (Category, GeoProcessing)</summary>
			public static string gpDataTypeFilters {
				 get { return "gpDataTypeFilters"; }
			}
			///<summary>Returns the id string for &quot;esri_gpDefaultProjectTools&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpDefaultProjectTools {
				 get { return "esri_gpDefaultProjectTools"; }
			}
			///<summary>Returns the id string for &quot;esri_gpDefaultGalleryTools&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpDefaultGalleryTools {
				 get { return "esri_gpDefaultGalleryTools"; }
			}
			///<summary>Returns the id string for &quot;esri_gpDefaultCadGalleryTools&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpDefaultCadGalleryTools {
				 get { return "esri_gpDefaultCadGalleryTools"; }
			}
			///<summary>Returns the id string for &quot;esri_gpDefaultBimGalleryTools&quot; (Category, GeoProcessing)</summary>
			public static string esri_gpDefaultBimGalleryTools {
				 get { return "esri_gpDefaultBimGalleryTools"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_geoprocessing_history&quot; (ArcGIS.Desktop.Internal.GeoProcessing.HistoryContainer, GeoProcessing)</summary>
			public static string esri_geoprocessing_history {
				 get { return "esri_geoprocessing_history"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_history_ctrl&quot; (GPHistoryViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_history_ctrl {
				 get { return "esri_geoprocessing_history_ctrl"; }
			}
			///<summary>Returns the id string for &quot;esri_customized_GPCommands&quot; (ArcGIS.Desktop.GeoProcessing.GeoprocessingToolsComponent, GeoProcessing)</summary>
			public static string esri_customized_GPCommands {
				 get { return "esri_customized_GPCommands"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_GeoprocessingProjectItem&quot; (ArcGIS.Desktop.GeoProcessing.GeoprocessingProjectItem, GeoProcessing)</summary>
			public static string esri_itemInfoType_GeoprocessingProjectItem {
				 get { return "esri_itemInfoType_GeoprocessingProjectItem"; }
			}
			///<summary>Returns the id string for &quot;service_geometry&quot; (Component, GeoProcessing)</summary>
			public static string service_geometry {
				 get { return "service_geometry"; }
			}
			///<summary>Returns the id string for &quot;service_kml&quot; (Component, GeoProcessing)</summary>
			public static string service_kml {
				 get { return "service_kml"; }
			}
			///<summary>Returns the id string for &quot;service_search&quot; (Component, GeoProcessing)</summary>
			public static string service_search {
				 get { return "service_search"; }
			}
			///<summary>Returns the id string for &quot;sa_model_type&quot; (Component, GeoProcessing)</summary>
			public static string sa_model_type {
				 get { return "sa_model_type"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_modelTools&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, GeoProcessing)</summary>
			public static string esri_browseDialogFilters_modelTools {
				 get { return "esri_browseDialogFilters_modelTools"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gpcomposite&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, GeoProcessing)</summary>
			public static string esri_browseDialogFilters_gpcomposite {
				 get { return "esri_browseDialogFilters_gpcomposite"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gp_datasets&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, GeoProcessing)</summary>
			public static string esri_browseDialogFilters_gp_datasets {
				 get { return "esri_browseDialogFilters_gp_datasets"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_mosaic_selectable&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, GeoProcessing)</summary>
			public static string esri_browseDialogFilters_mosaic_selectable {
				 get { return "esri_browseDialogFilters_mosaic_selectable"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gp_layerfiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, GeoProcessing)</summary>
			public static string esri_browseDialogFilters_gp_layerfiles {
				 get { return "esri_browseDialogFilters_gp_layerfiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_rasters&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, GeoProcessing)</summary>
			public static string esri_browseDialogFilters_composite_rasters {
				 get { return "esri_browseDialogFilters_composite_rasters"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;esri_geoprocessing_EditingScriptToolCondition&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_EditingScriptToolCondition {
				 get { return "esri_geoprocessing_EditingScriptToolCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultToolboxSelectedCondition&quot; (Condition, GeoProcessing)</summary>
			public static string esri_projectItem_DefaultToolboxSelectedCondition {
				 get { return "esri_projectItem_DefaultToolboxSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_DataInterop_installed&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_DataInterop_installed {
				 get { return "esri_geoprocessing_DataInterop_installed"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_PortalCondition&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_PortalCondition {
				 get { return "esri_geoprocessing_PortalCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_mb_usegridrouter&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_mb_usegridrouter {
				 get { return "esri_geoprocessing_mb_usegridrouter"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_anyMBPane&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_anyMBPane {
				 get { return "esri_geoprocessing_anyMBPane"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_anyGPPane&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_anyGPPane {
				 get { return "esri_geoprocessing_anyGPPane"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_container&quot; (Condition, GeoProcessing)</summary>
			public static string esri_geoprocessing_container {
				 get { return "esri_geoprocessing_container"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (GeoprocessingModule, GeoProcessing)</summary>
			public static string esri_geoprocessing_module {
				 get { return "esri_geoprocessing_module"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (GPOptionsViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_optionsPropertyPage {
				 get { return "esri_geoprocessing_optionsPropertyPage"; }
			}
		}
		public static partial class Product {
			///<summary>Returns the id string for &quot;Spatial Analyst&quot; (Product, GeoProcessing)</summary>
			public static string esri_product_spatialanalyst {
				 get { return "esri_product_spatialanalyst"; }
			}
			///<summary>Returns the id string for &quot;Data Interoperability&quot; (Product, GeoProcessing)</summary>
			public static string esri_product_datainterop {
				 get { return "esri_product_datainterop"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;&quot; (Sheet, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolEditor {
				 get { return "esri_geoprocessing_ToolEditor"; }
			}
			///<summary>Returns the id string for &quot;Toolbox Properties&quot; (Sheet, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolboxProperties {
				 get { return "esri_geoprocessing_toolboxProperties"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Sheet, GeoProcessing)</summary>
			public static string esri_geoprocessing_dataInterop_ToolPropertyEditor {
				 get { return "esri_geoprocessing_dataInterop_ToolPropertyEditor"; }
			}
		}
		public static partial class Labelcontrol {
			///<summary>Returns the id string for &quot;Element&quot; (Labelcontrol, GeoProcessing)</summary>
			public static string esri_modelbuilder_elementLabel {
				 get { return "esri_modelbuilder_elementLabel"; }
			}
			///<summary>Returns the id string for &quot;Level&quot; (Labelcontrol, GeoProcessing)</summary>
			public static string esri_modelbuilder_levelLabel {
				 get { return "esri_modelbuilder_levelLabel"; }
			}
			///<summary>Returns the id string for &quot;Sub-Graph&quot; (Labelcontrol, GeoProcessing)</summary>
			public static string esri_modelbuilder_subGraphLabel {
				 get { return "esri_modelbuilder_subGraphLabel"; }
			}
			///<summary>Returns the id string for &quot;Sub-Graph&quot; (Labelcontrol, GeoProcessing)</summary>
			public static string esri_modelbuilder_subGraphPlacementLabel {
				 get { return "esri_modelbuilder_subGraphPlacementLabel"; }
			}
			///<summary>Returns the id string for &quot;Group-Graph&quot; (Labelcontrol, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupGraphPlacementLabel {
				 get { return "esri_modelbuilder_groupGraphPlacementLabel"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Grid Setting&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_gridSettingsPallette {
				 get { return "esri_modelbuilder_gridSettingsPallette"; }
			}
			///<summary>Returns the id string for &quot;Utilities&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_utilitiesPalette {
				 get { return "esri_modelbuilder_utilitiesPalette"; }
			}
			///<summary>Returns the id string for &quot;Iterators&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_iteratorPalette {
				 get { return "esri_modelbuilder_iteratorPalette"; }
			}
			///<summary>Returns the id string for &quot;Logical&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_conditionalPalette {
				 get { return "esri_modelbuilder_conditionalPalette"; }
			}
			///<summary>Returns the id string for &quot;Toolbox&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_insertMenu {
				 get { return "esri_geoprocessing_insertMenu"; }
			}
			///<summary>Returns the id string for &quot;GP Toolbox Project Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolboxProjectItemMenu {
				 get { return "esri_geoprocessing_ToolboxProjectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;GP Toolbox Project Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolboxMenu {
				 get { return "esri_geoprocessing_ToolboxMenu"; }
			}
			///<summary>Returns the id string for &quot;GP Python Toolbox Project Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_PythonToolboxProjectMenu {
				 get { return "esri_geoprocessing_PythonToolboxProjectMenu"; }
			}
			///<summary>Returns the id string for &quot;GP Toolbox Project Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_PythonToolboxMenu {
				 get { return "esri_geoprocessing_PythonToolboxMenu"; }
			}
			///<summary>Returns the id string for &quot;GP Server Toolbox Project Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ServerToolboxMenu {
				 get { return "esri_geoprocessing_ServerToolboxMenu"; }
			}
			///<summary>Returns the id string for &quot;Toolset menu&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolsetMenu {
				 get { return "esri_geoprocessing_ToolsetMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_Toolbox_AddMenu {
				 get { return "esri_geoprocessing_Toolbox_AddMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_SAModels_AddMenu {
				 get { return "esri_geoprocessing_SAModels_AddMenu"; }
			}
			///<summary>Returns the id string for &quot;Save As&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_Toolbox_SaveAsMenu {
				 get { return "esri_geoprocessing_Toolbox_SaveAsMenu"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_historyItemMenu {
				 get { return "esri_geoprocessing_historyItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Schedule&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_historyScheduleMenu {
				 get { return "esri_geoprocessing_historyScheduleMenu"; }
			}
			///<summary>Returns the id string for &quot;Schedule&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_historyPausedScheduleMenu {
				 get { return "esri_geoprocessing_historyPausedScheduleMenu"; }
			}
			///<summary>Returns the id string for &quot;Schedule Log Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_historyScheduleLogMenu {
				 get { return "esri_geoprocessing_historyScheduleLogMenu"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_historyContainerMenu {
				 get { return "esri_geoprocessing_historyContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;SystemTools Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_SystemToolMenu {
				 get { return "esri_geoprocessing_SystemToolMenu"; }
			}
			///<summary>Returns the id string for &quot;SystemTools Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_SystemScriptToolMenu {
				 get { return "esri_geoprocessing_SystemScriptToolMenu"; }
			}
			///<summary>Returns the id string for &quot;Progress Menu&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_mainProgressMenu {
				 get { return "esri_geoprocessing_mainProgressMenu"; }
			}
			///<summary>Returns the id string for &quot;Tool Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolMenu {
				 get { return "esri_geoprocessing_ToolMenu"; }
			}
			///<summary>Returns the id string for &quot;Tool Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_CustomToolMenu {
				 get { return "esri_geoprocessing_CustomToolMenu"; }
			}
			///<summary>Returns the id string for &quot;Tool Model Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolModelMenu {
				 get { return "esri_geoprocessing_ToolModelMenu"; }
			}
			///<summary>Returns the id string for &quot;Python Toolbox Tool&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_PythonToolMenu {
				 get { return "esri_geoprocessing_PythonToolMenu"; }
			}
			///<summary>Returns the id string for &quot;Search Tool Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_SearchItemMenu {
				 get { return "esri_geoprocessing_SearchItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Favorites Tool Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_FavoritesItemMenu {
				 get { return "esri_geoprocessing_FavoritesItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Gallery Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_GalleryItemMenu {
				 get { return "esri_geoprocessing_GalleryItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Recent Tool Item&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_RecentItemMenu {
				 get { return "esri_geoprocessing_RecentItemMenu"; }
			}
			///<summary>Returns the id string for &quot;GP Dialog Title Menu&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolDialogTitleMenu {
				 get { return "esri_geoprocessing_ToolDialogTitleMenu"; }
			}
			///<summary>Returns the id string for &quot;Joins&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableJoinsMenu {
				 get { return "esri_geoprocessing_tableJoinsMenu"; }
			}
			///<summary>Returns the id string for &quot;Relates&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_tableRelatesMenu {
				 get { return "esri_geoprocessing_tableRelatesMenu"; }
			}
			///<summary>Returns the id string for &quot;Joins and Relates&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_JoinsRelatesMenu {
				 get { return "esri_geoprocessing_JoinsRelatesMenu"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_parameterAddToDisplayVariableMenu {
				 get { return "esri_modelbuilder_parameterAddToDisplayVariableMenu"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_addToDisplayVariableMenu {
				 get { return "esri_modelbuilder_addToDisplayVariableMenu"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_parameterVariableMenu {
				 get { return "esri_modelbuilder_parameterVariableMenu"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_variableMenu {
				 get { return "esri_modelbuilder_variableMenu"; }
			}
			///<summary>Returns the id string for &quot;Tool&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_toolMenu {
				 get { return "esri_modelbuilder_toolMenu"; }
			}
			///<summary>Returns the id string for &quot;Tool&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_editToolMenu {
				 get { return "esri_modelbuilder_editToolMenu"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_parameterAddToDisplayVariableMenuSelectedItem {
				 get { return "esri_modelbuilder_parameterAddToDisplayVariableMenuSelectedItem"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_addToDisplayVariableMenuSelectedItem {
				 get { return "esri_modelbuilder_addToDisplayVariableMenuSelectedItem"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_parameterVariableMenuSelectedItem {
				 get { return "esri_modelbuilder_parameterVariableMenuSelectedItem"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_variableMenuSelectedItem {
				 get { return "esri_modelbuilder_variableMenuSelectedItem"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelMenu {
				 get { return "esri_modelbuilder_labelMenu"; }
			}
			///<summary>Returns the id string for &quot;Tool&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_toolMenuSelectedItem {
				 get { return "esri_modelbuilder_toolMenuSelectedItem"; }
			}
			///<summary>Returns the id string for &quot;Tool&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_editToolMenuSelectedItem {
				 get { return "esri_modelbuilder_editToolMenuSelectedItem"; }
			}
			///<summary>Returns the id string for &quot;Create Variable&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_toolCreateVariableMenu {
				 get { return "esri_modelbuilder_toolCreateVariableMenu"; }
			}
			///<summary>Returns the id string for &quot;Model&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_modelMenu {
				 get { return "esri_modelbuilder_modelMenu"; }
			}
			///<summary>Returns the id string for &quot;Model&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_modelMenu2 {
				 get { return "esri_modelbuilder_modelMenu2"; }
			}
			///<summary>Returns the id string for &quot;Connection&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_inputConnectionMenu {
				 get { return "esri_modelbuilder_inputConnectionMenu"; }
			}
			///<summary>Returns the id string for &quot;Connection&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_outputConnectionMenu {
				 get { return "esri_modelbuilder_outputConnectionMenu"; }
			}
			///<summary>Returns the id string for &quot;Connect&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_connectMenu {
				 get { return "esri_modelbuilder_connectMenu"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupContextMenu {
				 get { return "esri_modelbuilder_groupContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_groupContextMenuFolded {
				 get { return "esri_modelbuilder_groupContextMenuFolded"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (Menu, GeoProcessing)</summary>
			public static string esri_modelbuilder_searchFilterContextMenu {
				 get { return "esri_modelbuilder_searchFilterContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Package&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_packageMenu {
				 get { return "esri_geoprocessing_packageMenu"; }
			}
			///<summary>Returns the id string for &quot;Gallery Items&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_CadGalleryItemMenu {
				 get { return "esri_geoprocessing_CadGalleryItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Gallery Items&quot; (Menu, GeoProcessing)</summary>
			public static string esri_geoprocessing_BimGalleryItemMenu {
				 get { return "esri_geoprocessing_BimGalleryItemMenu"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;General&quot; (ToolGeneralViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolGeneralPage {
				 get { return "esri_geoprocessing_ToolGeneralPage"; }
			}
			///<summary>Returns the id string for &quot;Parameters&quot; (ToolParametersViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_ToolParametersPage {
				 get { return "esri_geoprocessing_ToolParametersPage"; }
			}
			///<summary>Returns the id string for &quot;Validation&quot; (ScriptToolValidationViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_scriptToolValidationPage {
				 get { return "esri_geoprocessing_scriptToolValidationPage"; }
			}
			///<summary>Returns the id string for &quot;Toolbox Properties&quot; (ToolboxPropertiesViewModel, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolboxPropertiesPage {
				 get { return "esri_geoprocessing_toolboxPropertiesPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ETLToolPropertyViewModel, GeoProcessing)</summary>
			public static string esri_dataInterop_ETLToolGeneralPage {
				 get { return "esri_dataInterop_ETLToolGeneralPage"; }
			}
		}
		public static partial class Splitbutton {
			///<summary>Returns the id string for &quot;esri_geoprocessing_toolsSplitButton&quot; (Splitbutton, GeoProcessing)</summary>
			public static string esri_geoprocessing_toolsSplitButton {
				 get { return "esri_geoprocessing_toolsSplitButton"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Splitbutton, GeoProcessing)</summary>
			public static string esri_modelbuilder_exportSplitButton {
				 get { return "esri_modelbuilder_exportSplitButton"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_geoprocessing_EditingScriptTool&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_EditingScriptTool {
				 get { return "esri_geoprocessing_EditingScriptTool"; }
			}
			///<summary>Returns the id string for &quot;esri_projectItem_DefaultToolboxSelected&quot; (State, GeoProcessing)</summary>
			public static string esri_projectItem_DefaultToolboxSelected {
				 get { return "esri_projectItem_DefaultToolboxSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_openProjectCondition&quot; (State, GeoProcessing)</summary>
			public static string esri_mapping_openProjectCondition {
				 get { return "esri_mapping_openProjectCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_DI_installed&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_DI_installed {
				 get { return "esri_geoprocessing_DI_installed"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_ShowPortal&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_ShowPortal {
				 get { return "esri_geoprocessing_ShowPortal"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_mb_use_gridrouter&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_mb_use_gridrouter {
				 get { return "esri_geoprocessing_mb_use_gridrouter"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_modelBuilderPane&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_modelBuilderPane {
				 get { return "esri_geoprocessing_modelBuilderPane"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_MBReportPane&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBReportPane {
				 get { return "esri_geoprocessing_MBReportPane"; }
			}
			///<summary>Returns the id string for &quot;esri_geoprocessing_proNotebookPane&quot; (State, GeoProcessing)</summary>
			public static string esri_geoprocessing_proNotebookPane {
				 get { return "esri_geoprocessing_proNotebookPane"; }
			}
		}
		public static partial class Subgroup {
			///<summary>Returns the id string for &quot;esri_gp_container_ProjectSubGroup&quot; (Subgroup, GeoProcessing)</summary>
			public static string esri_gp_container_ProjectSubGroup {
				 get { return "esri_gp_container_ProjectSubGroup"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Geoprocessing&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_GPContainer {
				 get { return "esri_geoprocessing_GPContainer"; }
			}
			///<summary>Returns the id string for &quot;Notebook&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_ProNBTab {
				 get { return "esri_geoprocessing_ProNBTab"; }
			}
			///<summary>Returns the id string for &quot;Diagram&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBDiagramTab1 {
				 get { return "esri_geoprocessing_MBDiagramTab1"; }
			}
			///<summary>Returns the id string for &quot;ModelBuilder&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBHomeTab {
				 get { return "esri_geoprocessing_MBHomeTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBInsertTab {
				 get { return "esri_geoprocessing_MBInsertTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBAnalysisTab {
				 get { return "esri_geoprocessing_MBAnalysisTab"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBViewTab {
				 get { return "esri_geoprocessing_MBViewTab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, GeoProcessing)</summary>
			public static string esri_geoprocessing_GPTabGroup {
				 get { return "esri_geoprocessing_GPTabGroup"; }
			}
			///<summary>Returns the id string for &quot;ModelBuilder&quot; (Tabgroup, GeoProcessing)</summary>
			public static string esri_geoprocessing_MBTabGroup {
				 get { return "esri_geoprocessing_MBTabGroup"; }
			}
		}
		public static partial class Toolbar {
			///<summary>Returns the id string for &quot;esri_modelbuilder_labelTextFontToolBar&quot; (Toolbar, GeoProcessing)</summary>
			public static string esri_modelbuilder_labelTextFontToolBar {
				 get { return "esri_modelbuilder_labelTextFontToolBar"; }
			}
		}
		public static partial class Toolpalette {
			///<summary>Returns the id string for &quot;Select&quot; (Toolpalette, GeoProcessing)</summary>
			public static string esri_geoprocessing_bimSelectToolPalette {
				 get { return "esri_geoprocessing_bimSelectToolPalette"; }
			}
			///<summary>Returns the id string for &quot;Link Shape&quot; (Toolpalette, GeoProcessing)</summary>
			public static string esri_modelbuilder_linkShapeToolPalette {
				 get { return "esri_modelbuilder_linkShapeToolPalette"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;esri_layouts_dummyButton&quot; (esri_layouts:DummyButton, Layouts)</summary>
			public static string esri_layouts_dummyButton {
				 get { return "esri_layouts_dummyButton"; }
			}
			///<summary>Returns the id string for &quot;Edit Text&quot; (esri_layouts:LayoutEditText, Layouts)</summary>
			public static string esri_layouts_editTextButton {
				 get { return "esri_layouts_editTextButton"; }
			}
			///<summary>Returns the id string for &quot;Fixed Zoom Out&quot; (esri_layouts:FixedZoomOut, Layouts)</summary>
			public static string esri_layouts_pageFixedZoomOutButton {
				 get { return "esri_layouts_pageFixedZoomOutButton"; }
			}
			///<summary>Returns the id string for &quot;Fixed Zoom In&quot; (esri_layouts:FixedZoomIn, Layouts)</summary>
			public static string esri_layouts_pageFixedZoomInButton {
				 get { return "esri_layouts_pageFixedZoomInButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom to Page&quot; (esri_layouts:ZoomToWholePage, Layouts)</summary>
			public static string esri_layouts_pageZoomFullButton {
				 get { return "esri_layouts_pageZoomFullButton"; }
			}
			///<summary>Returns the id string for &quot;Previous Extent&quot; (esri_layouts:PreviousNavigationPos, Layouts)</summary>
			public static string esri_layouts_pagePrevExtentButton {
				 get { return "esri_layouts_pagePrevExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Next Extent&quot; (esri_layouts:NextNavigationPos, Layouts)</summary>
			public static string esri_layouts_pageNextExtentButton {
				 get { return "esri_layouts_pageNextExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Page Width&quot; (esri_layouts:ZoomToPageWidth, Layouts)</summary>
			public static string esri_layouts_pageZoomPageWidthButton {
				 get { return "esri_layouts_pageZoomPageWidthButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom 100%&quot; (esri_layouts:ZoomTo100Percent, Layouts)</summary>
			public static string esri_layouts_pageZoom100PercentButton {
				 get { return "esri_layouts_pageZoom100PercentButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Selected&quot; (esri_layouts:ZoomToSelectedElements, Layouts)</summary>
			public static string esri_layouts_pageZoomToSelected {
				 get { return "esri_layouts_pageZoomToSelected"; }
			}
			///<summary>Returns the id string for &quot;Navigate to page&quot; (esri_layouts:NavigateToPage, Layouts)</summary>
			public static string esri_layouts_pageNavigate {
				 get { return "esri_layouts_pageNavigate"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutNavigateCommand, Layouts)</summary>
			public static string esri_layouts_navigateContext {
				 get { return "esri_layouts_navigateContext"; }
			}
			///<summary>Returns the id string for &quot;Export to File...&quot; (esri_layouts:OnExportMapSeriesTOC, Layouts)</summary>
			public static string esri_layouts_exportMapSeries {
				 get { return "esri_layouts_exportMapSeries"; }
			}
			///<summary>Returns the id string for &quot;Print...&quot; (esri_layouts:OnPrintMapSeriesTOC, Layouts)</summary>
			public static string esri_layouts_printMapSeries {
				 get { return "esri_layouts_printMapSeries"; }
			}
			///<summary>Returns the id string for &quot;Map Series&quot; (esri_layouts:ShowSeriesProperties, Layouts)</summary>
			public static string esri_layouts_defineSeries {
				 get { return "esri_layouts_defineSeries"; }
			}
			///<summary>Returns the id string for &quot;Refresh&quot; (esri_layouts:RefreshMapSeries, Layouts)</summary>
			public static string esri_layouts_mapSeriesRefreshButton {
				 get { return "esri_layouts_mapSeriesRefreshButton"; }
			}
			///<summary>Returns the id string for &quot;Import web map or print web map...&quot; (esri_layouts:OpenWebMapFromFileAsync, Layouts)</summary>
			public static string esri_layouts_openWebMapFromFileButton {
				 get { return "esri_layouts_openWebMapFromFileButton"; }
			}
			///<summary>Returns the id string for &quot;Custom page size...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.CustomNewLayoutButton, Layouts)</summary>
			public static string esri_layouts_customNewLayoutButton {
				 get { return "esri_layouts_customNewLayoutButton"; }
			}
			///<summary>Returns the id string for &quot;Select page from printer...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SelectPageFromPrinter, Layouts)</summary>
			public static string esri_layouts_selectPageFromPrinter {
				 get { return "esri_layouts_selectPageFromPrinter"; }
			}
			///<summary>Returns the id string for &quot;Custom page size...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.CustomPageSizeButton, Layouts)</summary>
			public static string esri_layouts_customPageSizeButton {
				 get { return "esri_layouts_customPageSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Select page from printer...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.CustomPageSizeFromPrinterButton, Layouts)</summary>
			public static string esri_layouts_customPageSizeFromPrinter {
				 get { return "esri_layouts_customPageSizeFromPrinter"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_layouts:LayoutProperties, Layouts)</summary>
			public static string esri_layouts_layoutPropertiesButton {
				 get { return "esri_layouts_layoutPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Create Thumbnail&quot; (esri_layouts:CreateThumbnail, Layouts)</summary>
			public static string esri_layouts_createThumbnail {
				 get { return "esri_layouts_createThumbnail"; }
			}
			///<summary>Returns the id string for &quot;Import Thumbnail&quot; (esri_layouts:ImportThumbnail, Layouts)</summary>
			public static string esri_layouts_importThumbnail {
				 get { return "esri_layouts_importThumbnail"; }
			}
			///<summary>Returns the id string for &quot;Simulate Overprint&quot; (esri_layouts:SimulateOverprint, Layouts)</summary>
			public static string esri_layouts_simulateOverprint {
				 get { return "esri_layouts_simulateOverprint"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_layouts:ShowSeriesProperties, Layouts)</summary>
			public static string esri_layouts_mapSeriesPropertiesButton {
				 get { return "esri_layouts_mapSeriesPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Rulers&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShowHideRulersButton, Layouts)</summary>
			public static string esri_layouts_showHideRulers {
				 get { return "esri_layouts_showHideRulers"; }
			}
			///<summary>Returns the id string for &quot;Guides&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShowHideGuidesButton, Layouts)</summary>
			public static string esri_layouts_showHideGuides {
				 get { return "esri_layouts_showHideGuides"; }
			}
			///<summary>Returns the id string for &quot;Add Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.AddGuideButton, Layouts)</summary>
			public static string esri_layouts_addGuide {
				 get { return "esri_layouts_addGuide"; }
			}
			///<summary>Returns the id string for &quot;Add Guides...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.AddGuidesButton, Layouts)</summary>
			public static string esri_layouts_addGuides {
				 get { return "esri_layouts_addGuides"; }
			}
			///<summary>Returns the id string for &quot;Remove Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.RemoveGuideButton, Layouts)</summary>
			public static string esri_layouts_removeGuide {
				 get { return "esri_layouts_removeGuide"; }
			}
			///<summary>Returns the id string for &quot;Remove All Guides&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.RemoveAllGuidesButton, Layouts)</summary>
			public static string esri_layouts_removeAllGuides {
				 get { return "esri_layouts_removeAllGuides"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_layouts:SelectAll, Layouts)</summary>
			public static string esri_layouts_selectAllButton {
				 get { return "esri_layouts_selectAllButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Selection&quot; (esri_layouts:ClearSelection, Layouts)</summary>
			public static string esri_layouts_clearSelectionButton {
				 get { return "esri_layouts_clearSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Edit Vertices&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.EditVerticesCommand, Layouts)</summary>
			public static string esri_layouts_editVerticesContext {
				 get { return "esri_layouts_editVerticesContext"; }
			}
			///<summary>Returns the id string for &quot;Normal&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MoveVerticesButton, Layouts)</summary>
			public static string esri_layouts_moveVerticesButton {
				 get { return "esri_layouts_moveVerticesButton"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.AddVerticesButton, Layouts)</summary>
			public static string esri_layouts_addVerticesButton {
				 get { return "esri_layouts_addVerticesButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DeleteVerticesButton, Layouts)</summary>
			public static string esri_layouts_deleteVerticesButton {
				 get { return "esri_layouts_deleteVerticesButton"; }
			}
			///<summary>Returns the id string for &quot;Continue&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ContinueVerticesButton, Layouts)</summary>
			public static string esri_layouts_continueVerticesButton {
				 get { return "esri_layouts_continueVerticesButton"; }
			}
			///<summary>Returns the id string for &quot;Continue Feature&quot; (EditVerticesContinueModeCommand, Layouts)</summary>
			public static string esri_layouts_EditVerticesContinue {
				 get { return "esri_layouts_EditVerticesContinue"; }
			}
			///<summary>Returns the id string for &quot;Add Vertex&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.AddSketchVertexContextButton, Layouts)</summary>
			public static string esri_layouts_InsertVertexContextMenuItem {
				 get { return "esri_layouts_InsertVertexContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Reverse Direction&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ReverseSketchOrientationContextButton, Layouts)</summary>
			public static string esri_layouts_ReverseDirectionContextMenuItem {
				 get { return "esri_layouts_ReverseDirectionContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;To Line&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ChangeSketchSegmentTypeToLineContextButton, Layouts)</summary>
			public static string esri_layouts_changesegment_ToLineCommand {
				 get { return "esri_layouts_changesegment_ToLineCommand"; }
			}
			///<summary>Returns the id string for &quot;To Circular Arc&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ChangeSketchSegmentTypeToArcContextButton, Layouts)</summary>
			public static string esri_layouts_changesegment_ToCircularArcCommand {
				 get { return "esri_layouts_changesegment_ToCircularArcCommand"; }
			}
			///<summary>Returns the id string for &quot;To Bezier Curve&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ChangeSketchSegmentTypeToBezierContextButton, Layouts)</summary>
			public static string esri_layouts_changesegment_ToBezierCurveCommand {
				 get { return "esri_layouts_changesegment_ToBezierCurveCommand"; }
			}
			///<summary>Returns the id string for &quot;Delete Vertex&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DeleteSketchVertexContextButton, Layouts)</summary>
			public static string esri_layouts_DeleteVertexContextMenuItem {
				 get { return "esri_layouts_DeleteVertexContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move...&quot; (MoveVertexCommand, Layouts)</summary>
			public static string esri_layouts_MoveContextMenuItem {
				 get { return "esri_layouts_MoveContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Move To...&quot; (MoveToVertexCommand, Layouts)</summary>
			public static string esri_layouts_MoveToContextMenuItem {
				 get { return "esri_layouts_MoveToContextMenuItem"; }
			}
			///<summary>Returns the id string for &quot;Finish&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.FinishSketchButton, Layouts)</summary>
			public static string esri_layouts_finishSketchButton {
				 get { return "esri_layouts_finishSketchButton"; }
			}
			///<summary>Returns the id string for &quot;Cancel&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ClearSketchButton, Layouts)</summary>
			public static string esri_layouts_clearSketchButton {
				 get { return "esri_layouts_clearSketchButton"; }
			}
			///<summary>Returns the id string for &quot;Set as Default&quot; (esri_layouts:SetDefaultSymbol, Layouts)</summary>
			public static string esri_layouts_setDefaultSymbol {
				 get { return "esri_layouts_setDefaultSymbol"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (esri_layouts:GroupSelectedElements, Layouts)</summary>
			public static string esri_layouts_groupSelectedElementsButton {
				 get { return "esri_layouts_groupSelectedElementsButton"; }
			}
			///<summary>Returns the id string for &quot;Ungroup&quot; (esri_layouts:UngroupSelectedElements, Layouts)</summary>
			public static string esri_layouts_ungroupSelectedElementsButton {
				 get { return "esri_layouts_ungroupSelectedElementsButton"; }
			}
			///<summary>Returns the id string for &quot;Convert To Graphics&quot; (esri_layouts:ConvertSelectedElementsToGraphicsAsync, Layouts)</summary>
			public static string esri_layouts_ConvertToGraphicsButton {
				 get { return "esri_layouts_ConvertToGraphicsButton"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (esri_layouts_layoutPane:OpenSelectionSettings, Layouts)</summary>
			public static string esri_layouts_openSelectionSettings {
				 get { return "esri_layouts_openSelectionSettings"; }
			}
			///<summary>Returns the id string for &quot;Create New Selection&quot; (esri_layouts_layoutPane:CreateNewSelection, Layouts)</summary>
			public static string esri_layouts_createNewSelectionButton {
				 get { return "esri_layouts_createNewSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Add to Current Selection&quot; (esri_layouts_layoutPane:AddToSelection, Layouts)</summary>
			public static string esri_layouts_addToSelectionButton {
				 get { return "esri_layouts_addToSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Remove From Current Selection&quot; (esri_layouts_layoutPane:RemoveFromSelection, Layouts)</summary>
			public static string esri_layouts_removeFromSelectionButton {
				 get { return "esri_layouts_removeFromSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Select From Current Selection&quot; (esri_layouts_layoutPane:AndSelection, Layouts)</summary>
			public static string esri_layouts_andSelectionButton {
				 get { return "esri_layouts_andSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Select&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutSelectCommand, Layouts)</summary>
			public static string esri_layouts_selectContext {
				 get { return "esri_layouts_selectContext"; }
			}
			///<summary>Returns the id string for &quot;Check Spelling&quot; (esri_layouts:ShowSpellCheckDockPane, Layouts)</summary>
			public static string esri_layouts_showSpellCheckPane {
				 get { return "esri_layouts_showSpellCheckPane"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_layouts:OpenChart, Layouts)</summary>
			public static string esri_layouts_chartOpenButton {
				 get { return "esri_layouts_chartOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_layouts:RemoveLegendItems, Layouts)</summary>
			public static string esri_layouts_removeLegendItemButton {
				 get { return "esri_layouts_removeLegendItemButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_layouts:RemoveTableFrameFields, Layouts)</summary>
			public static string esri_layouts_removeTableFrameFieldButton {
				 get { return "esri_layouts_removeTableFrameFieldButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_layouts:OpenTable, Layouts)</summary>
			public static string esri_layouts_tableOpenButton {
				 get { return "esri_layouts_tableOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Activate&quot; (esri_layouts:ActivateMapToggle, Layouts)</summary>
			public static string esri_layouts_activateMap {
				 get { return "esri_layouts_activateMap"; }
			}
			///<summary>Returns the id string for &quot;Close Activation&quot; (esri_layouts:DeactivateMap, Layouts)</summary>
			public static string esri_layouts_deactivateMap {
				 get { return "esri_layouts_deactivateMap"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_layouts:RemoveExtentIndicators, Layouts)</summary>
			public static string esri_layouts_removeExtentIndicatorButton {
				 get { return "esri_layouts_removeExtentIndicatorButton"; }
			}
			///<summary>Returns the id string for &quot;Show/Hide Leader&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShowExtentIndicatorLeaderCheckBox, Layouts)</summary>
			public static string esri_layouts_showExtentIndicatorLeaderButton {
				 get { return "esri_layouts_showExtentIndicatorLeaderButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_layouts:RemoveMapGrids, Layouts)</summary>
			public static string esri_layouts_removeGridButton {
				 get { return "esri_layouts_removeGridButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_layouts:OpenMap, Layouts)</summary>
			public static string esri_layouts_mapOpenButton {
				 get { return "esri_layouts_mapOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Show/Hide Leader&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShowLeaderCheckBox, Layouts)</summary>
			public static string esri_layouts_showLeader {
				 get { return "esri_layouts_showLeader"; }
			}
			///<summary>Returns the id string for &quot;Save to Style&quot; (esri_layouts:SaveAsStyle, Layouts)</summary>
			public static string esri_layouts_saveAsStyle {
				 get { return "esri_layouts_saveAsStyle"; }
			}
			///<summary>Returns the id string for &quot;Save As Default&quot; (esri_layouts:SaveAsDefaultLegendItem, Layouts)</summary>
			public static string esri_layouts_saveAsDefaultLegendItem {
				 get { return "esri_layouts_saveAsDefaultLegendItem"; }
			}
			///<summary>Returns the id string for &quot;Save As Default&quot; (esri_layouts:SaveAsDefaultTableFrameField, Layouts)</summary>
			public static string esri_layouts_saveAsDefaultTableFrameField {
				 get { return "esri_layouts_saveAsDefaultTableFrameField"; }
			}
			///<summary>Returns the id string for &quot;Align Left&quot; (esri_layouts:AlignLeft, Layouts)</summary>
			public static string esri_layouts_alignLeft {
				 get { return "esri_layouts_alignLeft"; }
			}
			///<summary>Returns the id string for &quot;Align Center&quot; (esri_layouts:AlignCenter, Layouts)</summary>
			public static string esri_layouts_alignCenter {
				 get { return "esri_layouts_alignCenter"; }
			}
			///<summary>Returns the id string for &quot;Align Right&quot; (esri_layouts:AlignRight, Layouts)</summary>
			public static string esri_layouts_alignRight {
				 get { return "esri_layouts_alignRight"; }
			}
			///<summary>Returns the id string for &quot;Align Top&quot; (esri_layouts:AlignTop, Layouts)</summary>
			public static string esri_layouts_alignTop {
				 get { return "esri_layouts_alignTop"; }
			}
			///<summary>Returns the id string for &quot;Align Middle&quot; (esri_layouts:AlignMiddle, Layouts)</summary>
			public static string esri_layouts_alignMiddle {
				 get { return "esri_layouts_alignMiddle"; }
			}
			///<summary>Returns the id string for &quot;Align Bottom&quot; (esri_layouts:AlignBottom, Layouts)</summary>
			public static string esri_layouts_alignBottom {
				 get { return "esri_layouts_alignBottom"; }
			}
			///<summary>Returns the id string for &quot;Distribute Horizontally&quot; (esri_layouts:DistributeHorizontally, Layouts)</summary>
			public static string esri_layouts_distributeHorizontally {
				 get { return "esri_layouts_distributeHorizontally"; }
			}
			///<summary>Returns the id string for &quot;Distribute Vertically&quot; (esri_layouts:DistributeVertically, Layouts)</summary>
			public static string esri_layouts_distributeVertically {
				 get { return "esri_layouts_distributeVertically"; }
			}
			///<summary>Returns the id string for &quot;Align to Page&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.AlignToPageCheckBox, Layouts)</summary>
			public static string esri_layouts_alignToPage {
				 get { return "esri_layouts_alignToPage"; }
			}
			///<summary>Returns the id string for &quot;Extent Indicator&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewExtentIndicatorButton, Layouts)</summary>
			public static string esri_layouts_newExtentIndicatorButton {
				 get { return "esri_layouts_newExtentIndicatorButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NorthArrowStyleButton, Layouts)</summary>
			public static string esri_layouts_northArrowStyleButton {
				 get { return "esri_layouts_northArrowStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultNorthArrowStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultNorthArrowStyleButton {
				 get { return "esri_layouts_defaultNorthArrowStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarStyleButton, Layouts)</summary>
			public static string esri_layouts_scaleBarStyleButton {
				 get { return "esri_layouts_scaleBarStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultScaleBarStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultScaleBarStyleButton {
				 get { return "esri_layouts_defaultScaleBarStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MapGridStyleButton, Layouts)</summary>
			public static string esri_layouts_mapGridStyleButton {
				 get { return "esri_layouts_mapGridStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultMapGridStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultMapGridStyleButton {
				 get { return "esri_layouts_defaultMapGridStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Create an empty map frame&quot; (esri_layouts:InsertDefaults_OnMapFrameSource_Empty, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameSource_Empty {
				 get { return "esri_layouts_reshapeMapFrameSource_Empty"; }
			}
			///<summary>Returns the id string for &quot;Create a new map&quot; (esri_layouts:InsertDefaults_OnMapFrameSource_CreateNew, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameSource_New {
				 get { return "esri_layouts_reshapeMapFrameSource_New"; }
			}
			///<summary>Returns the id string for &quot;Use selected map in project window&quot; (esri_layouts:InsertDefaults_OnMapFrameSource_ProjectSelection, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameSource_Project {
				 get { return "esri_layouts_reshapeMapFrameSource_Project"; }
			}
			///<summary>Returns the id string for &quot;Show properties after sketching&quot; (esri_layouts:InsertDefaults_OnMapFrameSource_ShowProperties, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameSource_Properties {
				 get { return "esri_layouts_reshapeMapFrameSource_Properties"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TopoNorthArrowStyleButton, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowStyleButton {
				 get { return "esri_layouts_topoNorthArrowStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MeterReferenceStyleButton, Layouts)</summary>
			public static string esri_layouts_meterReferenceStyleButton {
				 get { return "esri_layouts_meterReferenceStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultMeterReferenceStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultMeterReferenceStyleButton {
				 get { return "esri_layouts_defaultMeterReferenceStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Slope Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewSlopeGuideButton, Layouts)</summary>
			public static string esri_layouts_newSlopeGuideButton {
				 get { return "esri_layouts_newSlopeGuideButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SlopeGuideStyleButton, Layouts)</summary>
			public static string esri_layouts_slopeGuideStyleButton {
				 get { return "esri_layouts_slopeGuideStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultSlopeGuideStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultSlopeGuideStyleButton {
				 get { return "esri_layouts_defaultSlopeGuideStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarStyleButton, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarStyleButton {
				 get { return "esri_layouts_elevationGuideBarStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultElevationGuideBarStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultElevationGuideBarStyleButton {
				 get { return "esri_layouts_defaultElevationGuideBarStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PolygonStyleButton, Layouts)</summary>
			public static string esri_layouts_polygonStyleButton {
				 get { return "esri_layouts_polygonStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultPolygonStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultPolygonStyleButton {
				 get { return "esri_layouts_defaultPolygonStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LineStyleButton, Layouts)</summary>
			public static string esri_layouts_lineStyleButton {
				 get { return "esri_layouts_lineStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultLineStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultLineStyleButton {
				 get { return "esri_layouts_defaultLineStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PointStyleButton, Layouts)</summary>
			public static string esri_layouts_pointStyleButton {
				 get { return "esri_layouts_pointStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultPointStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultPointStyleButton {
				 get { return "esri_layouts_defaultPointStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TextStyleButton, Layouts)</summary>
			public static string esri_layouts_textStyleButton {
				 get { return "esri_layouts_textStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DefaultTextStyleButton, Layouts)</summary>
			public static string esri_layouts_defaultTextStyleButton {
				 get { return "esri_layouts_defaultTextStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.BackgroundStyleButton, Layouts)</summary>
			public static string esri_layouts_backgroundStyleButton {
				 get { return "esri_layouts_backgroundStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.BorderStyleButton, Layouts)</summary>
			public static string esri_layouts_borderStyleButton {
				 get { return "esri_layouts_borderStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShadowStyleButton, Layouts)</summary>
			public static string esri_layouts_shadowStyleButton {
				 get { return "esri_layouts_shadowStyleButton"; }
			}
			///<summary>Returns the id string for &quot;More Colors...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ColorStyleButton, Layouts)</summary>
			public static string esri_layouts_colorSelectorButton {
				 get { return "esri_layouts_colorSelectorButton"; }
			}
			///<summary>Returns the id string for &quot;More Colors...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.OutlineColorStyleButton, Layouts)</summary>
			public static string esri_layouts_outlineColorSelectorButton {
				 get { return "esri_layouts_outlineColorSelectorButton"; }
			}
			///<summary>Returns the id string for &quot;More Colors...&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TextColorStyleButton, Layouts)</summary>
			public static string esri_layouts_textColorSelectorButton {
				 get { return "esri_layouts_textColorSelectorButton"; }
			}
			///<summary>Returns the id string for &quot;Grow Font&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.FontSizeIncrementButton, Layouts)</summary>
			public static string esri_layouts_textSymbolIncreaseSizeButton {
				 get { return "esri_layouts_textSymbolIncreaseSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Shrink Font&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.FontSizeDecrementButton, Layouts)</summary>
			public static string esri_layouts_textSymbolDecreaseSizeButton {
				 get { return "esri_layouts_textSymbolDecreaseSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Export To File...&quot; (esri_layouts:ExportSimpleMapProjectItem, Layouts)</summary>
			public static string esri_mapping_mapContextMenu_ExportMap {
				 get { return "esri_mapping_mapContextMenu_ExportMap"; }
			}
			///<summary>Returns the id string for &quot;Element&quot; (esri_layouts:ShowElementDockPane, Layouts)</summary>
			public static string esri_layouts_showElementDockPaneButtonForView {
				 get { return "esri_layouts_showElementDockPaneButtonForView"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_layouts:ShowElementDockPane, Layouts)</summary>
			public static string esri_layouts_showElementDockPaneButton {
				 get { return "esri_layouts_showElementDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Symbol&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showPolygonSymbolDockPaneButton {
				 get { return "esri_layouts_showPolygonSymbolDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Symbol&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showLineSymbolDockPaneButton {
				 get { return "esri_layouts_showLineSymbolDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Symbol&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showPointSymbolDockPaneButton {
				 get { return "esri_layouts_showPointSymbolDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Background&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showBackgroundStyleDockPaneButton {
				 get { return "esri_layouts_showBackgroundStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Border&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showBorderStyleDockPaneButton {
				 get { return "esri_layouts_showBorderStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Shadow&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showShadowStyleDockPaneButton {
				 get { return "esri_layouts_showShadowStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format North Arrow&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showNorthArrowStyleDockPaneButton {
				 get { return "esri_layouts_showNorthArrowStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Scale Bar&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showScaleBarStyleDockPaneButton {
				 get { return "esri_layouts_showScaleBarStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Text Symbol&quot; (esri_layouts:ShowElementTextDockPane, Layouts)</summary>
			public static string esri_layouts_showTextSymbolDockPaneButton {
				 get { return "esri_layouts_showTextSymbolDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format North Arrow&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showTopoNorthArrowStyleDockPaneButton {
				 get { return "esri_layouts_showTopoNorthArrowStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Meter Reference Guide&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showMeterReferenceStyleDockPaneButton {
				 get { return "esri_layouts_showMeterReferenceStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Elevation Guide Bar&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showElevationGuideBarStyleDockPaneButton {
				 get { return "esri_layouts_showElevationGuideBarStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Slope Guide&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_slopeGuideStyleDockPaneButton {
				 get { return "esri_layouts_slopeGuideStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Format Slope Guide&quot; (esri_layouts:ShowElementStyleDockPane, Layouts)</summary>
			public static string esri_layouts_showSlopeGuideStyleDockPaneButton {
				 get { return "esri_layouts_showSlopeGuideStyleDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Proofing Options&quot; (esri_layouts:ShowProofingDialog, Layouts)</summary>
			public static string esri_layouts_showProofingDialogButton {
				 get { return "esri_layouts_showProofingDialogButton"; }
			}
			///<summary>Returns the id string for &quot;New Layout&quot; (esri_layouts:NewLayout, Layouts)</summary>
			public static string esri_layouts_projectContainer_NewLayout {
				 get { return "esri_layouts_projectContainer_NewLayout"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_layouts:ImportDocument, Layouts)</summary>
			public static string esri_layouts_importMapContext {
				 get { return "esri_layouts_importMapContext"; }
			}
			///<summary>Returns the id string for &quot;Import Map&quot; (esri_layouts:ImportDocument, Layouts)</summary>
			public static string esri_layouts_importMap {
				 get { return "esri_layouts_importMap"; }
			}
			///<summary>Returns the id string for &quot;Import Layout&quot; (esri_layouts:ImportDocument, Layouts)</summary>
			public static string esri_layouts_importLayout {
				 get { return "esri_layouts_importLayout"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_layouts:ImportDocument, Layouts)</summary>
			public static string esri_layouts_importLayoutContext {
				 get { return "esri_layouts_importLayoutContext"; }
			}
			///<summary>Returns the id string for &quot;Import layout file...&quot; (esri_layouts:ImportDocument, Layouts)</summary>
			public static string esri_layouts_importPAGX {
				 get { return "esri_layouts_importPAGX"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_layouts:OnOpenLayout, Layouts)</summary>
			public static string esri_layouts_projectItem_OpenLayout {
				 get { return "esri_layouts_projectItem_OpenLayout"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_layouts:DeleteLayout, Layouts)</summary>
			public static string esri_layouts_projectItem_RemoveLayout {
				 get { return "esri_layouts_projectItem_RemoveLayout"; }
			}
			///<summary>Returns the id string for &quot;Export to File...&quot; (esri_layouts:OnExportLayoutProjectItem, Layouts)</summary>
			public static string esri_layouts_projectItem_ExportLayout {
				 get { return "esri_layouts_projectItem_ExportLayout"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_layouts:OnOpenLayoutProperties, Layouts)</summary>
			public static string esri_layouts_projectItem_LayoutProperties {
				 get { return "esri_layouts_projectItem_LayoutProperties"; }
			}
			///<summary>Returns the id string for &quot;New Report&quot; (esri_reports_module:Commands.OnOpenReportWizard, Layouts)</summary>
			public static string esri_reports_projectContainer_NewReport {
				 get { return "esri_reports_projectContainer_NewReport"; }
			}
			///<summary>Returns the id string for &quot;New Report&quot; (esri_reports_module:Commands.OnOpenReportWizardForLayer, Layouts)</summary>
			public static string esri_reports_newLayerReport {
				 get { return "esri_reports_newLayerReport"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_mapping:OpenImportReportDocument, Layouts)</summary>
			public static string esri_reports_importReportFile {
				 get { return "esri_reports_importReportFile"; }
			}
			///<summary>Returns the id string for &quot;Import Report&quot; (esri_mapping:OpenImportReportDocument, Layouts)</summary>
			public static string esri_reports_projectContainer_importReportFile {
				 get { return "esri_reports_projectContainer_importReportFile"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_reports_module:Commands.OnOpenReportView, Layouts)</summary>
			public static string esri_reports_projectItem_OpenReportView {
				 get { return "esri_reports_projectItem_OpenReportView"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_reports_module:Commands.OnDeleteReport, Layouts)</summary>
			public static string esri_reports_projectItem_RemoveReport {
				 get { return "esri_reports_projectItem_RemoveReport"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_reports_module:Commands.OnOpenReportProperties, Layouts)</summary>
			public static string esri_reports_projectItem_ReportProperties {
				 get { return "esri_reports_projectItem_ReportProperties"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (esri_reports_module:Commands.OnInsertGroup, Layouts)</summary>
			public static string esri_reports_addGroupButton {
				 get { return "esri_reports_addGroupButton"; }
			}
			///<summary>Returns the id string for &quot;Remove group&quot; (esri_reports_module:Commands.OnRemoveGroup, Layouts)</summary>
			public static string esri_reports_removeGroupButton {
				 get { return "esri_reports_removeGroupButton"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_reports_module:Commands.OnSelectAll, Layouts)</summary>
			public static string esri_reports_selectAllButton {
				 get { return "esri_reports_selectAllButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Selection&quot; (esri_layouts:ClearSelection, Layouts)</summary>
			public static string esri_reports_clearSelectionButton {
				 get { return "esri_reports_clearSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Section&quot; (esri_reports_module:Commands.ZoomToActiveSection, Layouts)</summary>
			public static string esri_reports_zoomToActiveSection {
				 get { return "esri_reports_zoomToActiveSection"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_reports_module:Commands.ReportProperties, Layouts)</summary>
			public static string esri_reports_reportPropertiesButton {
				 get { return "esri_reports_reportPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_reports_module:Commands.ReportPageSetupProperties, Layouts)</summary>
			public static string esri_reports_reportPageSetupPropertiesButton {
				 get { return "esri_reports_reportPageSetupPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Custom page size...&quot; (esri_reports_module:Commands.ReportPageSetupProperties, Layouts)</summary>
			public static string esri_reports_customPageSizeButton {
				 get { return "esri_reports_customPageSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Select page from printer...&quot; (esri_reports_module:Commands.ReportSelectPageFromPrinter, Layouts)</summary>
			public static string esri_reports_customPageSizeFromPrinter {
				 get { return "esri_reports_customPageSizeFromPrinter"; }
			}
			///<summary>Returns the id string for &quot;Zoom to Page&quot; (esri_layouts:ZoomToWholePage, Layouts)</summary>
			public static string esri_reports_pageZoomFullButton {
				 get { return "esri_reports_pageZoomFullButton"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutNavigateCommand, Layouts)</summary>
			public static string esri_reports_navigateContext {
				 get { return "esri_reports_navigateContext"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_layouts:ShowElementDockPane, Layouts)</summary>
			public static string esri_reports_showElementDockPaneButton {
				 get { return "esri_reports_showElementDockPaneButton"; }
			}
		}
		public static partial class Checkbox {
			///<summary>Returns the id string for &quot;Rulers&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShowHideRulersCheckBox, Layouts)</summary>
			public static string esri_layouts_showHideRulersCheck {
				 get { return "esri_layouts_showHideRulersCheck"; }
			}
			///<summary>Returns the id string for &quot;Guides&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShowHideGuidesCheckBox, Layouts)</summary>
			public static string esri_layouts_showHideGuidesCheck {
				 get { return "esri_layouts_showHideGuidesCheck"; }
			}
			///<summary>Returns the id string for &quot;Fixed frame&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarFixedFrame, Layouts)</summary>
			public static string esri_layouts_fixedFrame {
				 get { return "esri_layouts_fixedFrame"; }
			}
			///<summary>Returns the id string for &quot;Show one division before zero&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarShowDivisionsBeforeZero, Layouts)</summary>
			public static string esri_layouts_divisionsBeforeZero {
				 get { return "esri_layouts_divisionsBeforeZero"; }
			}
			///<summary>Returns the id string for &quot;Use fractional characters&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarNumbersFractionalCharecter, Layouts)</summary>
			public static string esri_layouts_numbersFractionalCharecter {
				 get { return "esri_layouts_numbersFractionalCharecter"; }
			}
		}
		public static partial class Combobox {
			///<summary>Returns the id string for &quot;Element Part&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SubElementComboBox, Layouts)</summary>
			public static string esri_layouts_subElementComboBox {
				 get { return "esri_layouts_subElementComboBox"; }
			}
			///<summary>Returns the id string for &quot;Size&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SymbolSizeComboBox, Layouts)</summary>
			public static string esri_layouts_symbolSizeComboBox {
				 get { return "esri_layouts_symbolSizeComboBox"; }
			}
			///<summary>Returns the id string for &quot;Width&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SymbolWidthComboBox, Layouts)</summary>
			public static string esri_layouts_symbolWidthComboBox {
				 get { return "esri_layouts_symbolWidthComboBox"; }
			}
			///<summary>Returns the id string for &quot;Font Size&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.FontSizeComboBox, Layouts)</summary>
			public static string esri_layouts_textSymbolFontSizeComboBox {
				 get { return "esri_layouts_textSymbolFontSizeComboBox"; }
			}
			///<summary>Returns the id string for &quot;Font Style&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.FontStyleComboBox, Layouts)</summary>
			public static string esri_layouts_textSymbolStyleComboBox {
				 get { return "esri_layouts_textSymbolStyleComboBox"; }
			}
			///<summary>Returns the id string for &quot;Resize Behavior&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarResizeBehaviorComboBox, Layouts)</summary>
			public static string esri_layouts_resizeBehaviorComboBox {
				 get { return "esri_layouts_resizeBehaviorComboBox"; }
			}
			///<summary>Returns the id string for &quot;Units&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarUnitsComboBox, Layouts)</summary>
			public static string esri_layouts_unitsComboBox {
				 get { return "esri_layouts_unitsComboBox"; }
			}
			///<summary>Returns the id string for &quot;Label Position&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarLabelPositionComboBox, Layouts)</summary>
			public static string esri_layouts_labelPosition {
				 get { return "esri_layouts_labelPosition"; }
			}
			///<summary>Returns the id string for &quot;Frequency&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarFrequencyMarksComboBox, Layouts)</summary>
			public static string esri_layouts_marksFrequencyComboBox {
				 get { return "esri_layouts_marksFrequencyComboBox"; }
			}
			///<summary>Returns the id string for &quot;Position&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarMarksPositionComboBox, Layouts)</summary>
			public static string esri_layouts_marksPositionComboBox {
				 get { return "esri_layouts_marksPositionComboBox"; }
			}
			///<summary>Returns the id string for &quot;Frequency&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarNumbersFrequencyComboBox, Layouts)</summary>
			public static string esri_layouts_numbersFrequencyComboBox {
				 get { return "esri_layouts_numbersFrequencyComboBox"; }
			}
			///<summary>Returns the id string for &quot;Position&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarNumbersPositionComboBox, Layouts)</summary>
			public static string esri_layouts_numbersPositionComboBox {
				 get { return "esri_layouts_numbersPositionComboBox"; }
			}
			///<summary>Returns the id string for &quot;Type&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NorthTypeComboBox, Layouts)</summary>
			public static string esri_layouts_northTypeComboBox {
				 get { return "esri_layouts_northTypeComboBox"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_layouts_DrawingOrderView&quot; (Component, Layouts)</summary>
			public static string esri_layouts_DrawingOrderView {
				 get { return "esri_layouts_DrawingOrderView"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_TypeOrderView&quot; (Component, Layouts)</summary>
			public static string esri_layouts_TypeOrderView {
				 get { return "esri_layouts_TypeOrderView"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_MapFrameOrderView&quot; (Component, Layouts)</summary>
			public static string esri_layouts_MapFrameOrderView {
				 get { return "esri_layouts_MapFrameOrderView"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_MapSeriesView&quot; (Component, Layouts)</summary>
			public static string esri_layouts_MapSeriesView {
				 get { return "esri_layouts_MapSeriesView"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_DrawingOrderView&quot; (Component, Layouts)</summary>
			public static string esri_reports_DrawingOrderView {
				 get { return "esri_reports_DrawingOrderView"; }
			}
		}
		public static partial class Customcontrol {
			///<summary>Returns the id string for &quot;Size & Position&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SizeAndPositionControlViewModel, Layouts)</summary>
			public static string esri_layouts_sizeAndPositionControl {
				 get { return "esri_layouts_sizeAndPositionControl"; }
			}
			///<summary>Returns the id string for &quot;Color&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TopographicLayoutColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_meterReferenceColorGallery {
				 get { return "esri_layouts_meterReferenceColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Low Band&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarLowBandColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarLowColorGallery {
				 get { return "esri_layouts_elevationGuideBarLowColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Medium Band&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarMediumBandColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarMediumColorGallery {
				 get { return "esri_layouts_elevationGuideBarMediumColorGallery"; }
			}
			///<summary>Returns the id string for &quot;High Band&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarHighBandColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarHighColorGallery {
				 get { return "esri_layouts_elevationGuideBarHighColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Highest Band&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarHighestBandColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarHighestColorGallery {
				 get { return "esri_layouts_elevationGuideBarHighestColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Fill&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DisabledLayoutColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_disabledColorGallery {
				 get { return "esri_layouts_disabledColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Fill&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_fillColorGallery {
				 get { return "esri_layouts_fillColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LineLayoutColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_lineColorGallery {
				 get { return "esri_layouts_lineColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Color&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TextLayoutColorPickerViewModel, Layouts)</summary>
			public static string esri_layouts_textColorGallery {
				 get { return "esri_layouts_textColorGallery"; }
			}
			///<summary>Returns the id string for &quot;Font&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.FontControl, Layouts)</summary>
			public static string esri_layouts_textSymbolFontControl {
				 get { return "esri_layouts_textSymbolFontControl"; }
			}
			///<summary>Returns the id string for &quot;Design General&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneralViewModel, Layouts)</summary>
			public static string esri_reports_generalControl {
				 get { return "esri_reports_generalControl"; }
			}
			///<summary>Returns the id string for &quot;Design Size&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatSizeViewModel, Layouts)</summary>
			public static string esri_reports_sizeControl {
				 get { return "esri_reports_sizeControl"; }
			}
			///<summary>Returns the id string for &quot;Design Exclusion&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatExclusionViewModel, Layouts)</summary>
			public static string esri_reports_exclusionControl {
				 get { return "esri_reports_exclusionControl"; }
			}
			///<summary>Returns the id string for &quot;Design Color&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatColorViewModel, Layouts)</summary>
			public static string esri_reports_colorControl {
				 get { return "esri_reports_colorControl"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Element&quot; (ArcGIS.Desktop.Internal.Layouts.DockPanes.ElementDockPaneVM, Layouts)</summary>
			public static string esri_layouts_elementDockPane {
				 get { return "esri_layouts_elementDockPane"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (ArcGIS.Desktop.Internal.Layouts.DockPanes.ExportDockPaneVM, Layouts)</summary>
			public static string esri_layouts_exportDockPane {
				 get { return "esri_layouts_exportDockPane"; }
			}
			///<summary>Returns the id string for &quot;Check Spelling&quot; (ArcGIS.Desktop.Internal.Layouts.DockPanes.LayoutSpellCheckDockPaneVM, Layouts)</summary>
			public static string esri_layouts_spellCheckDockPane {
				 get { return "esri_layouts_spellCheckDockPane"; }
			}
			///<summary>Returns the id string for &quot;Print Layout&quot; (ArcGIS.Desktop.Internal.Layouts.DockPanes.PrintDockPaneVM, Layouts)</summary>
			public static string esri_layouts_printDockPane {
				 get { return "esri_layouts_printDockPane"; }
			}
			///<summary>Returns the id string for &quot;Create New Report&quot; (ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDockPaneVM, Layouts)</summary>
			public static string esri_reports_reportsWizardDockPane {
				 get { return "esri_reports_reportsWizardDockPane"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Add Field&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TableFrameFieldsMenu, Layouts)</summary>
			public static string esri_layouts_addFieldToTableMenu {
				 get { return "esri_layouts_addFieldToTableMenu"; }
			}
			///<summary>Returns the id string for &quot;Use existing map&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DynamicMapMenu, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameSource_Existing {
				 get { return "esri_layouts_reshapeMapFrameSource_Existing"; }
			}
		}
		public static partial class Editbox {
			///<summary>Returns the id string for &quot;Calibration Angle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NorthCalibrationAngleEditBox, Layouts)</summary>
			public static string esri_layouts_northCalibrationAngleEditBox {
				 get { return "esri_layouts_northCalibrationAngleEditBox"; }
			}
			///<summary>Returns the id string for &quot;Calculated Angle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NorthCalculatedAngleEditBox, Layouts)</summary>
			public static string esri_layouts_northCalculatedAngleEditBox {
				 get { return "esri_layouts_northCalculatedAngleEditBox"; }
			}
			///<summary>Returns the id string for &quot;Division Value&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarDivisionEditBox, Layouts)</summary>
			public static string esri_layouts_divisionsEditBox {
				 get { return "esri_layouts_divisionsEditBox"; }
			}
			///<summary>Returns the id string for &quot;Label&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarLabelEditBox, Layouts)</summary>
			public static string esri_layouts_label {
				 get { return "esri_layouts_label"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;New Layout&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutGalleryViewModel, Layouts)</summary>
			public static string esri_layouts_gallery {
				 get { return "esri_layouts_gallery"; }
			}
			///<summary>Returns the id string for &quot;Import Layout&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TemplateGalleryViewModel, Layouts)</summary>
			public static string esri_layouts_templateGallery {
				 get { return "esri_layouts_templateGallery"; }
			}
			///<summary>Returns the id string for &quot;Orientation&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PageOrientationViewModel, Layouts)</summary>
			public static string esri_layouts_pageOrientationGallery {
				 get { return "esri_layouts_pageOrientationGallery"; }
			}
			///<summary>Returns the id string for &quot;Size&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PageSizeViewModel, Layouts)</summary>
			public static string esri_layouts_pageSizeGallery {
				 get { return "esri_layouts_pageSizeGallery"; }
			}
			///<summary>Returns the id string for &quot;&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MapSeriesGalleryViewModel, Layouts)</summary>
			public static string esri_layouts_seriesGallery {
				 get { return "esri_layouts_seriesGallery"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PolygonStyleGallery, Layouts)</summary>
			public static string esri_layouts_polygonStyleGallery {
				 get { return "esri_layouts_polygonStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Polygon Symbol&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PolygonStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_polygonStyleGalleryInLine {
				 get { return "esri_layouts_polygonStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LineStyleGallery, Layouts)</summary>
			public static string esri_layouts_lineStyleGallery {
				 get { return "esri_layouts_lineStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LineStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_lineStyleGalleryInLine {
				 get { return "esri_layouts_lineStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PointStyleGallery, Layouts)</summary>
			public static string esri_layouts_pointStyleGallery {
				 get { return "esri_layouts_pointStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Point&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PointStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_pointStyleGalleryInLine {
				 get { return "esri_layouts_pointStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TextStyleGallery, Layouts)</summary>
			public static string esri_layouts_textStyleGallery {
				 get { return "esri_layouts_textStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Text&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TextStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_textStyleGalleryInLine {
				 get { return "esri_layouts_textStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Dynamic Text&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.DynamicTextGallery, Layouts)</summary>
			public static string esri_layouts_dynamicTextGallery {
				 get { return "esri_layouts_dynamicTextGallery"; }
			}
			///<summary>Returns the id string for &quot;Background&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.BackgroundStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_backgroundStyleGalleryInLine {
				 get { return "esri_layouts_backgroundStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Border&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.BorderStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_borderStyleGalleryInLine {
				 get { return "esri_layouts_borderStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Drop Shadow&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ShadowStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_shadowStyleGalleryInLine {
				 get { return "esri_layouts_shadowStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;North Arrow&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NorthArrowStyleGallery, Layouts)</summary>
			public static string esri_layouts_northArrowStyleGallery {
				 get { return "esri_layouts_northArrowStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;North Arrow&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NorthArrowStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_northArrowStyleGalleryInLine {
				 get { return "esri_layouts_northArrowStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Scale Bar&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarStyleGallery, Layouts)</summary>
			public static string esri_layouts_scaleBarStyleGallery {
				 get { return "esri_layouts_scaleBarStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Scale Bar&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_scaleBarStyleGalleryInLine {
				 get { return "esri_layouts_scaleBarStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;North Arrow&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.TopoNorthArrowStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowStyleGalleryInLine {
				 get { return "esri_layouts_topoNorthArrowStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Meter Reference Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MeterReferenceStyleGallery, Layouts)</summary>
			public static string esri_layouts_meterReferenceStyleGallery {
				 get { return "esri_layouts_meterReferenceStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Meter Reference Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MeterReferenceStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_meterReferenceStyleGalleryInLine {
				 get { return "esri_layouts_meterReferenceStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Slope Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.SlopeGuideStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_slopeGuideStyleGalleryInLine {
				 get { return "esri_layouts_slopeGuideStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Elevation Guide Bar&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarStyleGallery, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarStyleGallery {
				 get { return "esri_layouts_elevationGuideBarStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Elevation Guide Bar&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ElevationGuideBarStyleGalleryInLine, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarStyleGalleryInLine {
				 get { return "esri_layouts_elevationGuideBarStyleGalleryInLine"; }
			}
			///<summary>Returns the id string for &quot;Map Frame&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewMapFrameSourceGallery, Layouts)</summary>
			public static string esri_layouts_newMapFrameGallery {
				 get { return "esri_layouts_newMapFrameGallery"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MapFrameSourceGallery, Layouts)</summary>
			public static string esri_layouts_mapFrameSourceGallery {
				 get { return "esri_layouts_mapFrameSourceGallery"; }
			}
			///<summary>Returns the id string for &quot;Map Frame&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MapSurroundMapFrameGallery, Layouts)</summary>
			public static string esri_layouts_mapSurroundMapFrameGallery {
				 get { return "esri_layouts_mapSurroundMapFrameGallery"; }
			}
			///<summary>Returns the id string for &quot;Extent Indicator&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewExtentIndicatorMapFrameGallery, Layouts)</summary>
			public static string esri_layouts_newExtentIndicatorMapFrameGallery {
				 get { return "esri_layouts_newExtentIndicatorMapFrameGallery"; }
			}
			///<summary>Returns the id string for &quot;Grid&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.MapGridStyleGallery, Layouts)</summary>
			public static string esri_layouts_newMapGridStyleGallery {
				 get { return "esri_layouts_newMapGridStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Chart Frame&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ChartGalleryViewModel, Layouts)</summary>
			public static string esri_layouts_newChartGallery {
				 get { return "esri_layouts_newChartGallery"; }
			}
			///<summary>Returns the id string for &quot;Additional Surrounds&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ProductionToolGalleryViewModel, Layouts)</summary>
			public static string esri_layouts_newProductionToolGallery {
				 get { return "esri_layouts_newProductionToolGallery"; }
			}
			///<summary>Returns the id string for &quot;Dynamic Text&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGallery, Layouts)</summary>
			public static string esri_reports_dynamicTextGallery {
				 get { return "esri_reports_dynamicTextGallery"; }
			}
			///<summary>Returns the id string for &quot;Orientation&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportPageOrientationGallery, Layouts)</summary>
			public static string esri_reports_pageOrientationGallery {
				 get { return "esri_reports_pageOrientationGallery"; }
			}
			///<summary>Returns the id string for &quot;Size&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportPageSizeGallery, Layouts)</summary>
			public static string esri_reports_pageSizeGallery {
				 get { return "esri_reports_pageSizeGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Project&quot; (Group, Layouts)</summary>
			public static string esri_project_layout {
				 get { return "esri_project_layout"; }
			}
			///<summary>Returns the id string for &quot;Clipboard&quot; (Group, Layouts)</summary>
			public static string esri_layouts_clipboardGroup {
				 get { return "esri_layouts_clipboardGroup"; }
			}
			///<summary>Returns the id string for &quot;Page Setup&quot; (Group, Layouts)</summary>
			public static string esri_layouts_pageDesignGroup {
				 get { return "esri_layouts_pageDesignGroup"; }
			}
			///<summary>Returns the id string for &quot;Show&quot; (Group, Layouts)</summary>
			public static string esri_layouts_pageShowGroup {
				 get { return "esri_layouts_pageShowGroup"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (Group, Layouts)</summary>
			public static string esri_layouts_pageNavigateGroup {
				 get { return "esri_layouts_pageNavigateGroup"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (Group, Layouts)</summary>
			public static string esri_layouts_mapActivatedPageNavigateGroup {
				 get { return "esri_layouts_mapActivatedPageNavigateGroup"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (Group, Layouts)</summary>
			public static string esri_layouts_mapFrameGroup {
				 get { return "esri_layouts_mapFrameGroup"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (Group, Layouts)</summary>
			public static string esri_layouts_activatedMapGroup {
				 get { return "esri_layouts_activatedMapGroup"; }
			}
			///<summary>Returns the id string for &quot;Elements&quot; (Group, Layouts)</summary>
			public static string esri_layouts_selectionGroup {
				 get { return "esri_layouts_selectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Review&quot; (Group, Layouts)</summary>
			public static string esri_layouts_reviewGroup {
				 get { return "esri_layouts_reviewGroup"; }
			}
			///<summary>Returns the id string for &quot;Map Frames&quot; (Group, Layouts)</summary>
			public static string esri_layouts_insertMapFrameGroup {
				 get { return "esri_layouts_insertMapFrameGroup"; }
			}
			///<summary>Returns the id string for &quot;Map Surrounds&quot; (Group, Layouts)</summary>
			public static string esri_layouts_insertMapSurroundGroup {
				 get { return "esri_layouts_insertMapSurroundGroup"; }
			}
			///<summary>Returns the id string for &quot;Text&quot; (Group, Layouts)</summary>
			public static string esri_layouts_insertTextGroup {
				 get { return "esri_layouts_insertTextGroup"; }
			}
			///<summary>Returns the id string for &quot;Graphics&quot; (Group, Layouts)</summary>
			public static string esri_layouts_insertGraphicGroup {
				 get { return "esri_layouts_insertGraphicGroup"; }
			}
			///<summary>Returns the id string for &quot;Edit&quot; (Group, Layouts)</summary>
			public static string esri_layouts_editGraphicGroup {
				 get { return "esri_layouts_editGraphicGroup"; }
			}
			///<summary>Returns the id string for &quot;Current Selection&quot; (Group, Layouts)</summary>
			public static string esri_layouts_subElementGroup {
				 get { return "esri_layouts_subElementGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_polygonFormatGroup {
				 get { return "esri_layouts_polygonFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_lineFormatGroup {
				 get { return "esri_layouts_lineFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_pointFormatGroup {
				 get { return "esri_layouts_pointFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_textFormatGroup {
				 get { return "esri_layouts_textFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Background&quot; (Group, Layouts)</summary>
			public static string esri_layouts_backgroundFormatGroup {
				 get { return "esri_layouts_backgroundFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Border&quot; (Group, Layouts)</summary>
			public static string esri_layouts_borderFormatGroup {
				 get { return "esri_layouts_borderFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Drop Shadow&quot; (Group, Layouts)</summary>
			public static string esri_layouts_shadowFormatGroup {
				 get { return "esri_layouts_shadowFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_northArrowFormatGroup {
				 get { return "esri_layouts_northArrowFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_scaleBarFormatGroup {
				 get { return "esri_layouts_scaleBarFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowFormatGroup {
				 get { return "esri_layouts_topoNorthArrowFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_meterReferenceFormatGroup {
				 get { return "esri_layouts_meterReferenceFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarFormatGroup {
				 get { return "esri_layouts_elevationGuideBarFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Symbol&quot; (Group, Layouts)</summary>
			public static string esri_layouts_slopeGuideFormatGroup {
				 get { return "esri_layouts_slopeGuideFormatGroup"; }
			}
			///<summary>Returns the id string for &quot;Map Frame&quot; (Group, Layouts)</summary>
			public static string esri_layouts_mapSurroundMapFrameGroup {
				 get { return "esri_layouts_mapSurroundMapFrameGroup"; }
			}
			///<summary>Returns the id string for &quot;Angle&quot; (Group, Layouts)</summary>
			public static string esri_layouts_northArrowAngleGroup {
				 get { return "esri_layouts_northArrowAngleGroup"; }
			}
			///<summary>Returns the id string for &quot;Divisions&quot; (Group, Layouts)</summary>
			public static string esri_layouts_scaleBarDivisionsGroup {
				 get { return "esri_layouts_scaleBarDivisionsGroup"; }
			}
			///<summary>Returns the id string for &quot;Units&quot; (Group, Layouts)</summary>
			public static string esri_layouts_scaleBarUnitsGroup {
				 get { return "esri_layouts_scaleBarUnitsGroup"; }
			}
			///<summary>Returns the id string for &quot;Marks&quot; (Group, Layouts)</summary>
			public static string esri_layouts_scaleBarMarksGroup {
				 get { return "esri_layouts_scaleBarMarksGroup"; }
			}
			///<summary>Returns the id string for &quot;Numbers&quot; (Group, Layouts)</summary>
			public static string esri_layouts_scaleBarNumbersGroup {
				 get { return "esri_layouts_scaleBarNumbersGroup"; }
			}
			///<summary>Returns the id string for &quot;Arrange&quot; (Group, Layouts)</summary>
			public static string esri_layouts_arrangeGroup {
				 get { return "esri_layouts_arrangeGroup"; }
			}
			///<summary>Returns the id string for &quot;Size & Position&quot; (Group, Layouts)</summary>
			public static string esri_layouts_sizeAndPositionGroup {
				 get { return "esri_layouts_sizeAndPositionGroup"; }
			}
			///<summary>Returns the id string for &quot;Thumbnail&quot; (Group, Layouts)</summary>
			public static string esri_layouts_thumbnailGroup {
				 get { return "esri_layouts_thumbnailGroup"; }
			}
			///<summary>Returns the id string for &quot;Overprint&quot; (Group, Layouts)</summary>
			public static string esri_layouts_overprintGroup {
				 get { return "esri_layouts_overprintGroup"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (Group, Layouts)</summary>
			public static string esri_reports_pageNavigateGroup {
				 get { return "esri_reports_pageNavigateGroup"; }
			}
			///<summary>Returns the id string for &quot;Elements&quot; (Group, Layouts)</summary>
			public static string esri_reports_selectionGroup {
				 get { return "esri_reports_selectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Page Setup&quot; (Group, Layouts)</summary>
			public static string esri_reports_pageDesignGroup {
				 get { return "esri_reports_pageDesignGroup"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Group, Layouts)</summary>
			public static string esri_reports_insertDataGroup {
				 get { return "esri_reports_insertDataGroup"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (Group, Layouts)</summary>
			public static string esri_reports_generalGroup {
				 get { return "esri_reports_generalGroup"; }
			}
			///<summary>Returns the id string for &quot;Size&quot; (Group, Layouts)</summary>
			public static string esri_reports_sizeGroup {
				 get { return "esri_reports_sizeGroup"; }
			}
			///<summary>Returns the id string for &quot;Exclusion&quot; (Group, Layouts)</summary>
			public static string esri_reports_exclusionGroup {
				 get { return "esri_reports_exclusionGroup"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Group, Layouts)</summary>
			public static string esri_reports_colorGroup {
				 get { return "esri_reports_colorGroup"; }
			}
			///<summary>Returns the id string for &quot;Text&quot; (Group, Layouts)</summary>
			public static string esri_reports_insertTextGroup {
				 get { return "esri_reports_insertTextGroup"; }
			}
			///<summary>Returns the id string for &quot;Graphics&quot; (Group, Layouts)</summary>
			public static string esri_reports_insertGraphicGroup {
				 get { return "esri_reports_insertGraphicGroup"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (Group, Layouts)</summary>
			public static string esri_project_report {
				 get { return "esri_project_report"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_layouts_tocViews&quot; (Category, Layouts)</summary>
			public static string esri_layouts_tocViews {
				 get { return "esri_layouts_tocViews"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_tocViews&quot; (Category, Layouts)</summary>
			public static string esri_reports_tocViews {
				 get { return "esri_reports_tocViews"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_layouts_container&quot; (ArcGIS.Desktop.Internal.Layouts.LayoutContainer, Layouts)</summary>
			public static string esri_layouts_container {
				 get { return "esri_layouts_container"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_container&quot; (ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer, Layouts)</summary>
			public static string esri_reports_container {
				 get { return "esri_reports_container"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_LayoutProjectItem&quot; (ArcGIS.Desktop.Internal.Layouts.LayoutProjectItem, Layouts)</summary>
			public static string esri_itemInfoType_LayoutProjectItem {
				 get { return "esri_itemInfoType_LayoutProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_ReportProjectItem&quot; (ArcGIS.Desktop.Internal.Reports.ReportProjectItem, Layouts)</summary>
			public static string esri_itemInfoType_ReportProjectItem {
				 get { return "esri_itemInfoType_ReportProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_layout_styleFileManagerProps&quot; (ArcGIS.Desktop.Internal.Layouts.Utilities.StyleFileManagerProps, Layouts)</summary>
			public static string esri_layout_styleFileManagerProps {
				 get { return "esri_layout_styleFileManagerProps"; }
			}
			///<summary>Returns the id string for &quot;raster_tga&quot; (Component, Layouts)</summary>
			public static string raster_tga {
				 get { return "raster_tga"; }
			}
			///<summary>Returns the id string for &quot;raster_jpg&quot; (Component, Layouts)</summary>
			public static string raster_jpg {
				 get { return "raster_jpg"; }
			}
			///<summary>Returns the id string for &quot;raster_svgz&quot; (Component, Layouts)</summary>
			public static string raster_svgz {
				 get { return "raster_svgz"; }
			}
			///<summary>Returns the id string for &quot;raster_svg&quot; (Component, Layouts)</summary>
			public static string raster_svg {
				 get { return "raster_svg"; }
			}
			///<summary>Returns the id string for &quot;raster_eps&quot; (Component, Layouts)</summary>
			public static string raster_eps {
				 get { return "raster_eps"; }
			}
			///<summary>Returns the id string for &quot;raster_emf&quot; (Component, Layouts)</summary>
			public static string raster_emf {
				 get { return "raster_emf"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_reportSources&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_composite_reportSources {
				 get { return "esri_browseDialogFilters_composite_reportSources"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_composite_reportSourcesMap&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_composite_reportSourcesMap {
				 get { return "esri_browseDialogFilters_composite_reportSourcesMap"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_pngExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_pngExport {
				 get { return "esri_browseDialogFilters_pngExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_pdfExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_pdfExport {
				 get { return "esri_browseDialogFilters_pdfExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_gifExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_gifExport {
				 get { return "esri_browseDialogFilters_gifExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_bmpExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_bmpExport {
				 get { return "esri_browseDialogFilters_bmpExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tgaExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_tgaExport {
				 get { return "esri_browseDialogFilters_tgaExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_tiffExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_tiffExport {
				 get { return "esri_browseDialogFilters_tiffExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_jpgExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_jpgExport {
				 get { return "esri_browseDialogFilters_jpgExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_svgzExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_svgzExport {
				 get { return "esri_browseDialogFilters_svgzExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_svgExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_svgExport {
				 get { return "esri_browseDialogFilters_svgExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_epsExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_epsExport {
				 get { return "esri_browseDialogFilters_epsExport"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_emfExport&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Layouts)</summary>
			public static string esri_browseDialogFilters_emfExport {
				 get { return "esri_browseDialogFilters_emfExport"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;&quot; (Condition, Layouts)</summary>
			public static string esri_LayoutContainer {
				 get { return "esri_LayoutContainer"; }
			}
			///<summary>Returns the id string for &quot;A map is activated&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_mapActivatedCondition {
				 get { return "esri_layouts_mapActivatedCondition"; }
			}
			///<summary>Returns the id string for &quot;All layout states&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_condition {
				 get { return "esri_layouts_condition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_layoutPaneCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_layoutPaneCondition {
				 get { return "esri_layouts_layoutPaneCondition"; }
			}
			///<summary>Returns the id string for &quot;Show map series contexutual tab.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_mapSeriesDesignCondition {
				 get { return "esri_layouts_mapSeriesDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;An element is selected.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_singleElementSelectedCondition {
				 get { return "esri_layouts_singleElementSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Elements or element parts are selected in the active layout view.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_selectedElementOrPartsCondition {
				 get { return "esri_layouts_selectedElementOrPartsCondition"; }
			}
			///<summary>Returns the id string for &quot;Elements are selected in the active layout view.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_selectedElementsCondition {
				 get { return "esri_layouts_selectedElementsCondition"; }
			}
			///<summary>Returns the id string for &quot;Elements are selected in the active layout view and FORMAT selection is set to the whole element not a part.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_selectedElementsNotPartsCondition {
				 get { return "esri_layouts_selectedElementsNotPartsCondition"; }
			}
			///<summary>Returns the id string for &quot;The selected elements can be grouped.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_canGroupElementsCondition {
				 get { return "esri_layouts_canGroupElementsCondition"; }
			}
			///<summary>Returns the id string for &quot;Group elements are selected in the active layout view.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_selectedGroupElementsCondition {
				 get { return "esri_layouts_selectedGroupElementsCondition"; }
			}
			///<summary>Returns the id string for &quot;Map surrounds are selected in the active layout view.&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_selectedMapSurroundsCondition {
				 get { return "esri_layouts_selectedMapSurroundsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_northArrowDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_northArrowDesignCondition {
				 get { return "esri_layouts_northArrowDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_meterReferenceDesignCondition {
				 get { return "esri_layouts_meterReferenceDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarDesignCondition {
				 get { return "esri_layouts_elevationGuideBarDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_slopeGuideDesignCondition {
				 get { return "esri_layouts_slopeGuideDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_scaleBarDesignCondition {
				 get { return "esri_layouts_scaleBarDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapFrameDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_mapFrameDesignCondition {
				 get { return "esri_layouts_mapFrameDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiMapSurroundDesignCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_multiMapSurroundDesignCondition {
				 get { return "esri_layouts_multiMapSurroundDesignCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_pointGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_pointGroupCondition {
				 get { return "esri_layouts_pointGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_lineGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_lineGroupCondition {
				 get { return "esri_layouts_lineGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_polygonGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_polygonGroupCondition {
				 get { return "esri_layouts_polygonGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_subElementGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_subElementGroupCondition {
				 get { return "esri_layouts_subElementGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_backgroundGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_backgroundGroupCondition {
				 get { return "esri_layouts_backgroundGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_borderGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_borderGroupCondition {
				 get { return "esri_layouts_borderGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_shadowGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_shadowGroupCondition {
				 get { return "esri_layouts_shadowGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_editGroupCondition&quot; (Condition, Layouts)</summary>
			public static string esri_layouts_editGroupCondition {
				 get { return "esri_layouts_editGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_pageHeaderFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_pageHeaderFormatCondition {
				 get { return "esri_reports_pageHeaderFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportHeaderFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_reportHeaderFormatCondition {
				 get { return "esri_reports_reportHeaderFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_groupHeaderFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_groupHeaderFormatCondition {
				 get { return "esri_reports_groupHeaderFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_detailsFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_detailsFormatCondition {
				 get { return "esri_reports_detailsFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_pageFooterFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_pageFooterFormatCondition {
				 get { return "esri_reports_pageFooterFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportFooterFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_reportFooterFormatCondition {
				 get { return "esri_reports_reportFooterFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_groupFooterFormatCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_groupFooterFormatCondition {
				 get { return "esri_reports_groupFooterFormatCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportSectionActiveCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_reportSectionActiveCondition {
				 get { return "esri_reports_reportSectionActiveCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_canAddFieldElementCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_canAddFieldElementCondition {
				 get { return "esri_reports_canAddFieldElementCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_canAddFieldStatisticElementCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_canAddFieldStatisticElementCondition {
				 get { return "esri_reports_canAddFieldStatisticElementCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_canAddElementCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_canAddElementCondition {
				 get { return "esri_reports_canAddElementCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Layouts)</summary>
			public static string esri_ReportContainer {
				 get { return "esri_ReportContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportSourceConnectedCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_reportSourceConnectedCondition {
				 get { return "esri_reports_reportSourceConnectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_canAddAttachmentElementCondition&quot; (Condition, Layouts)</summary>
			public static string esri_reports_canAddAttachmentElementCondition {
				 get { return "esri_reports_canAddAttachmentElementCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Layout&quot; (LayoutsModule, Layouts)</summary>
			public static string esri_layouts {
				 get { return "esri_layouts"; }
			}
			///<summary>Returns the id string for &quot;Reports&quot; (ArcGIS.Desktop.Reports.ReportsModule, Layouts)</summary>
			public static string esri_reports_module {
				 get { return "esri_reports_module"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Page Query&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageQueryViewModel, Layouts)</summary>
			public static string esri_layouts_pageQueryPage {
				 get { return "esri_layouts_pageQueryPage"; }
			}
			///<summary>Returns the id string for &quot;Layout&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.LayoutBackstagePageViewModel, Layouts)</summary>
			public static string esri_layouts_layoutPage {
				 get { return "esri_layouts_layoutPage"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Layout Properties&quot; (Sheet, Layouts)</summary>
			public static string esri_layouts_propertySheet {
				 get { return "esri_layouts_propertySheet"; }
			}
			///<summary>Returns the id string for &quot;Map Frame Properties&quot; (Sheet, Layouts)</summary>
			public static string esri_layouts_mapFramePropertySheet {
				 get { return "esri_layouts_mapFramePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Map Frame Properties&quot; (Sheet, Layouts)</summary>
			public static string esri_layouts_MapFrameMultiPropertySheet {
				 get { return "esri_layouts_MapFrameMultiPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Report Properties&quot; (Sheet, Layouts)</summary>
			public static string esri_reports_propertySheet {
				 get { return "esri_reports_propertySheet"; }
			}
		}
		public static partial class Wizard {
			///<summary>Returns the id string for &quot;Create New Report&quot; (Wizard, Layouts)</summary>
			public static string esri_reports_reportsWizard {
				 get { return "esri_reports_reportsWizard"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Layout Filter&quot; (Menu, Layouts)</summary>
			public static string esri_mapping_tocLayoutFilterMenu {
				 get { return "esri_mapping_tocLayoutFilterMenu"; }
			}
			///<summary>Returns the id string for &quot;New Layout&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_projectContainer {
				 get { return "esri_layouts_projectContainer"; }
			}
			///<summary>Returns the id string for &quot;Layout Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_projectItem {
				 get { return "esri_layouts_projectItem"; }
			}
			///<summary>Returns the id string for &quot;Layout Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_layoutContextMenu {
				 get { return "esri_layouts_layoutContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Map Series Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_mapSeriesContextMenu {
				 get { return "esri_layouts_mapSeriesContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Layout Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_categoryContextMenu {
				 get { return "esri_layouts_categoryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Map Series Page Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_mapSeriesPageContextMenu {
				 get { return "esri_layouts_mapSeriesPageContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Ruler&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_rulerContextMenu {
				 get { return "esri_layouts_rulerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Guide&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_guideContextMenu {
				 get { return "esri_layouts_guideContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Element Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_elementBasicSubMenu {
				 get { return "esri_layouts_elementBasicSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Element Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_elementContextMenu {
				 get { return "esri_layouts_elementContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupElementContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_groupElementContextMenu {
				 get { return "esri_layouts_groupElementContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Chart Frame Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_chartContextMenu {
				 get { return "esri_layouts_chartContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Legend Item Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_legendItemContextMenu {
				 get { return "esri_layouts_legendItemContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Table Frame Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_tableFrameContextMenu {
				 get { return "esri_layouts_tableFrameContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Field Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_tableFrameFieldContextMenu {
				 get { return "esri_layouts_tableFrameFieldContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Legend Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_legendContextMenu {
				 get { return "esri_layouts_legendContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Map Frame Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_mapFrameContextMenu {
				 get { return "esri_layouts_mapFrameContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Extent Indicator Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_extentIndicatorContextMenu {
				 get { return "esri_layouts_extentIndicatorContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Grid Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_gridContextMenu {
				 get { return "esri_layouts_gridContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Text Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_textContextMenu {
				 get { return "esri_layouts_textContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Align&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_alignMenu {
				 get { return "esri_layouts_alignMenu"; }
			}
			///<summary>Returns the id string for &quot;Segment Sketch Context Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_SegmentSketchContextMenu {
				 get { return "esri_layouts_SegmentSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Change Segment&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_ChangeSegmentMenu {
				 get { return "esri_layouts_ChangeSegmentMenu"; }
			}
			///<summary>Returns the id string for &quot;Vertex Sketch Context Menu&quot; (Menu, Layouts)</summary>
			public static string esri_layouts_VertexSketchContextMenu {
				 get { return "esri_layouts_VertexSketchContextMenu"; }
			}
			///<summary>Returns the id string for &quot;New Layout&quot; (Menu, Layouts)</summary>
			public static string esri_reports_projectContainerMenu {
				 get { return "esri_reports_projectContainerMenu"; }
			}
			///<summary>Returns the id string for &quot;Report Menu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_projectItemMenu {
				 get { return "esri_reports_projectItemMenu"; }
			}
			///<summary>Returns the id string for &quot;Reports Menu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportsContextMenu {
				 get { return "esri_reports_reportsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_report_reportElementInlineMenu&quot; (Menu, Layouts)</summary>
			public static string esri_report_reportElementInlineMenu {
				 get { return "esri_report_reportElementInlineMenu"; }
			}
			///<summary>Returns the id string for &quot;Element Menu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_elementBasicSubMenu {
				 get { return "esri_reports_elementBasicSubMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportSectionContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportSectionContextMenu {
				 get { return "esri_reports_reportSectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportHeaderContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportHeaderContextMenu {
				 get { return "esri_reports_reportHeaderContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportFooterContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportFooterContextMenu {
				 get { return "esri_reports_reportFooterContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportPageHeaderContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportPageHeaderContextMenu {
				 get { return "esri_reports_reportPageHeaderContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportPageFooterContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportPageFooterContextMenu {
				 get { return "esri_reports_reportPageFooterContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportGroupHeaderContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportGroupHeaderContextMenu {
				 get { return "esri_reports_reportGroupHeaderContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportGroupFooterContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportGroupFooterContextMenu {
				 get { return "esri_reports_reportGroupFooterContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_reportDetailsContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_reportDetailsContextMenu {
				 get { return "esri_reports_reportDetailsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Element Menu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_elementContextMenu {
				 get { return "esri_reports_elementContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_textElementContextMenu&quot; (Menu, Layouts)</summary>
			public static string esri_reports_textElementContextMenu {
				 get { return "esri_reports_textElementContextMenu"; }
			}
		}
		public static partial class Minitoolbar {
			///<summary>Returns the id string for &quot;esri_layouts_SketchToolbar&quot; (Minitoolbar, Layouts)</summary>
			public static string esri_layouts_SketchToolbar {
				 get { return "esri_layouts_SketchToolbar"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Set the data source&quot; (ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardHomePageVM, Layouts)</summary>
			public static string esri_reports_reportsWizardHomePage {
				 get { return "esri_reports_reportsWizardHomePage"; }
			}
			///<summary>Returns the id string for &quot;Filter the data&quot; (ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDataPageVM, Layouts)</summary>
			public static string esri_reports_reportsWizardDataPage {
				 get { return "esri_reports_reportsWizardDataPage"; }
			}
			///<summary>Returns the id string for &quot;Organize the data&quot; (ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardOrganizePageVM, Layouts)</summary>
			public static string esri_reports_reportsWizardOrganizePage {
				 get { return "esri_reports_reportsWizardOrganizePage"; }
			}
			///<summary>Returns the id string for &quot;Design the report&quot; (ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDesignPageVM, Layouts)</summary>
			public static string esri_reports_reportsWizardDesignPage {
				 get { return "esri_reports_reportsWizardDesignPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.GeneralLayoutPropertiesPageViewModel, Layouts)</summary>
			public static string esri_layouts_layoutGeneralPage {
				 get { return "esri_layouts_layoutGeneralPage"; }
			}
			///<summary>Returns the id string for &quot;Page Setup&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageSetupPageViewModel, Layouts)</summary>
			public static string esri_layouts_layoutSetupPage {
				 get { return "esri_layouts_layoutSetupPage"; }
			}
			///<summary>Returns the id string for &quot;Map Series&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.MapSeriesPageViewModel, Layouts)</summary>
			public static string esri_layouts_mapSeriesPage {
				 get { return "esri_layouts_mapSeriesPage"; }
			}
			///<summary>Returns the id string for &quot;Color Management&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.ColorManagementViewModel, Layouts)</summary>
			public static string esri_layouts_colorManagementPage {
				 get { return "esri_layouts_colorManagementPage"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (ArcGIS.Desktop.Internal.Layouts.PropertyPages.MapFrameViewPageViewModel, Layouts)</summary>
			public static string esri_layouts_mapFrameViewPage {
				 get { return "esri_layouts_mapFrameViewPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportGeneralPropPageViewModel, Layouts)</summary>
			public static string esri_reports_reportGeneralPage {
				 get { return "esri_reports_reportGeneralPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportSourcePropPageViewModel, Layouts)</summary>
			public static string esri_reports_reportSourcePage {
				 get { return "esri_reports_reportSourcePage"; }
			}
			///<summary>Returns the id string for &quot;Grouping and Sorting&quot; (ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportGroupSortPropPageViewModel, Layouts)</summary>
			public static string esri_reports_reportGroupSortPage {
				 get { return "esri_reports_reportGroupSortPage"; }
			}
			///<summary>Returns the id string for &quot;Page Setup&quot; (ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportPageSetupPropPageViewModel, Layouts)</summary>
			public static string esri_reports_reportPageSetupPage {
				 get { return "esri_reports_reportPageSetupPage"; }
			}
			///<summary>Returns the id string for &quot;Color Management&quot; (ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportColorManagementPropPageViewModel, Layouts)</summary>
			public static string esri_reports_reportColorManagementPropPage {
				 get { return "esri_reports_reportColorManagementPropPage"; }
			}
		}
		public static partial class Pane {
			///<summary>Returns the id string for &quot;Layout&quot; (LayoutPaneViewModel, Layouts)</summary>
			public static string esri_layouts_layoutPane {
				 get { return "esri_layouts_layoutPane"; }
			}
			///<summary>Returns the id string for &quot;Report&quot; (ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel, Layouts)</summary>
			public static string esri_reports_reportPane {
				 get { return "esri_reports_reportPane"; }
			}
		}
		public static partial class Spinner {
			///<summary>Returns the id string for &quot;Divisions&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarDivisionsSpinner, Layouts)</summary>
			public static string esri_layouts_numDivisionsSpinner {
				 get { return "esri_layouts_numDivisionsSpinner"; }
			}
			///<summary>Returns the id string for &quot;Subdivisions&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ScaleBarSubdivisionsSpinner, Layouts)</summary>
			public static string esri_layouts_numSubDivisionsSpinner {
				 get { return "esri_layouts_numSubDivisionsSpinner"; }
			}
		}
		public static partial class Splitbutton {
			///<summary>Returns the id string for &quot;esri_layouts_newNorthArrowSplitButton&quot; (Splitbutton, Layouts)</summary>
			public static string esri_layouts_newNorthArrowSplitButton {
				 get { return "esri_layouts_newNorthArrowSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newScaleBarSplitButton&quot; (Splitbutton, Layouts)</summary>
			public static string esri_layouts_newScaleBarSplitButton {
				 get { return "esri_layouts_newScaleBarSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newChartSplitButton&quot; (Splitbutton, Layouts)</summary>
			public static string esri_layouts_newChartSplitButton {
				 get { return "esri_layouts_newChartSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newProductionSplitButton&quot; (Splitbutton, Layouts)</summary>
			public static string esri_layouts_newProductionSplitButton {
				 get { return "esri_layouts_newProductionSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapSeriesSplitButton&quot; (Splitbutton, Layouts)</summary>
			public static string esri_layouts_mapSeriesSplitButton {
				 get { return "esri_layouts_mapSeriesSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_newReportSplitButton&quot; (Splitbutton, Layouts)</summary>
			public static string esri_reports_newReportSplitButton {
				 get { return "esri_reports_newReportSplitButton"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_layouts_mapFrameActivated&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapFrameActivated {
				 get { return "esri_layouts_mapFrameActivated"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapSeriesContents&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapSeriesContents {
				 get { return "esri_layouts_mapSeriesContents"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_singleElementSelected&quot; (State, Layouts)</summary>
			public static string esri_layouts_singleElementSelected {
				 get { return "esri_layouts_singleElementSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_selectedElementOrParts&quot; (State, Layouts)</summary>
			public static string esri_layouts_selectedElementOrParts {
				 get { return "esri_layouts_selectedElementOrParts"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_selectedElements&quot; (State, Layouts)</summary>
			public static string esri_layouts_selectedElements {
				 get { return "esri_layouts_selectedElements"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_subElementWhole&quot; (State, Layouts)</summary>
			public static string esri_layouts_subElementWhole {
				 get { return "esri_layouts_subElementWhole"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multipleSelectedElements&quot; (State, Layouts)</summary>
			public static string esri_layouts_multipleSelectedElements {
				 get { return "esri_layouts_multipleSelectedElements"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiLevelSelection&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiLevelSelection {
				 get { return "esri_layouts_multiLevelSelection"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_selectedGroupElements&quot; (State, Layouts)</summary>
			public static string esri_layouts_selectedGroupElements {
				 get { return "esri_layouts_selectedGroupElements"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_selectedMapSurrounds&quot; (State, Layouts)</summary>
			public static string esri_layouts_selectedMapSurrounds {
				 get { return "esri_layouts_selectedMapSurrounds"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_northArrowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_northArrowCondition {
				 get { return "esri_layouts_northArrowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_northArrowBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_northArrowBackgroundCondition {
				 get { return "esri_layouts_northArrowBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_northArrowBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_northArrowBorderCondition {
				 get { return "esri_layouts_northArrowBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_northArrowShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_northArrowShadowCondition {
				 get { return "esri_layouts_northArrowShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_meterReferenceCondition {
				 get { return "esri_layouts_meterReferenceCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_meterReferenceBackgroundCondition {
				 get { return "esri_layouts_meterReferenceBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_meterReferenceBorderCondition {
				 get { return "esri_layouts_meterReferenceBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_meterReferenceShadowCondition {
				 get { return "esri_layouts_meterReferenceShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarCondition {
				 get { return "esri_layouts_elevationGuideBarCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarBackgroundCondition {
				 get { return "esri_layouts_elevationGuideBarBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarBorderCondition {
				 get { return "esri_layouts_elevationGuideBarBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarShadowCondition {
				 get { return "esri_layouts_elevationGuideBarShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarLineCondition {
				 get { return "esri_layouts_elevationGuideBarLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarTextCondition {
				 get { return "esri_layouts_elevationGuideBarTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarHighestBandCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarHighestBandCondition {
				 get { return "esri_layouts_elevationGuideBarHighestBandCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarHighBandCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarHighBandCondition {
				 get { return "esri_layouts_elevationGuideBarHighBandCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarMediumBandCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarMediumBandCondition {
				 get { return "esri_layouts_elevationGuideBarMediumBandCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_elevationGuideBarLowBandCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_elevationGuideBarLowBandCondition {
				 get { return "esri_layouts_elevationGuideBarLowBandCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideCondition {
				 get { return "esri_layouts_slopeGuideCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideBackgroundCondition {
				 get { return "esri_layouts_slopeGuideBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideBorderCondition {
				 get { return "esri_layouts_slopeGuideBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideShadowCondition {
				 get { return "esri_layouts_slopeGuideShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideTitleTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideTitleTextCondition {
				 get { return "esri_layouts_slopeGuideTitleTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideUnitTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideUnitTextCondition {
				 get { return "esri_layouts_slopeGuideUnitTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideTextCondition {
				 get { return "esri_layouts_slopeGuideTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideFootnoteTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideFootnoteTextCondition {
				 get { return "esri_layouts_slopeGuideFootnoteTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideVerticalLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideVerticalLineCondition {
				 get { return "esri_layouts_slopeGuideVerticalLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideHorizontalLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideHorizontalLineCondition {
				 get { return "esri_layouts_slopeGuideHorizontalLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_slopeGuideTickLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_slopeGuideTickLineCondition {
				 get { return "esri_layouts_slopeGuideTickLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_scaleBarCondition {
				 get { return "esri_layouts_scaleBarCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_scaleBarBackgroundCondition {
				 get { return "esri_layouts_scaleBarBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_scaleBarBorderCondition {
				 get { return "esri_layouts_scaleBarBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_scaleBarShadowCondition {
				 get { return "esri_layouts_scaleBarShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_scaleBarLineCondition {
				 get { return "esri_layouts_scaleBarLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_scaleBarPolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_scaleBarPolygonCondition {
				 get { return "esri_layouts_scaleBarPolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapFrameCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapFrameCondition {
				 get { return "esri_layouts_mapFrameCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapFrameBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapFrameBackgroundCondition {
				 get { return "esri_layouts_mapFrameBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapFrameBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapFrameBorderCondition {
				 get { return "esri_layouts_mapFrameBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapFrameShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapFrameShadowCondition {
				 get { return "esri_layouts_mapFrameShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiMapSurroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiMapSurroundCondition {
				 get { return "esri_layouts_multiMapSurroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiMapSurroundBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiMapSurroundBackgroundCondition {
				 get { return "esri_layouts_multiMapSurroundBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiMapSurroundBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiMapSurroundBorderCondition {
				 get { return "esri_layouts_multiMapSurroundBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiMapSurroundShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiMapSurroundShadowCondition {
				 get { return "esri_layouts_multiMapSurroundShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_pointCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_pointCondition {
				 get { return "esri_layouts_pointCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupPointCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupPointCondition {
				 get { return "esri_layouts_groupPointCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_northArrowPointCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_northArrowPointCondition {
				 get { return "esri_layouts_northArrowPointCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_extentIndicatorGeneralizationCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_extentIndicatorGeneralizationCondition {
				 get { return "esri_layouts_extentIndicatorGeneralizationCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapGridPointCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapGridPointCondition {
				 get { return "esri_layouts_mapGridPointCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowTNCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowTNCondition {
				 get { return "esri_layouts_topoNorthArrowTNCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowMNCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowMNCondition {
				 get { return "esri_layouts_topoNorthArrowMNCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_lineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_lineCondition {
				 get { return "esri_layouts_lineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupLineCondition {
				 get { return "esri_layouts_groupLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameLineCondition {
				 get { return "esri_layouts_tableFrameLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameFieldLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameFieldLineCondition {
				 get { return "esri_layouts_tableFrameFieldLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_extentIndicatorLeaderLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_extentIndicatorLeaderLineCondition {
				 get { return "esri_layouts_extentIndicatorLeaderLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapGridCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapGridCondition {
				 get { return "esri_layouts_mapGridCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapGridLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapGridLineCondition {
				 get { return "esri_layouts_mapGridLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapGridTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapGridTextCondition {
				 get { return "esri_layouts_mapGridTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowLineCondition {
				 get { return "esri_layouts_topoNorthArrowLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowArcCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowArcCondition {
				 get { return "esri_layouts_topoNorthArrowArcCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_meterReferenceLineCondition {
				 get { return "esri_layouts_meterReferenceLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameLineCondition {
				 get { return "esri_layouts_profileFrameLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameOISCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameOISCondition {
				 get { return "esri_layouts_profileFrameOISCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameOISLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameOISLineCondition {
				 get { return "esri_layouts_profileFrameOISLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_polygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_polygonCondition {
				 get { return "esri_layouts_polygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_textCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_textCondition {
				 get { return "esri_layouts_textCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupPolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupPolygonCondition {
				 get { return "esri_layouts_groupPolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiElementCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiElementCondition {
				 get { return "esri_layouts_multiElementCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiFrameCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiFrameCondition {
				 get { return "esri_layouts_multiFrameCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendCondition {
				 get { return "esri_layouts_legendCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendItemCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendItemCondition {
				 get { return "esri_layouts_legendItemCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_extentIndicatorCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_extentIndicatorCondition {
				 get { return "esri_layouts_extentIndicatorCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_extentIndicatorLeaderPolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_extentIndicatorLeaderPolygonCondition {
				 get { return "esri_layouts_extentIndicatorLeaderPolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_mapGridPolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_mapGridPolygonCondition {
				 get { return "esri_layouts_mapGridPolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_paragraphCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_paragraphCondition {
				 get { return "esri_layouts_paragraphCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_pictureCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_pictureCondition {
				 get { return "esri_layouts_pictureCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_attachmentCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_attachmentCondition {
				 get { return "esri_layouts_attachmentCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_chartCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_chartCondition {
				 get { return "esri_layouts_chartCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupCondition {
				 get { return "esri_layouts_groupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameCondition {
				 get { return "esri_layouts_tableFrameCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFramePolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFramePolygonCondition {
				 get { return "esri_layouts_tableFramePolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameFieldCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameFieldCondition {
				 get { return "esri_layouts_tableFrameFieldCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameFieldPolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameFieldPolygonCondition {
				 get { return "esri_layouts_tableFrameFieldPolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameCondition {
				 get { return "esri_layouts_profileFrameCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFramePolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFramePolygonCondition {
				 get { return "esri_layouts_profileFramePolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_paragraphBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_paragraphBackgroundCondition {
				 get { return "esri_layouts_paragraphBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_paragraphBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_paragraphBorderCondition {
				 get { return "esri_layouts_paragraphBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_paragraphShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_paragraphShadowCondition {
				 get { return "esri_layouts_paragraphShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_pictureBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_pictureBackgroundCondition {
				 get { return "esri_layouts_pictureBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_pictureBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_pictureBorderCondition {
				 get { return "esri_layouts_pictureBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_pictureShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_pictureShadowCondition {
				 get { return "esri_layouts_pictureShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_attachmentBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_attachmentBackgroundCondition {
				 get { return "esri_layouts_attachmentBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_attachmentBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_attachmentBorderCondition {
				 get { return "esri_layouts_attachmentBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_attachmentShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_attachmentShadowCondition {
				 get { return "esri_layouts_attachmentShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_chartBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_chartBackgroundCondition {
				 get { return "esri_layouts_chartBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_chartBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_chartBorderCondition {
				 get { return "esri_layouts_chartBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_chartShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_chartShadowCondition {
				 get { return "esri_layouts_chartShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupBackgroundCondition {
				 get { return "esri_layouts_groupBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupBorderCondition {
				 get { return "esri_layouts_groupBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_groupShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_groupShadowCondition {
				 get { return "esri_layouts_groupShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiFrameBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiFrameBackgroundCondition {
				 get { return "esri_layouts_multiFrameBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiFrameBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiFrameBorderCondition {
				 get { return "esri_layouts_multiFrameBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_multiFrameShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_multiFrameShadowCondition {
				 get { return "esri_layouts_multiFrameShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameBackgroundCondition {
				 get { return "esri_layouts_tableFrameBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameBorderCondition {
				 get { return "esri_layouts_tableFrameBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_tableFrameShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_tableFrameShadowCondition {
				 get { return "esri_layouts_tableFrameShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_meterReferenceTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_meterReferenceTextCondition {
				 get { return "esri_layouts_meterReferenceTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendLineCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendLineCondition {
				 get { return "esri_layouts_legendLineCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendPolygonCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendPolygonCondition {
				 get { return "esri_layouts_legendPolygonCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendBackgroundCondition {
				 get { return "esri_layouts_legendBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendBorderCondition {
				 get { return "esri_layouts_legendBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_legendShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_legendShadowCondition {
				 get { return "esri_layouts_legendShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowCondition {
				 get { return "esri_layouts_topoNorthArrowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowTextCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowTextCondition {
				 get { return "esri_layouts_topoNorthArrowTextCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowBackgroundCondition {
				 get { return "esri_layouts_topoNorthArrowBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowBorderCondition {
				 get { return "esri_layouts_topoNorthArrowBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_topoNorthArrowShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_topoNorthArrowShadowCondition {
				 get { return "esri_layouts_topoNorthArrowShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameBackgroundCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameBackgroundCondition {
				 get { return "esri_layouts_profileFrameBackgroundCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameBorderCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameBorderCondition {
				 get { return "esri_layouts_profileFrameBorderCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameShadowCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameShadowCondition {
				 get { return "esri_layouts_profileFrameShadowCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_profileFrameObstacleCondition&quot; (State, Layouts)</summary>
			public static string esri_layouts_profileFrameObstacleCondition {
				 get { return "esri_layouts_profileFrameObstacleCondition"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportPageHeader&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportPageHeader {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportPageHeader"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportHeader&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportHeader {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportHeader"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportGroupHeader&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportGroupHeader {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportGroupHeader"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportDetails&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportDetails {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportDetails"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportPageFooter&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportPageFooter {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportPageFooter"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportFooter&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportFooter {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportFooter"; }
			}
			///<summary>Returns the id string for &quot;ArcGIS_Desktop_Internal_Reports_ReportGroupFooter&quot; (State, Layouts)</summary>
			public static string ArcGIS_Desktop_Internal_Reports_ReportGroupFooter {
				 get { return "ArcGIS_Desktop_Internal_Reports_ReportGroupFooter"; }
			}
			///<summary>Returns the id string for &quot;esri_report_reportSectionActiveStateId&quot; (State, Layouts)</summary>
			public static string esri_report_reportSectionActiveStateId {
				 get { return "esri_report_reportSectionActiveStateId"; }
			}
			///<summary>Returns the id string for &quot;esri_report_groupHeaderActiveStateId&quot; (State, Layouts)</summary>
			public static string esri_report_groupHeaderActiveStateId {
				 get { return "esri_report_groupHeaderActiveStateId"; }
			}
			///<summary>Returns the id string for &quot;esri_report_groupFooterActiveStateId&quot; (State, Layouts)</summary>
			public static string esri_report_groupFooterActiveStateId {
				 get { return "esri_report_groupFooterActiveStateId"; }
			}
			///<summary>Returns the id string for &quot;esri_report_detailsActiveStateId&quot; (State, Layouts)</summary>
			public static string esri_report_detailsActiveStateId {
				 get { return "esri_report_detailsActiveStateId"; }
			}
			///<summary>Returns the id string for &quot;esri_report_reportFooterActiveStateId&quot; (State, Layouts)</summary>
			public static string esri_report_reportFooterActiveStateId {
				 get { return "esri_report_reportFooterActiveStateId"; }
			}
			///<summary>Returns the id string for &quot;esri_report_reportSourceConnectedStateId&quot; (State, Layouts)</summary>
			public static string esri_report_reportSourceConnectedStateId {
				 get { return "esri_report_reportSourceConnectedStateId"; }
			}
		}
		public static partial class Subgroup {
			///<summary>Returns the id string for &quot;esri_layouts_thumbnail_SubGroup&quot; (Subgroup, Layouts)</summary>
			public static string esri_layouts_thumbnail_SubGroup {
				 get { return "esri_layouts_thumbnail_SubGroup"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Layout&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_LayoutContainer {
				 get { return "esri_layouts_LayoutContainer"; }
			}
			///<summary>Returns the id string for &quot;Layout&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_homeTab {
				 get { return "esri_layouts_homeTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_insertTab {
				 get { return "esri_layouts_insertTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_analysisTab {
				 get { return "esri_layouts_analysisTab"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_viewTab {
				 get { return "esri_layouts_viewTab"; }
			}
			///<summary>Returns the id string for &quot;Layout&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_ActivateMapTab {
				 get { return "esri_layouts_ActivateMapTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_FormatTab {
				 get { return "esri_layouts_FormatTab"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_multiMapSurroundDesignTab {
				 get { return "esri_layouts_multiMapSurroundDesignTab"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_northArrowDesignTab {
				 get { return "esri_layouts_northArrowDesignTab"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Tab, Layouts)</summary>
			public static string esri_layouts_scaleBarDesignTab {
				 get { return "esri_layouts_scaleBarDesignTab"; }
			}
			///<summary>Returns the id string for &quot;Report&quot; (Tab, Layouts)</summary>
			public static string esri_reports_homeTab {
				 get { return "esri_reports_homeTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, Layouts)</summary>
			public static string esri_reports_insertTab {
				 get { return "esri_reports_insertTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, Layouts)</summary>
			public static string esri_reports_analysisTab {
				 get { return "esri_reports_analysisTab"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, Layouts)</summary>
			public static string esri_reports_viewTab {
				 get { return "esri_reports_viewTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_pageHeaderFormatTab {
				 get { return "esri_reports_pageHeaderFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_reportHeaderFormatTab {
				 get { return "esri_reports_reportHeaderFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_groupHeaderFormatTab {
				 get { return "esri_reports_groupHeaderFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_detailsFormatTab {
				 get { return "esri_reports_detailsFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_reportFooterFormatTab {
				 get { return "esri_reports_reportFooterFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_groupFooterFormatTab {
				 get { return "esri_reports_groupFooterFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Format&quot; (Tab, Layouts)</summary>
			public static string esri_reports_pageFooterFormatTab {
				 get { return "esri_reports_pageFooterFormatTab"; }
			}
			///<summary>Returns the id string for &quot;Report&quot; (Tab, Layouts)</summary>
			public static string esri_reports_ReportContainer {
				 get { return "esri_reports_ReportContainer"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, Layouts)</summary>
			public static string esri_layouts_LayoutTabGroup {
				 get { return "esri_layouts_LayoutTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Activated Map Frame&quot; (Tabgroup, Layouts)</summary>
			public static string esri_layouts_activatedMapTabGroup {
				 get { return "esri_layouts_activatedMapTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Tabgroup, Layouts)</summary>
			public static string esri_layouts_selectionTabGroup {
				 get { return "esri_layouts_selectionTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Report Section&quot; (Tabgroup, Layouts)</summary>
			public static string esri_reports_selectedSectionTabGroup {
				 get { return "esri_reports_selectedSectionTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, Layouts)</summary>
			public static string esri_reports_ReportTabGroup {
				 get { return "esri_reports_ReportTabGroup"; }
			}
		}
		public static partial class Tool {
			///<summary>Returns the id string for &quot;Navigate&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutNavigateTool, Layouts)</summary>
			public static string esri_layouts_pageNavigateTool {
				 get { return "esri_layouts_pageNavigateTool"; }
			}
			///<summary>Returns the id string for &quot;Pan&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.PagePanTool, Layouts)</summary>
			public static string esri_layouts_pagePanTool {
				 get { return "esri_layouts_pagePanTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutSelectTool, Layouts)</summary>
			public static string esri_layouts_selectByRectangleTool {
				 get { return "esri_layouts_selectByRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutSelectByPolygonTool, Layouts)</summary>
			public static string esri_layouts_selectByPolygonTool {
				 get { return "esri_layouts_selectByPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutSelectByLassoTool, Layouts)</summary>
			public static string esri_layouts_selectByLassoTool {
				 get { return "esri_layouts_selectByLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutSelectByCircleTool, Layouts)</summary>
			public static string esri_layouts_selectByCircleTool {
				 get { return "esri_layouts_selectByCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.LayoutSelectByLineTool, Layouts)</summary>
			public static string esri_layouts_selectByLineTool {
				 get { return "esri_layouts_selectByLineTool"; }
			}
			///<summary>Returns the id string for &quot;Inline Edit&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.InlineEditTool, Layouts)</summary>
			public static string esri_layouts_inlineEditTool {
				 get { return "esri_layouts_inlineEditTool"; }
			}
			///<summary>Returns the id string for &quot;Edit Vertices&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.EditVerticesTool, Layouts)</summary>
			public static string esri_layouts_editVerticesTool {
				 get { return "esri_layouts_editVerticesTool"; }
			}
			///<summary>Returns the id string for &quot;Point&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPointTool, Layouts)</summary>
			public static string esri_layouts_newPointTool {
				 get { return "esri_layouts_newPointTool"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewLineTool, Layouts)</summary>
			public static string esri_layouts_newLineTool {
				 get { return "esri_layouts_newLineTool"; }
			}
			///<summary>Returns the id string for &quot;Curve&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewBezierCurveTool, Layouts)</summary>
			public static string esri_layouts_newBezierCurveTool {
				 get { return "esri_layouts_newBezierCurveTool"; }
			}
			///<summary>Returns the id string for &quot;Freehand&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewOpenLassoTool, Layouts)</summary>
			public static string esri_layouts_newOpenLassoTool {
				 get { return "esri_layouts_newOpenLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewRectangleTool, Layouts)</summary>
			public static string esri_layouts_newRectangleTool {
				 get { return "esri_layouts_newRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPolygonTool, Layouts)</summary>
			public static string esri_layouts_newPolygonTool {
				 get { return "esri_layouts_newPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewLassoTool, Layouts)</summary>
			public static string esri_layouts_newLassoTool {
				 get { return "esri_layouts_newLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewCircleTool, Layouts)</summary>
			public static string esri_layouts_newCircleTool {
				 get { return "esri_layouts_newCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewEllipseTool, Layouts)</summary>
			public static string esri_layouts_newEllipseTool {
				 get { return "esri_layouts_newEllipseTool"; }
			}
			///<summary>Returns the id string for &quot;Text&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPointTextTool, Layouts)</summary>
			public static string esri_layouts_newPointTextTool {
				 get { return "esri_layouts_newPointTextTool"; }
			}
			///<summary>Returns the id string for &quot;Picture&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPictureTool, Layouts)</summary>
			public static string esri_layouts_newPictureTool {
				 get { return "esri_layouts_newPictureTool"; }
			}
			///<summary>Returns the id string for &quot;Curved Text&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewSplinedTextTool, Layouts)</summary>
			public static string esri_layouts_newSplinedTextTool {
				 get { return "esri_layouts_newSplinedTextTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewRectangleParagraphTool, Layouts)</summary>
			public static string esri_layouts_newRectangleParagraphTool {
				 get { return "esri_layouts_newRectangleParagraphTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPolygonParagraphTool, Layouts)</summary>
			public static string esri_layouts_newPolygonParagraphTool {
				 get { return "esri_layouts_newPolygonParagraphTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewCircleParagraphTool, Layouts)</summary>
			public static string esri_layouts_newCircleParagraphTool {
				 get { return "esri_layouts_newCircleParagraphTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewEllipseParagraphTool, Layouts)</summary>
			public static string esri_layouts_newEllipseParagraphTool {
				 get { return "esri_layouts_newEllipseParagraphTool"; }
			}
			///<summary>Returns the id string for &quot;North Arrow&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewNorthArrowTool, Layouts)</summary>
			public static string esri_layouts_newNorthArrowTool {
				 get { return "esri_layouts_newNorthArrowTool"; }
			}
			///<summary>Returns the id string for &quot;Scale Bar&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewScaleBarTool, Layouts)</summary>
			public static string esri_layouts_newScaleBarTool {
				 get { return "esri_layouts_newScaleBarTool"; }
			}
			///<summary>Returns the id string for &quot;Legend&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewLegendTool, Layouts)</summary>
			public static string esri_layouts_newLegendTool {
				 get { return "esri_layouts_newLegendTool"; }
			}
			///<summary>Returns the id string for &quot;Chart Frame&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewChartFrameTool, Layouts)</summary>
			public static string esri_layouts_newChartFrameTool {
				 get { return "esri_layouts_newChartFrameTool"; }
			}
			///<summary>Returns the id string for &quot;Table Frame&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewTableFrameTool, Layouts)</summary>
			public static string esri_layouts_newTableFrameTool {
				 get { return "esri_layouts_newTableFrameTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewMapFrameRectangleTool, Layouts)</summary>
			public static string esri_layouts_newMapFrameRectangleTool {
				 get { return "esri_layouts_newMapFrameRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewMapFramePolygonTool, Layouts)</summary>
			public static string esri_layouts_newMapFramePolygonTool {
				 get { return "esri_layouts_newMapFramePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewMapFrameLassoTool, Layouts)</summary>
			public static string esri_layouts_newMapFrameLassoTool {
				 get { return "esri_layouts_newMapFrameLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewMapFrameEllipseTool, Layouts)</summary>
			public static string esri_layouts_newMapFrameEllipseTool {
				 get { return "esri_layouts_newMapFrameEllipseTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewMapFrameCircleTool, Layouts)</summary>
			public static string esri_layouts_newMapFrameCircleTool {
				 get { return "esri_layouts_newMapFrameCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ReshapeMapFrameRectangleTool, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameRectangleTool {
				 get { return "esri_layouts_reshapeMapFrameRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ReshapeMapFramePolygonTool, Layouts)</summary>
			public static string esri_layouts_reshapeMapFramePolygonTool {
				 get { return "esri_layouts_reshapeMapFramePolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ReshapeMapFrameLassoTool, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameLassoTool {
				 get { return "esri_layouts_reshapeMapFrameLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ReshapeMapFrameEllipseTool, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameEllipseTool {
				 get { return "esri_layouts_reshapeMapFrameEllipseTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.ReshapeMapFrameCircleTool, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameCircleTool {
				 get { return "esri_layouts_reshapeMapFrameCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Additional Surrounds&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewProductionToolPlaceHolder, Layouts)</summary>
			public static string esri_layouts_newProductionToolPlaceHolder {
				 get { return "esri_layouts_newProductionToolPlaceHolder"; }
			}
			///<summary>Returns the id string for &quot;TLM Meter Reference Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewTLMMeterReferenceGuideTool, Layouts)</summary>
			public static string esri_layouts_newTLMMeterReferenceGuideTool {
				 get { return "esri_layouts_newTLMMeterReferenceGuideTool"; }
			}
			///<summary>Returns the id string for &quot;ICM Meter Reference Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewICMMeterReferenceGuideTool, Layouts)</summary>
			public static string esri_layouts_newICMMeterReferenceGuideTool {
				 get { return "esri_layouts_newICMMeterReferenceGuideTool"; }
			}
			///<summary>Returns the id string for &quot;JOG Meter Reference Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewJOGMeterReferenceGuideTool, Layouts)</summary>
			public static string esri_layouts_newJOGMeterReferenceGuideTool {
				 get { return "esri_layouts_newJOGMeterReferenceGuideTool"; }
			}
			///<summary>Returns the id string for &quot;U.S. National Grid Reference Box&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewUSNGMeterReferenceGuideTool, Layouts)</summary>
			public static string esri_layouts_newUSNGMeterReferenceGuideTool {
				 get { return "esri_layouts_newUSNGMeterReferenceGuideTool"; }
			}
			///<summary>Returns the id string for &quot;Slope Guide&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewSlopeGuideTool, Layouts)</summary>
			public static string esri_layouts_newSlopeGuideTool {
				 get { return "esri_layouts_newSlopeGuideTool"; }
			}
			///<summary>Returns the id string for &quot;Elevation Guide Bar&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewElevationGuideBarTool, Layouts)</summary>
			public static string esri_layouts_newElevationGuideBarTool {
				 get { return "esri_layouts_newElevationGuideBarTool"; }
			}
			///<summary>Returns the id string for &quot;Terrain Obstacle Profile&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewProfileFrameTool, Layouts)</summary>
			public static string esri_layouts_newProfileFrameTool {
				 get { return "esri_layouts_newProfileFrameTool"; }
			}
			///<summary>Returns the id string for &quot;Field&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewFieldElementTool, Layouts)</summary>
			public static string esri_reports_newFieldElementTool {
				 get { return "esri_reports_newFieldElementTool"; }
			}
			///<summary>Returns the id string for &quot;Mean&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewAvgElementTool, Layouts)</summary>
			public static string esri_reports_addAvgStatisticTool {
				 get { return "esri_reports_addAvgStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Count&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewCountElementTool, Layouts)</summary>
			public static string esri_reports_addCountStatisticTool {
				 get { return "esri_reports_addCountStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Maximum&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewMaxElementTool, Layouts)</summary>
			public static string esri_reports_addMaxStatisticTool {
				 get { return "esri_reports_addMaxStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Minimum&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewMinElementTool, Layouts)</summary>
			public static string esri_reports_addMinStatisticTool {
				 get { return "esri_reports_addMinStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Standard Deviation&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewStdDevElementTool, Layouts)</summary>
			public static string esri_reports_addStdDevStatisticTool {
				 get { return "esri_reports_addStdDevStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Sum&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewSumElementTool, Layouts)</summary>
			public static string esri_reports_addSumStatisticTool {
				 get { return "esri_reports_addSumStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Median&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewMedianElementTool, Layouts)</summary>
			public static string esri_reports_addMedianStatisticTool {
				 get { return "esri_reports_addMedianStatisticTool"; }
			}
			///<summary>Returns the id string for &quot;Attachments&quot; (ArcGIS.Desktop.Internal.Reports.Ribbon.NewAttachmentTool, Layouts)</summary>
			public static string esri_reports_newAttachmentTool {
				 get { return "esri_reports_newAttachmentTool"; }
			}
			///<summary>Returns the id string for &quot;Point&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPointTool, Layouts)</summary>
			public static string esri_reports_newPointTool {
				 get { return "esri_reports_newPointTool"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewLineTool, Layouts)</summary>
			public static string esri_reports_newLineTool {
				 get { return "esri_reports_newLineTool"; }
			}
			///<summary>Returns the id string for &quot;Curve&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewBezierCurveTool, Layouts)</summary>
			public static string esri_reports_newBezierCurveTool {
				 get { return "esri_reports_newBezierCurveTool"; }
			}
			///<summary>Returns the id string for &quot;Freehand&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewOpenLassoTool, Layouts)</summary>
			public static string esri_reports_newOpenLassoTool {
				 get { return "esri_reports_newOpenLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewRectangleTool, Layouts)</summary>
			public static string esri_reports_newRectangleTool {
				 get { return "esri_reports_newRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPolygonTool, Layouts)</summary>
			public static string esri_reports_newPolygonTool {
				 get { return "esri_reports_newPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewLassoTool, Layouts)</summary>
			public static string esri_reports_newLassoTool {
				 get { return "esri_reports_newLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewCircleTool, Layouts)</summary>
			public static string esri_reports_newCircleTool {
				 get { return "esri_reports_newCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Ellipse&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewEllipseTool, Layouts)</summary>
			public static string esri_reports_newEllipseTool {
				 get { return "esri_reports_newEllipseTool"; }
			}
			///<summary>Returns the id string for &quot;Picture&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewPictureTool, Layouts)</summary>
			public static string esri_reports_newPictureTool {
				 get { return "esri_reports_newPictureTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Layouts.Ribbon.NewRectangleParagraphTool, Layouts)</summary>
			public static string esri_reports_newRectangleParagraphTool {
				 get { return "esri_reports_newRectangleParagraphTool"; }
			}
		}
		public static partial class Toolbar {
			///<summary>Returns the id string for &quot;esri_layouts_textSymbolFontToolbar&quot; (Toolbar, Layouts)</summary>
			public static string esri_layouts_textSymbolFontToolbar {
				 get { return "esri_layouts_textSymbolFontToolbar"; }
			}
		}
		public static partial class Toolpalette {
			///<summary>Returns the id string for &quot;Select&quot; (Toolpalette, Layouts)</summary>
			public static string esri_layouts_selectToolPalette {
				 get { return "esri_layouts_selectToolPalette"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newPolygonGraphicToolPalette&quot; (Toolpalette, Layouts)</summary>
			public static string esri_layouts_newPolygonGraphicToolPalette {
				 get { return "esri_layouts_newPolygonGraphicToolPalette"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newLineGraphicToolPalette&quot; (Toolpalette, Layouts)</summary>
			public static string esri_layouts_newLineGraphicToolPalette {
				 get { return "esri_layouts_newLineGraphicToolPalette"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newTextToolPalette&quot; (Toolpalette, Layouts)</summary>
			public static string esri_layouts_newTextToolPalette {
				 get { return "esri_layouts_newTextToolPalette"; }
			}
			///<summary>Returns the id string for &quot;esri_layouts_newMapFrameToolPalette&quot; (Toolpalette, Layouts)</summary>
			public static string esri_layouts_newMapFrameToolPalette {
				 get { return "esri_layouts_newMapFrameToolPalette"; }
			}
			///<summary>Returns the id string for &quot;Reshape&quot; (Toolpalette, Layouts)</summary>
			public static string esri_layouts_reshapeMapFrameToolPalette {
				 get { return "esri_layouts_reshapeMapFrameToolPalette"; }
			}
			///<summary>Returns the id string for &quot;Statistics&quot; (Toolpalette, Layouts)</summary>
			public static string esri_reports_statisticToolPalette {
				 get { return "esri_reports_statisticToolPalette"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_newPolygonGraphicToolPalette&quot; (Toolpalette, Layouts)</summary>
			public static string esri_reports_newPolygonGraphicToolPalette {
				 get { return "esri_reports_newPolygonGraphicToolPalette"; }
			}
			///<summary>Returns the id string for &quot;esri_reports_newLineGraphicToolPalette&quot; (Toolpalette, Layouts)</summary>
			public static string esri_reports_newLineGraphicToolPalette {
				 get { return "esri_reports_newLineGraphicToolPalette"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Add System Style&quot; (AddCoreStyleButton, Mapping)</summary>
			public static string esri_mapping_addCoreStyleButton {
				 get { return "esri_mapping_addCoreStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Add Style&quot; (AddCustomStyleButton, Mapping)</summary>
			public static string esri_mapping_addCustomStyleButton {
				 get { return "esri_mapping_addCustomStyleButton"; }
			}
			///<summary>Returns the id string for &quot;New Style&quot; (NewStyleButton, Mapping)</summary>
			public static string esri_mapping_newStyleButton {
				 get { return "esri_mapping_newStyleButton"; }
			}
			///<summary>Returns the id string for &quot;New Mobile Style&quot; (NewMobileStyleButton, Mapping)</summary>
			public static string esri_mapping_newMobileStyleButton {
				 get { return "esri_mapping_newMobileStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (ImportStyleButton, Mapping)</summary>
			public static string esri_mapping_importStyleButton {
				 get { return "esri_mapping_importStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Import Style&quot; (ImportStyleButton, Mapping)</summary>
			public static string esri_mapping_importStyleRibbonButton {
				 get { return "esri_mapping_importStyleRibbonButton"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (ImportContextFileStyleButton, Mapping)</summary>
			public static string esri_mapping_importFileStyleButton {
				 get { return "esri_mapping_importFileStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Add Style&quot; (AddFileStyleButton, Mapping)</summary>
			public static string esri_mapping_importFileStylxButton {
				 get { return "esri_mapping_importFileStylxButton"; }
			}
			///<summary>Returns the id string for &quot;Add Style&quot; (AddPortalStyleButton, Mapping)</summary>
			public static string esri_mapping_importPortalStylxButton {
				 get { return "esri_mapping_importPortalStylxButton"; }
			}
			///<summary>Returns the id string for &quot;Save to Style&quot; (SaveSelectedStyleItemsToStyleButton, Mapping)</summary>
			public static string esri_mapping_saveToStyleButton {
				 get { return "esri_mapping_saveToStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Add to Favorites&quot; (SelectedStyleItemsToFavoritesButton, Mapping)</summary>
			public static string esri_mapping_addToFavoritesButton {
				 get { return "esri_mapping_addToFavoritesButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (CopySelectedStyleItemsButton, Mapping)</summary>
			public static string esri_mapping_copyStyleItemButton {
				 get { return "esri_mapping_copyStyleItemButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (DeleteSelectedStyleItemsButton, Mapping)</summary>
			public static string esri_mapping_deleteStyleItemButton {
				 get { return "esri_mapping_deleteStyleItemButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (PasteStyleItemsButton, Mapping)</summary>
			public static string esri_mapping_pasteStyleItemButton {
				 get { return "esri_mapping_pasteStyleItemButton"; }
			}
			///<summary>Returns the id string for &quot;Cut&quot; (CutSelectedStyleItemsButton, Mapping)</summary>
			public static string esri_mapping_cutStyleItemButton {
				 get { return "esri_mapping_cutStyleItemButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (UnreferenceSelectedStylesButton, Mapping)</summary>
			public static string esri_mapping_StyleUnreferenceButton {
				 get { return "esri_mapping_StyleUnreferenceButton"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (ManageStyleButton, Mapping)</summary>
			public static string esri_mapping_ManageStyleButton {
				 get { return "esri_mapping_ManageStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Sync&quot; (SyncStyleButton, Mapping)</summary>
			public static string esri_mapping_SyncStyleButton {
				 get { return "esri_mapping_SyncStyleButton"; }
			}
			///<summary>Returns the id string for &quot;Upgrade&quot; (UpgradeStyleButton, Mapping)</summary>
			public static string esri_mapping_UpgradeStyleButton {
				 get { return "esri_mapping_UpgradeStyleButton"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (NewStyleItemInCurrentClassButton, Mapping)</summary>
			public static string esri_mapping_newStyleItemInCurrentClass {
				 get { return "esri_mapping_newStyleItemInCurrentClass"; }
			}
			///<summary>Returns the id string for &quot;Point Symbol&quot; (NewPointSymbolButton, Mapping)</summary>
			public static string esri_mapping_newPointSymbol {
				 get { return "esri_mapping_newPointSymbol"; }
			}
			///<summary>Returns the id string for &quot;Line Symbol&quot; (NewLineSymbolButton, Mapping)</summary>
			public static string esri_mapping_newLineSymbol {
				 get { return "esri_mapping_newLineSymbol"; }
			}
			///<summary>Returns the id string for &quot;Polygon Symbol&quot; (NewPolygonSymbolButton, Mapping)</summary>
			public static string esri_mapping_newPolygonSymbol {
				 get { return "esri_mapping_newPolygonSymbol"; }
			}
			///<summary>Returns the id string for &quot;Mesh Symbol&quot; (NewMeshSymbolButton, Mapping)</summary>
			public static string esri_mapping_newMeshSymbol {
				 get { return "esri_mapping_newMeshSymbol"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol&quot; (NewTextSymbolButton, Mapping)</summary>
			public static string esri_mapping_newTextSymbol {
				 get { return "esri_mapping_newTextSymbol"; }
			}
			///<summary>Returns the id string for &quot;Dimension Style&quot; (NewDimensionStyleButton, Mapping)</summary>
			public static string esri_mapping_newDimensionStyle {
				 get { return "esri_mapping_newDimensionStyle"; }
			}
			///<summary>Returns the id string for &quot;Color&quot; (NewColorButton, Mapping)</summary>
			public static string esri_mapping_newColor {
				 get { return "esri_mapping_newColor"; }
			}
			///<summary>Returns the id string for &quot;Color Scheme&quot; (NewColorSchemeButton, Mapping)</summary>
			public static string esri_mapping_newColorScheme {
				 get { return "esri_mapping_newColorScheme"; }
			}
			///<summary>Returns the id string for &quot;Standard Label Placement&quot; (AddNewStandardLabelPlacementButton, Mapping)</summary>
			public static string esri_mapping_newStandardLabelPlacement {
				 get { return "esri_mapping_newStandardLabelPlacement"; }
			}
			///<summary>Returns the id string for &quot;Maplex Label Placement&quot; (AddNewMaplexLabelPlacementButton, Mapping)</summary>
			public static string esri_mapping_newMaplexLabelPlacement {
				 get { return "esri_mapping_newMaplexLabelPlacement"; }
			}
			///<summary>Returns the id string for &quot;By ID&quot; (StyleSortByIdButton, Mapping)</summary>
			public static string esri_mapping_styleSortByID {
				 get { return "esri_mapping_styleSortByID"; }
			}
			///<summary>Returns the id string for &quot;By Category&quot; (StyleSortByCategoryButton, Mapping)</summary>
			public static string esri_mapping_styleSortByCategory {
				 get { return "esri_mapping_styleSortByCategory"; }
			}
			///<summary>Returns the id string for &quot;By Name&quot; (StyleSortByNameButton, Mapping)</summary>
			public static string esri_mapping_styleSortByName {
				 get { return "esri_mapping_styleSortByName"; }
			}
			///<summary>Returns the id string for &quot;Drawing Order&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.DrawingOrderViewButton, Mapping)</summary>
			public static string esri_mapping_showDrawingOrderTOC {
				 get { return "esri_mapping_showDrawingOrderTOC"; }
			}
			///<summary>Returns the id string for &quot;Data Source&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.DataSourceViewButton, Mapping)</summary>
			public static string esri_mapping_showDataSourceTOC {
				 get { return "esri_mapping_showDataSourceTOC"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.SelectionViewButton, Mapping)</summary>
			public static string esri_mapping_showSelectionTOC {
				 get { return "esri_mapping_showSelectionTOC"; }
			}
			///<summary>Returns the id string for &quot;Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.SnappingViewButton, Mapping)</summary>
			public static string esri_mapping_showSnappingTOC {
				 get { return "esri_mapping_showSnappingTOC"; }
			}
			///<summary>Returns the id string for &quot;Labeling&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.LabelingViewButton, Mapping)</summary>
			public static string esri_mapping_showLabelingTOC {
				 get { return "esri_mapping_showLabelingTOC"; }
			}
			///<summary>Returns the id string for &quot;Ortho Mapping&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.OrthoMappingViewButton, Mapping)</summary>
			public static string esri_mapping_showOrthoMappingTOC {
				 get { return "esri_mapping_showOrthoMappingTOC"; }
			}
			///<summary>Returns the id string for &quot;Perspective Imagery&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.ImageSpaceItemsViewButton, Mapping)</summary>
			public static string esri_mapping_showImageSpaceItemsTOC {
				 get { return "esri_mapping_showImageSpaceItemsTOC"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (esri_mapping:PasteClipboardLayers, Mapping)</summary>
			public static string esri_mapping_pasteLayersIntoMapButton {
				 get { return "esri_mapping_pasteLayersIntoMapButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (esri_mapping:PasteClipboardLayers, Mapping)</summary>
			public static string esri_mapping_pasteLayersIntoGroupButton {
				 get { return "esri_mapping_pasteLayersIntoGroupButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_mapping:CopySelectedLayersAsync, Mapping)</summary>
			public static string esri_mapping_copySelectedLayersButton {
				 get { return "esri_mapping_copySelectedLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_mapping:CopySelectedElevationSurfaces, Mapping)</summary>
			public static string esri_mapping_copySelectedElevationSurfaceButton {
				 get { return "esri_mapping_copySelectedElevationSurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_mapping:CopySelectedElevationSources, Mapping)</summary>
			public static string esri_mapping_copySelectedElevationSourcesButton {
				 get { return "esri_mapping_copySelectedElevationSourcesButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (esri_mapping:PasteClipboardElevationSources, Mapping)</summary>
			public static string esri_mapping_pasteSourcesIntoSurfaceButton {
				 get { return "esri_mapping_pasteSourcesIntoSurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Elevation Source&quot; (esri_mapping:ZoomToSelectedElevationSources, Mapping)</summary>
			public static string esri_mapping_ZoomToElevationSourceButton {
				 get { return "esri_mapping_ZoomToElevationSourceButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Elevation Surface&quot; (esri_mapping:ZoomToSelectedElevationSurfaces, Mapping)</summary>
			public static string esri_mapping_ZoomToElevationSurfaceButton {
				 get { return "esri_mapping_ZoomToElevationSurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Settings&quot; (esri_core_projectDockPane:ProjectSettings, Mapping)</summary>
			public static string esri_mapping_projectSettingsButton {
				 get { return "esri_mapping_projectSettingsButton"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (esri_core_module:ShowProjectDockPane, Mapping)</summary>
			public static string esri_mapping_showProjectDockPane {
				 get { return "esri_mapping_showProjectDockPane"; }
			}
			///<summary>Returns the id string for &quot;Simulate Overprint&quot; (esri_mapping:SimulateOverprint, Mapping)</summary>
			public static string esri_mapping_simulateOverprint {
				 get { return "esri_mapping_simulateOverprint"; }
			}
			///<summary>Returns the id string for &quot;New Map&quot; (esri_mapping:CreateOrOpenNewMapAsync, Mapping)</summary>
			public static string esri_mapping_newMapButton {
				 get { return "esri_mapping_newMapButton"; }
			}
			///<summary>Returns the id string for &quot;New Global Scene&quot; (esri_mapping:CreateNewGlobalSceneAsync, Mapping)</summary>
			public static string esri_mapping_newSceneButton {
				 get { return "esri_mapping_newSceneButton"; }
			}
			///<summary>Returns the id string for &quot;New Local Scene&quot; (esri_mapping:CreateNewLocalSceneAsync, Mapping)</summary>
			public static string esri_mapping_newLocalSceneButton {
				 get { return "esri_mapping_newLocalSceneButton"; }
			}
			///<summary>Returns the id string for &quot;New Stereo Map&quot; (esri_mapping:OpenCreateNewStereoMapAsync, Mapping)</summary>
			public static string esri_mapping_newStereoMapButton {
				 get { return "esri_mapping_newStereoMapButton"; }
			}
			///<summary>Returns the id string for &quot;New Basemap&quot; (esri_mapping:OpenCreateNewBasemapAsync, Mapping)</summary>
			public static string esri_mapping_newBasemapButton {
				 get { return "esri_mapping_newBasemapButton"; }
			}
			///<summary>Returns the id string for &quot;From File&quot; (esri_core_projectDockPane:AddFromFile, Mapping)</summary>
			public static string esri_mapping_addFromFileButton {
				 get { return "esri_mapping_addFromFileButton"; }
			}
			///<summary>Returns the id string for &quot;Add Web Map&quot; (esri_mapping:OpenWebMapFromFileAsync, Mapping)</summary>
			public static string esri_mapping_openWebMapFromFileButton {
				 get { return "esri_mapping_openWebMapFromFileButton"; }
			}
			///<summary>Returns the id string for &quot;GIS Server&quot; (esri_mapping:ConnectToGISServer, Mapping)</summary>
			public static string esri_mapping_GISServerButton {
				 get { return "esri_mapping_GISServerButton"; }
			}
			///<summary>Returns the id string for &quot;Add Data&quot; (esri_mapping:AddData, Mapping)</summary>
			public static string esri_mapping_addDataButton {
				 get { return "esri_mapping_addDataButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_mapping:ContextMenuViewMap2D, Mapping)</summary>
			public static string esri_mapping_mapContextMenuContainmentViewButton {
				 get { return "esri_mapping_mapContextMenuContainmentViewButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_mapping:ContextMenuViewMap2D, Mapping)</summary>
			public static string esri_mapping_mapContextMenuNetworkDiagramViewButton {
				 get { return "esri_mapping_mapContextMenuNetworkDiagramViewButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_mapping:ContextMenuViewMap2D, Mapping)</summary>
			public static string esri_mapping_mapContextMenuMap2DViewButton {
				 get { return "esri_mapping_mapContextMenuMap2DViewButton"; }
			}
			///<summary>Returns the id string for &quot;Open Global View&quot; (esri_mapping:ContextMenuViewGlobe3D, Mapping)</summary>
			public static string esri_mapping_mapContextMenuGlobe3DViewButton {
				 get { return "esri_mapping_mapContextMenuGlobe3DViewButton"; }
			}
			///<summary>Returns the id string for &quot;Open Local View&quot; (esri_mapping:ContextMenuViewScene3D, Mapping)</summary>
			public static string esri_mapping_mapContextMenuScene3DViewButton {
				 get { return "esri_mapping_mapContextMenuScene3DViewButton"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (esri_mapping:ContextMenuViewStereoMap, Mapping)</summary>
			public static string esri_mapping_mapContextMenuStereoMapViewButton {
				 get { return "esri_mapping_mapContextMenuStereoMapViewButton"; }
			}
			///<summary>Returns the id string for &quot;To Global Scene&quot; (esri_mapping:ConvertToGlobalSceneFromCatalog, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertTo3DButton {
				 get { return "esri_mapping_mapContextMenuConvertTo3DButton"; }
			}
			///<summary>Returns the id string for &quot;To Local Scene&quot; (esri_mapping:ConvertToLocalSceneFromCatalog, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertToLocalSceneButton {
				 get { return "esri_mapping_mapContextMenuConvertToLocalSceneButton"; }
			}
			///<summary>Returns the id string for &quot;To Map&quot; (esri_mapping:ConvertToMapFromCatalog, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertTo2DButton {
				 get { return "esri_mapping_mapContextMenuConvertTo2DButton"; }
			}
			///<summary>Returns the id string for &quot;To Global Scene&quot; (esri_mapping:ConvertStereoMapTo3DScene, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertStereoMapTo3DSceneButton {
				 get { return "esri_mapping_mapContextMenuConvertStereoMapTo3DSceneButton"; }
			}
			///<summary>Returns the id string for &quot;To Local Scene&quot; (esri_mapping:ConvertStereoMapTo3DLocalScene, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertStereoMapTo3DLocalSceneButton {
				 get { return "esri_mapping_mapContextMenuConvertStereoMapTo3DLocalSceneButton"; }
			}
			///<summary>Returns the id string for &quot;To Map&quot; (esri_mapping:ConvertStereoMapTo2DMap, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertStereoMapTo2DMapButton {
				 get { return "esri_mapping_mapContextMenuConvertStereoMapTo2DMapButton"; }
			}
			///<summary>Returns the id string for &quot;To Map&quot; (esri_mapping:ConvertBasemapToMapFromCatalog, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertToMapButton {
				 get { return "esri_mapping_mapContextMenuConvertToMapButton"; }
			}
			///<summary>Returns the id string for &quot;To Basemap&quot; (esri_mapping:ConvertMapToBasemapFromCatalog, Mapping)</summary>
			public static string esri_mapping_mapContextMenuConvertToBasemapButton {
				 get { return "esri_mapping_mapContextMenuConvertToBasemapButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_mapping:Remove, Mapping)</summary>
			public static string esri_mapping_mapContextMenuRemoveButton {
				 get { return "esri_mapping_mapContextMenuRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedMapProperties, Mapping)</summary>
			public static string esri_mapping_mapPropertiesButton {
				 get { return "esri_mapping_mapPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Set Reference Scale&quot; (esri_mapping:SetMapReferenceScale, Mapping)</summary>
			public static string esri_mapping_SetMapReferenceScale {
				 get { return "esri_mapping_SetMapReferenceScale"; }
			}
			///<summary>Returns the id string for &quot;Clear Reference Scale&quot; (esri_mapping:ClearMapReferenceScale, Mapping)</summary>
			public static string esri_mapping_ClearMapReferenceScale {
				 get { return "esri_mapping_ClearMapReferenceScale"; }
			}
			///<summary>Returns the id string for &quot;Create Thumbnail&quot; (esri_mapping:CreateThumbnail, Mapping)</summary>
			public static string esri_mapping_createThumbnail {
				 get { return "esri_mapping_createThumbnail"; }
			}
			///<summary>Returns the id string for &quot;Import Thumbnail&quot; (esri_mapping:ImportThumbnail, Mapping)</summary>
			public static string esri_mapping_importThumbnail {
				 get { return "esri_mapping_importThumbnail"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (esri_mapping:ViewMap2D, Mapping)</summary>
			public static string esri_mapping_map2DViewButton {
				 get { return "esri_mapping_map2DViewButton"; }
			}
			///<summary>Returns the id string for &quot;Global&quot; (esri_mapping:ViewGlobe3D, Mapping)</summary>
			public static string esri_mapping_globe3DViewButton {
				 get { return "esri_mapping_globe3DViewButton"; }
			}
			///<summary>Returns the id string for &quot;Local&quot; (esri_mapping:ViewScene3D, Mapping)</summary>
			public static string esri_mapping_scene3DViewButton {
				 get { return "esri_mapping_scene3DViewButton"; }
			}
			///<summary>Returns the id string for &quot;To Map&quot; (esri_mapping:ConvertToMap, Mapping)</summary>
			public static string esri_mapping_convertToMapButton {
				 get { return "esri_mapping_convertToMapButton"; }
			}
			///<summary>Returns the id string for &quot;To Global Scene&quot; (esri_mapping:ConvertToGlobalScene, Mapping)</summary>
			public static string esri_mapping_convertToGlobalSceneButton {
				 get { return "esri_mapping_convertToGlobalSceneButton"; }
			}
			///<summary>Returns the id string for &quot;To Local Scene&quot; (esri_mapping:ConvertToLocalScene, Mapping)</summary>
			public static string esri_mapping_convertToLocalSceneButton {
				 get { return "esri_mapping_convertToLocalSceneButton"; }
			}
			///<summary>Returns the id string for &quot;To Basemap&quot; (esri_mapping:ConvertToBasemap, Mapping)</summary>
			public static string esri_mapping_convertToBasemapButton {
				 get { return "esri_mapping_convertToBasemapButton"; }
			}
			///<summary>Returns the id string for &quot;Navigator&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.Ribbon.NavigationControlButton, Mapping)</summary>
			public static string esri_mapping_navigationControl {
				 get { return "esri_mapping_navigationControl"; }
			}
			///<summary>Returns the id string for &quot;Copy Coordinates&quot; (esri_mapping:CopyCoordinates, Mapping)</summary>
			public static string esri_mapping_copyCoordinates {
				 get { return "esri_mapping_copyCoordinates"; }
			}
			///<summary>Returns the id string for &quot;DD&quot; (esri_mapping:CopyDDCoordinates, Mapping)</summary>
			public static string esri_mapping_copyDDButton {
				 get { return "esri_mapping_copyDDButton"; }
			}
			///<summary>Returns the id string for &quot;DDM&quot; (esri_mapping:CopyDDMCoordinates, Mapping)</summary>
			public static string esri_mapping_copyDDMButton {
				 get { return "esri_mapping_copyDDMButton"; }
			}
			///<summary>Returns the id string for &quot;DMS&quot; (esri_mapping:CopyDMSCoordinates, Mapping)</summary>
			public static string esri_mapping_copyDMSButton {
				 get { return "esri_mapping_copyDMSButton"; }
			}
			///<summary>Returns the id string for &quot;MGRS&quot; (esri_mapping:CopyMGRSCoordinates, Mapping)</summary>
			public static string esri_mapping_copyMGRSButton {
				 get { return "esri_mapping_copyMGRSButton"; }
			}
			///<summary>Returns the id string for &quot;USNG&quot; (esri_mapping:CopyUSNGCoordinates, Mapping)</summary>
			public static string esri_mapping_copyUSNGButton {
				 get { return "esri_mapping_copyUSNGButton"; }
			}
			///<summary>Returns the id string for &quot;UTM&quot; (esri_mapping:CopyUTMCoordinates, Mapping)</summary>
			public static string esri_mapping_copyUTMButton {
				 get { return "esri_mapping_copyUTMButton"; }
			}
			///<summary>Returns the id string for &quot;Go To XY&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.GotoXYControlButton, Mapping)</summary>
			public static string esri_mapping_gotoXYControl {
				 get { return "esri_mapping_gotoXYControl"; }
			}
			///<summary>Returns the id string for &quot;Camera&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.CameraPropertiesControlButton, Mapping)</summary>
			public static string esri_mapping_cameraPropertiesControl {
				 get { return "esri_mapping_cameraPropertiesControl"; }
			}
			///<summary>Returns the id string for &quot;Center And Scale&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SyncCenterAndScaleButton, Mapping)</summary>
			public static string esri_mapping_syncCenterAndScaleButton {
				 get { return "esri_mapping_syncCenterAndScaleButton"; }
			}
			///<summary>Returns the id string for &quot;Center&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SyncCenterButton, Mapping)</summary>
			public static string esri_mapping_syncCenterButton {
				 get { return "esri_mapping_syncCenterButton"; }
			}
			///<summary>Returns the id string for &quot;None&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SyncNoCenterButton, Mapping)</summary>
			public static string esri_mapping_syncNoCenterButton {
				 get { return "esri_mapping_syncNoCenterButton"; }
			}
			///<summary>Returns the id string for &quot;Time&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SyncTimeButton, Mapping)</summary>
			public static string esri_mapping_syncTimeButton {
				 get { return "esri_mapping_syncTimeButton"; }
			}
			///<summary>Returns the id string for &quot;Explore&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.ExploreCommand, Mapping)</summary>
			public static string esri_mapping_exploreContext {
				 get { return "esri_mapping_exploreContext"; }
			}
			///<summary>Returns the id string for &quot;Fixed Zoom Out&quot; (esri_mapping:FixedZoomOut, Mapping)</summary>
			public static string esri_mapping_fixedZoomOutButton {
				 get { return "esri_mapping_fixedZoomOutButton"; }
			}
			///<summary>Returns the id string for &quot;Fixed Zoom In&quot; (esri_mapping:FixedZoomIn, Mapping)</summary>
			public static string esri_mapping_fixedZoomInButton {
				 get { return "esri_mapping_fixedZoomInButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom Full Extent&quot; (esri_mapping:ZoomToFullExtent, Mapping)</summary>
			public static string esri_mapping_zoomFullButton {
				 get { return "esri_mapping_zoomFullButton"; }
			}
			///<summary>Returns the id string for &quot;Previous Extent&quot; (esri_mapping:PreviousNavigationPos, Mapping)</summary>
			public static string esri_mapping_prevExtentButton {
				 get { return "esri_mapping_prevExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Next Extent&quot; (esri_mapping:NextNavigationPos, Mapping)</summary>
			public static string esri_mapping_nextExtentButton {
				 get { return "esri_mapping_nextExtentButton"; }
			}
			///<summary>Returns the id string for &quot;Navigation Options&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.NavigationOptionsButton, Mapping)</summary>
			public static string esri_mapping_navigationOptionsButton {
				 get { return "esri_mapping_navigationOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Selection&quot; (esri_mapping:ZoomToAllLayerSelection, Mapping)</summary>
			public static string esri_mapping_zoomToSelectionButton {
				 get { return "esri_mapping_zoomToSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Pan To Selection&quot; (esri_mapping:PanToAllLayerSelection, Mapping)</summary>
			public static string esri_mapping_panToSelectionButton {
				 get { return "esri_mapping_panToSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Pause&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelingPauseLabelsButton, Mapping)</summary>
			public static string esri_mapping_labelPauseButton {
				 get { return "esri_mapping_labelPauseButton"; }
			}
			///<summary>Returns the id string for &quot;View Unplaced&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelingViewUnplacedButton, Mapping)</summary>
			public static string esri_mapping_labelViewUnplacedButton {
				 get { return "esri_mapping_labelViewUnplacedButton"; }
			}
			///<summary>Returns the id string for &quot;Priorities...&quot; (esri_mapping:ShowLabelPrioritiesDialog, Mapping)</summary>
			public static string esri_mapping_labelPriorityRankingButton {
				 get { return "esri_mapping_labelPriorityRankingButton"; }
			}
			///<summary>Returns the id string for &quot;Lock&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelingLockLabelsButton, Mapping)</summary>
			public static string esri_mapping_labelLockButton {
				 get { return "esri_mapping_labelLockButton"; }
			}
			///<summary>Returns the id string for &quot;Weights...&quot; (esri_mapping:ShowLabelWeightsDialog, Mapping)</summary>
			public static string esri_mapping_labelWeightRankingButton {
				 get { return "esri_mapping_labelWeightRankingButton"; }
			}
			///<summary>Returns the id string for &quot;Label Placement Properties&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassPlacementPropertiesButton, Mapping)</summary>
			public static string esri_mapping_placementPropertiesButton {
				 get { return "esri_mapping_placementPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;More ...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolMoreButton, Mapping)</summary>
			public static string esri_mapping_textSymbolMoreButton {
				 get { return "esri_mapping_textSymbolMoreButton"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolPropertiesButton, Mapping)</summary>
			public static string esri_mapping_textSymbolButton {
				 get { return "esri_mapping_textSymbolButton"; }
			}
			///<summary>Returns the id string for &quot;Abbreviation Dictionaries...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.ShowAbbreviationDialogButton, Mapping)</summary>
			public static string esri_mapping_labelAbbreviationDictionariesButton {
				 get { return "esri_mapping_labelAbbreviationDictionariesButton"; }
			}
			///<summary>Returns the id string for &quot;Key Numbering...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.ShowKeyNumberGroupDialogButton, Mapping)</summary>
			public static string esri_mapping_labelKeyNumberingButton {
				 get { return "esri_mapping_labelKeyNumberingButton"; }
			}
			///<summary>Returns the id string for &quot;Summary...&quot; (esri_mapping:ShowLabelSummaryDialog, Mapping)</summary>
			public static string esri_mapping_labelSummaryRankingButton {
				 get { return "esri_mapping_labelSummaryRankingButton"; }
			}
			///<summary>Returns the id string for &quot;Use Maplex Label Engine&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.UseMaplexLabelEngineButton, Mapping)</summary>
			public static string esri_mapping_labelEngineButton {
				 get { return "esri_mapping_labelEngineButton"; }
			}
			///<summary>Returns the id string for &quot;Draft Quality&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.DraftQualityButton, Mapping)</summary>
			public static string esri_mapping_labelEngineQualityButton {
				 get { return "esri_mapping_labelEngineQualityButton"; }
			}
			///<summary>Returns the id string for &quot;Convert To Annotation&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.ConvertLabelsToAnnotationButton, Mapping)</summary>
			public static string esri_mapping_labelConvertLabelsToAnnoRibbonButton {
				 get { return "esri_mapping_labelConvertLabelsToAnnoRibbonButton"; }
			}
			///<summary>Returns the id string for &quot;Convert Labels To Annotation...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.ConvertLabelsToAnnotationButton, Mapping)</summary>
			public static string esri_mapping_labelConvertLabelsToAnnoMenuButton {
				 get { return "esri_mapping_labelConvertLabelsToAnnoMenuButton"; }
			}
			///<summary>Returns the id string for &quot;&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MapPropertiesLabelingButton, Mapping)</summary>
			public static string esri_mapping_labelingOptionsButton {
				 get { return "esri_mapping_labelingOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (ArcGIS.Desktop.Mapping.AddToNewMapButton, Mapping)</summary>
			public static string esri_projectItemAddToNewMapButton {
				 get { return "esri_projectItemAddToNewMapButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Current Map&quot; (ArcGIS.Desktop.Mapping.AddToActiveMapButton, Mapping)</summary>
			public static string esri_projectItemAddToActiveMapButton {
				 get { return "esri_projectItemAddToActiveMapButton"; }
			}
			///<summary>Returns the id string for &quot;Global Scene&quot; (ArcGIS.Desktop.Mapping.AddToNewSceneButton, Mapping)</summary>
			public static string esri_projectItemAddToNewSceneButton {
				 get { return "esri_projectItemAddToNewSceneButton"; }
			}
			///<summary>Returns the id string for &quot;Local Scene&quot; (ArcGIS.Desktop.Mapping.AddToNewLocalSceneButton, Mapping)</summary>
			public static string esri_projectItemAddToNewLocalSceneButton {
				 get { return "esri_projectItemAddToNewLocalSceneButton"; }
			}
			///<summary>Returns the id string for &quot;Add To Current Map&quot; (ArcGIS.Desktop.Mapping.OnlineItemAddToActiveMapButton, Mapping)</summary>
			public static string esri_onlineItemAddToActiveMapButton {
				 get { return "esri_onlineItemAddToActiveMapButton"; }
			}
			///<summary>Returns the id string for &quot;Add To New Diagram Map&quot; (ArcGIS.Desktop.Mapping.AddToNewDiagramMapButton, Mapping)</summary>
			public static string esri_projectItemAddToNewDiagramMapButton {
				 get { return "esri_projectItemAddToNewDiagramMapButton"; }
			}
			///<summary>Returns the id string for &quot;Label&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassLayerEnableButton, Mapping)</summary>
			public static string esri_mapping_labelFeatureLayerEnableButton {
				 get { return "esri_mapping_labelFeatureLayerEnableButton"; }
			}
			///<summary>Returns the id string for &quot;SQL Query&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassSQLQueryButton, Mapping)</summary>
			public static string esri_mapping_labelClassSQLQueryButton {
				 get { return "esri_mapping_labelClassSQLQueryButton"; }
			}
			///<summary>Returns the id string for &quot;Expression&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassExpressionButton, Mapping)</summary>
			public static string esri_mapping_labelClassExpressionButton {
				 get { return "esri_mapping_labelClassExpressionButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Limits&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassClearScaleButton, Mapping)</summary>
			public static string esri_mapping_labelClassClearScalesButton {
				 get { return "esri_mapping_labelClassClearScalesButton"; }
			}
			///<summary>Returns the id string for &quot;Create Label Class...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassCreateButton, Mapping)</summary>
			public static string esri_mapping_labelClassCreateButton {
				 get { return "esri_mapping_labelClassCreateButton"; }
			}
			///<summary>Returns the id string for &quot;Create Label Classes From Symbology...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassFromSymbologyButton, Mapping)</summary>
			public static string esri_mapping_labelClassCreateFromSymbologyButton {
				 get { return "esri_mapping_labelClassCreateFromSymbologyButton"; }
			}
			///<summary>Returns the id string for &quot;Convert Labels To Annotation...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.ConvertLayerLabelsToAnnotationButton, Mapping)</summary>
			public static string esri_mapping_labelConvertLayerLabelsToAnnoMenuButton {
				 get { return "esri_mapping_labelConvertLayerLabelsToAnnoMenuButton"; }
			}
			///<summary>Returns the id string for &quot;Create...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassCreateButton, Mapping)</summary>
			public static string esri_mapping_labelClassCreateSelectedButton {
				 get { return "esri_mapping_labelClassCreateSelectedButton"; }
			}
			///<summary>Returns the id string for &quot;Labeling Properties...&quot; (esri_mapping:ShowLabelClassProperties, Mapping)</summary>
			public static string esri_mapping_labelClassPropertiesButton {
				 get { return "esri_mapping_labelClassPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Label Class&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassRemoveButton, Mapping)</summary>
			public static string esri_mapping_labelClassRemoveButton {
				 get { return "esri_mapping_labelClassRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedLabelClasses, Mapping)</summary>
			public static string esri_mapping_labelClassRemoveSelectedButton {
				 get { return "esri_mapping_labelClassRemoveSelectedButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All But This&quot; (esri_mapping:RemoveAllButThisLabelClass, Mapping)</summary>
			public static string esri_mapping_labelClassRemoveAllButThisButton {
				 get { return "esri_mapping_labelClassRemoveAllButThisButton"; }
			}
			///<summary>Returns the id string for &quot;Rename Label Class...&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassRenameButton, Mapping)</summary>
			public static string esri_mapping_labelClassRenameButton {
				 get { return "esri_mapping_labelClassRenameButton"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (esri_mapping:CopyLabelClassProperties, Mapping)</summary>
			public static string esri_mapping_labelClassCopyButton {
				 get { return "esri_mapping_labelClassCopyButton"; }
			}
			///<summary>Returns the id string for &quot;All Properties&quot; (esri_mapping:PasteLabelClassProperties, Mapping)</summary>
			public static string esri_mapping_labelClassPasteLabelClassButton {
				 get { return "esri_mapping_labelClassPasteLabelClassButton"; }
			}
			///<summary>Returns the id string for &quot;Placement Properties&quot; (esri_mapping:PastePlacementProperties, Mapping)</summary>
			public static string esri_mapping_labelClassPasteLabelingPropsButton {
				 get { return "esri_mapping_labelClassPasteLabelingPropsButton"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol Properties&quot; (esri_mapping:PasteTextSymbolProperties, Mapping)</summary>
			public static string esri_mapping_labelClassPasteTextSymbolButton {
				 get { return "esri_mapping_labelClassPasteTextSymbolButton"; }
			}
			///<summary>Returns the id string for &quot;Expression&quot; (esri_mapping:PasteLabelClassExpression, Mapping)</summary>
			public static string esri_mapping_labelClassPasteExpressionButton {
				 get { return "esri_mapping_labelClassPasteExpressionButton"; }
			}
			///<summary>Returns the id string for &quot;SQL Query&quot; (esri_mapping:PasteLabelClassWhereClause, Mapping)</summary>
			public static string esri_mapping_labelClassPasteSQLQueryButton {
				 get { return "esri_mapping_labelClassPasteSQLQueryButton"; }
			}
			///<summary>Returns the id string for &quot;Visibility Range&quot; (esri_mapping:PasteLabelClassVisibilityRange, Mapping)</summary>
			public static string esri_mapping_labelClassPasteVisibilityRangeButton {
				 get { return "esri_mapping_labelClassPasteVisibilityRangeButton"; }
			}
			///<summary>Returns the id string for &quot;Grow Font&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolIncreaseFontSizeButton, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolIncreaseSizeButton {
				 get { return "esri_mapping_labelTextSymbolIncreaseSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Shrink Font&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolDecreaseFontSizeButton, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolDecreaseSizeButton {
				 get { return "esri_mapping_labelTextSymbolDecreaseSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Select Features&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectContext, Mapping)</summary>
			public static string esri_mapping_selectContext {
				 get { return "esri_mapping_selectContext"; }
			}
			///<summary>Returns the id string for &quot;Select Features&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectLasPointsContext, Mapping)</summary>
			public static string esri_mapping_selectLasPointsContext {
				 get { return "esri_mapping_selectLasPointsContext"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_mapping:ClearSelection, Mapping)</summary>
			public static string esri_mapping_clearSelectionButton {
				 get { return "esri_mapping_clearSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_mapping:ClearSelectionLasPoints, Mapping)</summary>
			public static string esri_mapping_clearSelectionLasPointsButton {
				 get { return "esri_mapping_clearSelectionLasPointsButton"; }
			}
			///<summary>Returns the id string for &quot;Selection Options&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectionOptionsButton, Mapping)</summary>
			public static string esri_mapping_openSelectionOptionsButton {
				 get { return "esri_mapping_openSelectionOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Topmost Layer&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InfoTopmostLayerButton, Mapping)</summary>
			public static string esri_mapping_infoTopmostLayerButton {
				 get { return "esri_mapping_infoTopmostLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Visible Layers&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InfoAllLayersButton, Mapping)</summary>
			public static string esri_mapping_infoAllLayersButton {
				 get { return "esri_mapping_infoAllLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Selectable Layers&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InfoSelectableLayersButton, Mapping)</summary>
			public static string esri_mapping_infoSelectableLayersButton {
				 get { return "esri_mapping_infoSelectableLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Selected in Contents&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InfoSelectedTOCButton, Mapping)</summary>
			public static string esri_mapping_infoSelectedTOCButton {
				 get { return "esri_mapping_infoSelectedTOCButton"; }
			}
			///<summary>Returns the id string for &quot;No Pop-ups&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InfoNoneButton, Mapping)</summary>
			public static string esri_mapping_infoNoneButton {
				 get { return "esri_mapping_infoNoneButton"; }
			}
			///<summary>Returns the id string for &quot;Planar Navigation&quot; (esri_mapping:ToggleScreenPlanePan, Mapping)</summary>
			public static string esri_mapping_screenPlanePanButton {
				 get { return "esri_mapping_screenPlanePanButton"; }
			}
			///<summary>Returns the id string for &quot;Locate&quot; (esri_mapping:ShowFindLocation, Mapping)</summary>
			public static string esri_mapping_showLocateDockPane {
				 get { return "esri_mapping_showLocateDockPane"; }
			}
			///<summary>Returns the id string for &quot;What's here?&quot; (esri_mapping:ReverseGeocodePopup, Mapping)</summary>
			public static string esri_mapping_locateReverseGeocode {
				 get { return "esri_mapping_locateReverseGeocode"; }
			}
			///<summary>Returns the id string for &quot;Constraints&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.ConstraintsControl.ConstraintsMasterButton, Mapping)</summary>
			public static string esri_mapping_constraintsOnButton {
				 get { return "esri_mapping_constraintsOnButton"; }
			}
			///<summary>Returns the id string for &quot;Grid&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.GridControl.GridMasterButton, Mapping)</summary>
			public static string esri_mapping_gridOnButton {
				 get { return "esri_mapping_gridOnButton"; }
			}
			///<summary>Returns the id string for &quot;Ground to Grid Corrections&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.GroundToGridControl.G2GControlButton, Mapping)</summary>
			public static string esri_mapping_g2gOnButton {
				 get { return "esri_mapping_g2gOnButton"; }
			}
			///<summary>Returns the id string for &quot;Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.SnappingToggleButton, Mapping)</summary>
			public static string esri_mapping_snappingToggleButton {
				 get { return "esri_mapping_snappingToggleButton"; }
			}
			///<summary>Returns the id string for &quot;Snapping&quot; (Button, Mapping)</summary>
			public static string esri_mapping_snappingOnButton {
				 get { return "esri_mapping_snappingOnButton"; }
			}
			///<summary>Returns the id string for &quot;Point Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.PointSnappingButton, Mapping)</summary>
			public static string esri_mapping_pointSnappingButton {
				 get { return "esri_mapping_pointSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;End Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.EndSnappingButton, Mapping)</summary>
			public static string esri_mapping_endSnappingButton {
				 get { return "esri_mapping_endSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Vertex Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.VertexSnappingButton, Mapping)</summary>
			public static string esri_mapping_vertexSnappingButton {
				 get { return "esri_mapping_vertexSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Edge Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.EdgeSnappingButton, Mapping)</summary>
			public static string esri_mapping_edgeSnappingButton {
				 get { return "esri_mapping_edgeSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Intersection Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.IntersectionSnappingButton, Mapping)</summary>
			public static string esri_mapping_intersectionSnappingButton {
				 get { return "esri_mapping_intersectionSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Midpoint Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.MidpointSnappingButton, Mapping)</summary>
			public static string esri_mapping_midpointSnappingButton {
				 get { return "esri_mapping_midpointSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Tangent Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.TangentSnappingButton, Mapping)</summary>
			public static string esri_mapping_tangentSnappingButton {
				 get { return "esri_mapping_tangentSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Guide Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.GuideSnappingButton, Mapping)</summary>
			public static string esri_mapping_guideSnappingButton {
				 get { return "esri_mapping_guideSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Element Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.ElementSnappingButton, Mapping)</summary>
			public static string esri_mapping_elementSnappingButton {
				 get { return "esri_mapping_elementSnappingButton"; }
			}
			///<summary>Returns the id string for &quot;Snapping Options&quot; (esri_mapping:LaunchSnappingOptions, Mapping)</summary>
			public static string esri_mapping_snappingOptionsButton {
				 get { return "esri_mapping_snappingOptionsButton"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (esri_mapping:OnCreateThumbnail, Mapping)</summary>
			public static string esri_mapping_createThumbnailButton {
				 get { return "esri_mapping_createThumbnailButton"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_mapping:OnImportThumbnail, Mapping)</summary>
			public static string esri_mapping_browseThumbnailButton {
				 get { return "esri_mapping_browseThumbnailButton"; }
			}
			///<summary>Returns the id string for &quot;Active Range&quot; (esri_mapping:EnableRange, Mapping)</summary>
			public static string esri_mapping_enableRangeButton {
				 get { return "esri_mapping_enableRangeButton"; }
			}
			///<summary>Returns the id string for &quot;Locked Ranges&quot; (esri_mapping:IgnoreLockedRanges, Mapping)</summary>
			public static string esri_mapping_enableLockedRangesButton {
				 get { return "esri_mapping_enableLockedRangesButton"; }
			}
			///<summary>Returns the id string for &quot;Time&quot; (esri_mapping:EnableTime, Mapping)</summary>
			public static string esri_mapping_enableTimeButton {
				 get { return "esri_mapping_enableTimeButton"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (esri_mapping:ShowPointCloudLayerSymbologyPane, Mapping)</summary>
			public static string esri_mapping_showPointCloudLayerSymbologyDockPane {
				 get { return "esri_mapping_showPointCloudLayerSymbologyDockPane"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (esri_mapping:EnableAnimation, Mapping)</summary>
			public static string esri_mapping_enableAnimationButton {
				 get { return "esri_mapping_enableAnimationButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:DeleteAnimationTrack, Mapping)</summary>
			public static string esri_mapping_animationRemoveTrack {
				 get { return "esri_mapping_animationRemoveTrack"; }
			}
			///<summary>Returns the id string for &quot;Overlay Properties&quot; (esri_mapping:ShowAnimationOverlayEditPane, Mapping)</summary>
			public static string esri_mapping_animationOverlayPropertiesButton {
				 get { return "esri_mapping_animationOverlayPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Movie&quot; (esri_mapping:ShowAnimationExportPane, Mapping)</summary>
			public static string esri_mapping_animationExportButton {
				 get { return "esri_mapping_animationExportButton"; }
			}
			///<summary>Returns the id string for &quot;Preview&quot; (esri_mapping:ShowAnimationPreviewPane, Mapping)</summary>
			public static string esri_mapping_animationPreviewButton {
				 get { return "esri_mapping_animationPreviewButton"; }
			}
			///<summary>Returns the id string for &quot;Lock View Size&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimLockViewToggleButton, Mapping)</summary>
			public static string esri_mapping_animationLockViewSizeButton {
				 get { return "esri_mapping_animationLockViewSizeButton"; }
			}
			///<summary>Returns the id string for &quot;Timeline&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimTimelineToggleButton, Mapping)</summary>
			public static string esri_mapping_animationTimelineButton {
				 get { return "esri_mapping_animationTimelineButton"; }
			}
			///<summary>Returns the id string for &quot;Extruded Path and Keyframes&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.KeyExtrudedPathFeedbackButton, Mapping)</summary>
			public static string esri_mapping_extrudedPathFeedbackButton {
				 get { return "esri_mapping_extrudedPathFeedbackButton"; }
			}
			///<summary>Returns the id string for &quot;Path and Keyframes&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.KeyPathFeedbackButton, Mapping)</summary>
			public static string esri_mapping_keyPathFeedbackButton {
				 get { return "esri_mapping_keyPathFeedbackButton"; }
			}
			///<summary>Returns the id string for &quot;Keyframes&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.KeyFeedbackButton, Mapping)</summary>
			public static string esri_mapping_keyFeedbackButton {
				 get { return "esri_mapping_keyFeedbackButton"; }
			}
			///<summary>Returns the id string for &quot;Path&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.PathFeedbackButton, Mapping)</summary>
			public static string esri_mapping_pathFeedbackButton {
				 get { return "esri_mapping_pathFeedbackButton"; }
			}
			///<summary>Returns the id string for &quot;Append&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationAppendButton, Mapping)</summary>
			public static string esri_mapping_appendTransitionButton {
				 get { return "esri_mapping_appendTransitionButton"; }
			}
			///<summary>Returns the id string for &quot;Sync&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SynchronizeOfflineMapButton, Mapping)</summary>
			public static string esri_mapping_offlineSyncButton {
				 get { return "esri_mapping_offlineSyncButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.RemoveOfflineMapButton, Mapping)</summary>
			public static string esri_mapping_offlineRemoveButton {
				 get { return "esri_mapping_offlineRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Fixed&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AppendFixedButton, Mapping)</summary>
			public static string esri_mapping_fixedAppendTransitionButton {
				 get { return "esri_mapping_fixedAppendTransitionButton"; }
			}
			///<summary>Returns the id string for &quot;Adjustable&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AppendAdjustableButton, Mapping)</summary>
			public static string esri_mapping_adjustableAppendTransitionButton {
				 get { return "esri_mapping_adjustableAppendTransitionButton"; }
			}
			///<summary>Returns the id string for &quot;Linear&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AppendLinearButton, Mapping)</summary>
			public static string esri_mapping_linearAppendTransitionButton {
				 get { return "esri_mapping_linearAppendTransitionButton"; }
			}
			///<summary>Returns the id string for &quot;Hop&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AppendHopButton, Mapping)</summary>
			public static string esri_mapping_hopAppendTransitionButton {
				 get { return "esri_mapping_hopAppendTransitionButton"; }
			}
			///<summary>Returns the id string for &quot;Stepped&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AppendSteppedButton, Mapping)</summary>
			public static string esri_mapping_steppedAppendTransitionButton {
				 get { return "esri_mapping_steppedAppendTransitionButton"; }
			}
			///<summary>Returns the id string for &quot;Interactive Analysis&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveAnalysisButton, Mapping)</summary>
			public static string esri_mapping_startInteractiveAnalysisButton {
				 get { return "esri_mapping_startInteractiveAnalysisButton"; }
			}
			///<summary>Returns the id string for &quot;Clear All&quot; (esri_mapping:ClearInteractiveAnalysis, Mapping)</summary>
			public static string esri_mapping_clearInteractiveAnalysisButton {
				 get { return "esri_mapping_clearInteractiveAnalysisButton"; }
			}
			///<summary>Returns the id string for &quot;Move to...&quot; (esri_mapping:MoveToInteractiveAnalysis, Mapping)</summary>
			public static string esri_mapping_moveToInteractiveAnalysisButton {
				 get { return "esri_mapping_moveToInteractiveAnalysisButton"; }
			}
			///<summary>Returns the id string for &quot;Rotate to...&quot; (esri_mapping:RotateToInteractiveAnalysis, Mapping)</summary>
			public static string esri_mapping_rotateToInteractiveAnalysisButton {
				 get { return "esri_mapping_rotateToInteractiveAnalysisButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (esri_mapping:MoveCameraToInteractiveAnalysis, Mapping)</summary>
			public static string esri_mapping_moveCameraToInteractiveAnalysisButton {
				 get { return "esri_mapping_moveCameraToInteractiveAnalysisButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_mapping:DeleteInteractiveAnalysis, Mapping)</summary>
			public static string esri_mapping_deleteInteractiveAnalysisButton {
				 get { return "esri_mapping_deleteInteractiveAnalysisButton"; }
			}
			///<summary>Returns the id string for &quot;Line of Sight Properties&quot; (esri_mapping:OpenLineOfSightProperties, Mapping)</summary>
			public static string esri_mapping_lineOfSightPropertiesButton {
				 get { return "esri_mapping_lineOfSightPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;View Dome Properties&quot; (esri_mapping:OpenViewDomeProperties, Mapping)</summary>
			public static string esri_mapping_viewDomePropertiesButton {
				 get { return "esri_mapping_viewDomePropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Viewshed Properties&quot; (esri_mapping:OpenViewshedProperties, Mapping)</summary>
			public static string esri_mapping_viewshedPropertiesButton {
				 get { return "esri_mapping_viewshedPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Attach to Camera&quot; (esri_mapping:AttachSlicePlaneToCamera, Mapping)</summary>
			public static string esri_mapping_attachSlicePlaneToCameraButton {
				 get { return "esri_mapping_attachSlicePlaneToCameraButton"; }
			}
			///<summary>Returns the id string for &quot;Slice Properties&quot; (esri_mapping:OpenSliceRectProperties, Mapping)</summary>
			public static string esri_mapping_sliceRectPropertiesButton {
				 get { return "esri_mapping_sliceRectPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Slice Properties&quot; (esri_mapping:OpenSliceBoxProperties, Mapping)</summary>
			public static string esri_mapping_sliceBoxPropertiesButton {
				 get { return "esri_mapping_sliceBoxPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Slice Properties&quot; (esri_mapping:OpenSliceCylinderProperties, Mapping)</summary>
			public static string esri_mapping_sliceCylinderPropertiesButton {
				 get { return "esri_mapping_sliceCylinderPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Slice Properties&quot; (esri_mapping:OpenSliceSphereProperties, Mapping)</summary>
			public static string esri_mapping_sliceSpherePropertiesButton {
				 get { return "esri_mapping_sliceSpherePropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Move Slice&quot; (esri_mapping:SliceMove, Mapping)</summary>
			public static string esri_mapping_SliceMoveButton {
				 get { return "esri_mapping_SliceMoveButton"; }
			}
			///<summary>Returns the id string for &quot;Rotate Slice&quot; (esri_mapping:SliceRotate, Mapping)</summary>
			public static string esri_mapping_SliceRotateButton {
				 get { return "esri_mapping_SliceRotateButton"; }
			}
			///<summary>Returns the id string for &quot;Move and Rotate Slice&quot; (esri_mapping:SliceMoveRotate, Mapping)</summary>
			public static string esri_mapping_SliceMoveRotateButton {
				 get { return "esri_mapping_SliceMoveRotateButton"; }
			}
			///<summary>Returns the id string for &quot;Scale Slice&quot; (esri_mapping:SliceScale, Mapping)</summary>
			public static string esri_mapping_SliceScaleButton {
				 get { return "esri_mapping_SliceScaleButton"; }
			}
			///<summary>Returns the id string for &quot;Accept Slice&quot; (esri_mapping:SliceOk, Mapping)</summary>
			public static string esri_mapping_SliceOkButton {
				 get { return "esri_mapping_SliceOkButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Slice&quot; (esri_mapping:SliceDelete, Mapping)</summary>
			public static string esri_mapping_SliceDeleteButton {
				 get { return "esri_mapping_SliceDeleteButton"; }
			}
			///<summary>Returns the id string for &quot;Move Cut And Fill&quot; (esri_mapping:SliceMove, Mapping)</summary>
			public static string esri_mapping_CutFillMoveButton {
				 get { return "esri_mapping_CutFillMoveButton"; }
			}
			///<summary>Returns the id string for &quot;Tilt Cut And Fill&quot; (esri_mapping:SliceRotate, Mapping)</summary>
			public static string esri_mapping_CutFillRotateButton {
				 get { return "esri_mapping_CutFillRotateButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Cut And Fill&quot; (esri_mapping:SliceDelete, Mapping)</summary>
			public static string esri_mapping_CutFillDeleteButton {
				 get { return "esri_mapping_CutFillDeleteButton"; }
			}
			///<summary>Returns the id string for &quot;Cut And Fill Properties&quot; (esri_mapping:OpenCutFillProperties, Mapping)</summary>
			public static string esri_mapping_cutFillPropertiesButton {
				 get { return "esri_mapping_cutFillPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Move and Rotate Profile&quot; (esri_mapping:ProfileMoveRotate, Mapping)</summary>
			public static string esri_mapping_ProfileMoveRotateButton {
				 get { return "esri_mapping_ProfileMoveRotateButton"; }
			}
			///<summary>Returns the id string for &quot;Scale Profile&quot; (esri_mapping:ProfileScale, Mapping)</summary>
			public static string esri_mapping_ProfileScaleButton {
				 get { return "esri_mapping_ProfileScaleButton"; }
			}
			///<summary>Returns the id string for &quot;Finish Profile&quot; (esri_mapping:ProfileFinish, Mapping)</summary>
			public static string esri_mapping_ProfileFinishButton {
				 get { return "esri_mapping_ProfileFinishButton"; }
			}
			///<summary>Returns the id string for &quot;Move Away&quot; (esri_mapping:ProfileMoveAway, Mapping)</summary>
			public static string esri_mapping_ProfileMoveAwayButton {
				 get { return "esri_mapping_ProfileMoveAwayButton"; }
			}
			///<summary>Returns the id string for &quot;Move Towards&quot; (esri_mapping:ProfileMoveTowards, Mapping)</summary>
			public static string esri_mapping_ProfileMoveTowardsButton {
				 get { return "esri_mapping_ProfileMoveTowardsButton"; }
			}
			///<summary>Returns the id string for &quot;Auto-complete&quot; (esri_mapping:ProfileAutoComplete, Mapping)</summary>
			public static string esri_mapping_autoCompleteProfileButton {
				 get { return "esri_mapping_autoCompleteProfileButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedLayersAsync, Mapping)</summary>
			public static string esri_mapping_removeSelectedLayersButton {
				 get { return "esri_mapping_removeSelectedLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Layer&quot; (esri_mapping:ZoomToSelectedLayers, Mapping)</summary>
			public static string esri_mapping_zoomToSelectedLayersButton {
				 get { return "esri_mapping_zoomToSelectedLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedLayerProperties, Mapping)</summary>
			public static string esri_mapping_selectedLayerPropertiesButton {
				 get { return "esri_mapping_selectedLayerPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowBinningProperties, Mapping)</summary>
			public static string esri_mapping_selectedBinningLayerPropertiesButton {
				 get { return "esri_mapping_selectedBinningLayerPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedLayerProperties, Mapping)</summary>
			public static string esri_mapping_singleSelectedLayerPropertiesButton {
				 get { return "esri_mapping_singleSelectedLayerPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedLayerProperties, Mapping)</summary>
			public static string esri_mapping_selectedAnnotationSubLayerPropertiesButton {
				 get { return "esri_mapping_selectedAnnotationSubLayerPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;New Group Layer&quot; (esri_mapping:AddGroupLayer, Mapping)</summary>
			public static string esri_mapping_newGroupLayerButton {
				 get { return "esri_mapping_newGroupLayerButton"; }
			}
			///<summary>Returns the id string for &quot;New Group Layer&quot; (esri_mapping:Add2DGroupLayer, Mapping)</summary>
			public static string esri_mapping_new2DGroupLayerButton {
				 get { return "esri_mapping_new2DGroupLayerButton"; }
			}
			///<summary>Returns the id string for &quot;New Group Layer&quot; (esri_mapping:Add3DGroupLayer, Mapping)</summary>
			public static string esri_mapping_new3DGroupLayerButton {
				 get { return "esri_mapping_new3DGroupLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Add Elevation Surface&quot; (esri_mapping:AddCustomElevationSurface, Mapping)</summary>
			public static string esri_mapping_newElevationSurfaceButton {
				 get { return "esri_mapping_newElevationSurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Create Surfaces From Sources&quot; (esri_mapping:CreateElevationSurfacesFromSources, Mapping)</summary>
			public static string esri_mapping_createSurfacesFromSourcesButton {
				 get { return "esri_mapping_createSurfacesFromSourcesButton"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (esri_mapping:PasteClipboardElevationSurfaces, Mapping)</summary>
			public static string esri_mapping_PasteElevationSurfaceButton {
				 get { return "esri_mapping_PasteElevationSurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Add Elevation Source&quot; (esri_mapping:AddElevationSource, Mapping)</summary>
			public static string esri_mapping_newElevationSourceButton {
				 get { return "esri_mapping_newElevationSourceButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveElevationSource, Mapping)</summary>
			public static string esri_mapping_RemoveElevationSourceButton {
				 get { return "esri_mapping_RemoveElevationSourceButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveElevationSurface, Mapping)</summary>
			public static string esri_mapping_RemoveElevationSurfaceButton {
				 get { return "esri_mapping_RemoveElevationSurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedElevationSourceProperties, Mapping)</summary>
			public static string esri_mapping_selectedElevationSourcePropertiesButton {
				 get { return "esri_mapping_selectedElevationSourcePropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Group&quot; (esri_mapping:GroupSelectedLayersAsync, Mapping)</summary>
			public static string esri_mapping_groupSelectedLayersButton {
				 get { return "esri_mapping_groupSelectedLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Ungroup&quot; (esri_mapping:UngroupSelectedLayerAsync, Mapping)</summary>
			public static string esri_mapping_ungroupSelectedLayerButton {
				 get { return "esri_mapping_ungroupSelectedLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Add Data&quot; (esri_mapping:AddDataToSelectedGroupLayer, Mapping)</summary>
			public static string esri_mapping_addDataToGroupLayerButton {
				 get { return "esri_mapping_addDataToGroupLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (esri_mapping:InternalShowSymbologyPane, Mapping)</summary>
			public static string esri_mapping_selectedLayerSymbologyButton {
				 get { return "esri_mapping_selectedLayerSymbologyButton"; }
			}
			///<summary>Returns the id string for &quot;Make this the only selectable layer&quot; (esri_mapping:MakeOnlySelectableLayerAsync, Mapping)</summary>
			public static string esri_mapping_makeOnlySelectableLayerButton {
				 get { return "esri_mapping_makeOnlySelectableLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Make this the only snappable layer&quot; (esri_mapping:MakeOnlySnappableLayerAsync, Mapping)</summary>
			public static string esri_mapping_makeOnlySnappableLayerButton {
				 get { return "esri_mapping_makeOnlySnappableLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Make Visible&quot; (esri_mapping:ZoomToMakeVisible, Mapping)</summary>
			public static string esri_mapping_zoomToMakeVisibleButton {
				 get { return "esri_mapping_zoomToMakeVisibleButton"; }
			}
			///<summary>Returns the id string for &quot;Bring To Front&quot; (esri_mapping:BringLayerToFront, Mapping)</summary>
			public static string esri_mapping_bringToFrontButton {
				 get { return "esri_mapping_bringToFrontButton"; }
			}
			///<summary>Returns the id string for &quot;Bring Forward&quot; (esri_mapping:BringLayerForward, Mapping)</summary>
			public static string esri_mapping_bringForwardButton {
				 get { return "esri_mapping_bringForwardButton"; }
			}
			///<summary>Returns the id string for &quot;Send To Back&quot; (esri_mapping:SendLayerToBack, Mapping)</summary>
			public static string esri_mapping_sendToBackButton {
				 get { return "esri_mapping_sendToBackButton"; }
			}
			///<summary>Returns the id string for &quot;Send Backward&quot; (esri_mapping:SendLayerBackward, Mapping)</summary>
			public static string esri_mapping_sendBackwardButton {
				 get { return "esri_mapping_sendBackwardButton"; }
			}
			///<summary>Returns the id string for &quot;Depth Priority&quot; (esri_mapping:OpenDepthPriorityDialog, Mapping)</summary>
			public static string esri_mapping_depthPriorityButton {
				 get { return "esri_mapping_depthPriorityButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Selection&quot; (esri_mapping:ZoomToLayerSelection, Mapping)</summary>
			public static string esri_mapping_zoomToLayerSelectionButton {
				 get { return "esri_mapping_zoomToLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Pan To Selection&quot; (esri_mapping:PanToLayerSelection, Mapping)</summary>
			public static string esri_mapping_panToLayerSelectionButton {
				 get { return "esri_mapping_panToLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Selection&quot; (esri_mapping:ClearLayerSelection, Mapping)</summary>
			public static string esri_mapping_clearLayerSelectionButton {
				 get { return "esri_mapping_clearLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Switch Selection&quot; (esri_mapping:SwitchLayerSelection, Mapping)</summary>
			public static string esri_mapping_switchLayerSelectionButton {
				 get { return "esri_mapping_switchLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_mapping:SelectAllLayerSelection, Mapping)</summary>
			public static string esri_mapping_selectAllLayerSelectionButton {
				 get { return "esri_mapping_selectAllLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Select Visible Features&quot; (esri_mapping:SelectVisibleLayerSelection, Mapping)</summary>
			public static string esri_mapping_selectVisibleLayerSelectionButton {
				 get { return "esri_mapping_selectVisibleLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Select All In Layer&quot; (esri_mapping:SelectAllInSelectionLayersSelection, Mapping)</summary>
			public static string esri_editing_selectAllInLayer {
				 get { return "esri_editing_selectAllInLayer"; }
			}
			///<summary>Returns the id string for &quot;Make Layer From Selected Features&quot; (esri_mapping:CreateSelectionLayer, Mapping)</summary>
			public static string esri_mapping_createSelectionLayerButton {
				 get { return "esri_mapping_createSelectionLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Layer From Selection&quot; (esri_mapping:CreateSelectionLayer, Mapping)</summary>
			public static string esri_mapping_createSelectionLayerButton_Ribbon {
				 get { return "esri_mapping_createSelectionLayerButton_Ribbon"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedStandaloneTablesAsync, Mapping)</summary>
			public static string esri_mapping_removeSelectedStandaloneTablesButton {
				 get { return "esri_mapping_removeSelectedStandaloneTablesButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedStandaloneTableProperties, Mapping)</summary>
			public static string esri_mapping_selectedTablePropertiesButton {
				 get { return "esri_mapping_selectedTablePropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Selection&quot; (esri_mapping:ClearTableRecordSelection, Mapping)</summary>
			public static string esri_mapping_clearStandaloneTableSelectionButton {
				 get { return "esri_mapping_clearStandaloneTableSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Switch Selection&quot; (esri_mapping:SwitchTableRecordSelection, Mapping)</summary>
			public static string esri_mapping_switchStandaloneTableSelectionButton {
				 get { return "esri_mapping_switchStandaloneTableSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_mapping:SelectAllTableRecords, Mapping)</summary>
			public static string esri_mapping_selectAllStandaloneTableSelectionButton {
				 get { return "esri_mapping_selectAllStandaloneTableSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedStandaloneVideosAsync, Mapping)</summary>
			public static string esri_mapping_removeSelectedStandaloneVideosButton {
				 get { return "esri_mapping_removeSelectedStandaloneVideosButton"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (esri_mapping:ShowSelectedStandaloneVideoProperties, Mapping)</summary>
			public static string esri_mapping_selectedVideoPropertiesButton {
				 get { return "esri_mapping_selectedVideoPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Clear Limits&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.ClearScalesButton, Mapping)</summary>
			public static string esri_mapping_layerClearScalesButton {
				 get { return "esri_mapping_layerClearScalesButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerFlickerButton&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.FlickerButton, Mapping)</summary>
			public static string esri_mapping_layerFlickerButton {
				 get { return "esri_mapping_layerFlickerButton"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (esri_mapping:InternalShowSymbologyPane, Mapping)</summary>
			public static string esri_mapping_showLayerSymbologyDockPane {
				 get { return "esri_mapping_showLayerSymbologyDockPane"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (esri_mapping:InternalShowBinsSymbologyPane, Mapping)</summary>
			public static string esri_mapping_showLayerBinsSymbologyDockPane {
				 get { return "esri_mapping_showLayerBinsSymbologyDockPane"; }
			}
			///<summary>Returns the id string for &quot;Symbol Layers&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.SymbolLayersButton, Mapping)</summary>
			public static string esri_mapping_symbolLayersButton {
				 get { return "esri_mapping_symbolLayersButton"; }
			}
			///<summary>Returns the id string for &quot;Display Filters&quot; (esri_mapping:InternalShowDisplayFilters, Mapping)</summary>
			public static string esri_mapping_layerDisplayFilters {
				 get { return "esri_mapping_layerDisplayFilters"; }
			}
			///<summary>Returns the id string for &quot;Enable Lighting&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.Ribbon.EnableLightingButton, Mapping)</summary>
			public static string esri_mapping_enableLightingButton {
				 get { return "esri_mapping_enableLightingButton"; }
			}
			///<summary>Returns the id string for &quot;Eye-Dome Lighting&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.Ribbon.EnableEyeDomeLightingButton, Mapping)</summary>
			public static string esri_mapping_enableEyeDomeLightingButton {
				 get { return "esri_mapping_enableEyeDomeLightingButton"; }
			}
			///<summary>Returns the id string for &quot;Build Definition Query&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.DefinitionQueryButton, Mapping)</summary>
			public static string esri_mapping_openDefQueryButton {
				 get { return "esri_mapping_openDefQueryButton"; }
			}
			///<summary>Returns the id string for &quot;Annotate Selected Features&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.AnnotateSelectedFeaturesButton, Mapping)</summary>
			public static string esri_mapping_annotateSelectedButton {
				 get { return "esri_mapping_annotateSelectedButton"; }
			}
			///<summary>Returns the id string for &quot;Labels to Annotation&quot; (esri_mapping:LabelsToAnnotation, Mapping)</summary>
			public static string esri_mapping_labelToAnnotationButton {
				 get { return "esri_mapping_labelToAnnotationButton"; }
			}
			///<summary>Returns the id string for &quot;Copy Records&quot; (esri_mapping:CopyRecords, Mapping)</summary>
			public static string esri_mapping_copyRecordsButton {
				 get { return "esri_mapping_copyRecordsButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamingDataPropertiesButton&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataPropertiesButton, Mapping)</summary>
			public static string esri_mapping_streamingDataPropertiesButton {
				 get { return "esri_mapping_streamingDataPropertiesButton"; }
			}
			///<summary>Returns the id string for &quot;Label&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassLayerEnableButton, Mapping)</summary>
			public static string esri_mapping_labelSceneLayerEnableButton {
				 get { return "esri_mapping_labelSceneLayerEnableButton"; }
			}
			///<summary>Returns the id string for &quot;Select All&quot; (esri_mapping:SelectAllLayerSelection, Mapping)</summary>
			public static string esri_mapping_selectAllSceneLayerSelectionButton {
				 get { return "esri_mapping_selectAllSceneLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Create Isosurface&quot; (esri_mapping:CreateVoxelLayerIsosurface, Mapping)</summary>
			public static string esri_mapping_voxelLayer_createIsosurfaceButton {
				 get { return "esri_mapping_voxelLayer_createIsosurfaceButton"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (esri_mapping:CreateVoxelLayerIsosurface, Mapping)</summary>
			public static string esri_mapping_voxelLayer_createIsosurfaceButton2 {
				 get { return "esri_mapping_voxelLayer_createIsosurfaceButton2"; }
			}
			///<summary>Returns the id string for &quot;Remove All Isosurfaces&quot; (esri_mapping:RemoveAllIsosurfaces, Mapping)</summary>
			public static string esri_mapping_voxelIsosurfaces_removeAllIsosurfacesButton {
				 get { return "esri_mapping_voxelIsosurfaces_removeAllIsosurfacesButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Isosurfaces&quot; (esri_mapping:RemoveAllGroupIsosurfaces, Mapping)</summary>
			public static string esri_mapping_voxelIsosurfaces_removeAllGroupIsosurfacesButton {
				 get { return "esri_mapping_voxelIsosurfaces_removeAllGroupIsosurfacesButton"; }
			}
			///<summary>Returns the id string for &quot;Modify&quot; (esri_mapping:ModifyVoxelIsosurface, Mapping)</summary>
			public static string esri_mapping_voxelIsosurface_modifyButton {
				 get { return "esri_mapping_voxelIsosurface_modifyButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedIsosurfacesAsync, Mapping)</summary>
			public static string esri_mapping_voxelIsosurface_removeButton {
				 get { return "esri_mapping_voxelIsosurface_removeButton"; }
			}
			///<summary>Returns the id string for &quot;Pin&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.PinIsosurfaceButton, Mapping)</summary>
			public static string esri_mapping_voxelIsosurface_pinButton {
				 get { return "esri_mapping_voxelIsosurface_pinButton"; }
			}
			///<summary>Returns the id string for &quot;Lock Color&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.LockIsosurfaceColorButton, Mapping)</summary>
			public static string esri_mapping_voxelIsosurface_lockColorButton {
				 get { return "esri_mapping_voxelIsosurface_lockColorButton"; }
			}
			///<summary>Returns the id string for &quot;Exclude From Slices&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.ExcludeIsosurfaceFromSlicesButton, Mapping)</summary>
			public static string esri_mapping_voxelIsosurface_excludeFromSlicesButton {
				 get { return "esri_mapping_voxelIsosurface_excludeFromSlicesButton"; }
			}
			///<summary>Returns the id string for &quot;Create Slice&quot; (esri_mapping:CreateVoxelSlice, Mapping)</summary>
			public static string esri_mapping_voxelSlice_createButton {
				 get { return "esri_mapping_voxelSlice_createButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedVoxelSlicesAsync, Mapping)</summary>
			public static string esri_mapping_voxelSlice_removeButton {
				 get { return "esri_mapping_voxelSlice_removeButton"; }
			}
			///<summary>Returns the id string for &quot;Edit&quot; (esri_mapping:EditSelectedStandardVoxelSlice, Mapping)</summary>
			public static string esri_mapping_voxelSlice_editButton {
				 get { return "esri_mapping_voxelSlice_editButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Slices&quot; (esri_mapping:RemoveAllVoxelSlices, Mapping)</summary>
			public static string esri_mapping_voxelSlice_removeAllButton {
				 get { return "esri_mapping_voxelSlice_removeAllButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveSelectedVoxelSection, Mapping)</summary>
			public static string esri_mapping_voxelSection_removeButton {
				 get { return "esri_mapping_voxelSection_removeButton"; }
			}
			///<summary>Returns the id string for &quot;Remove All Sections&quot; (esri_mapping:RemoveAllVoxelSections, Mapping)</summary>
			public static string esri_mapping_voxelSection_removeAllButton {
				 get { return "esri_mapping_voxelSection_removeAllButton"; }
			}
			///<summary>Returns the id string for &quot;Create Section&quot; (esri_mapping:CreateVoxelSection, Mapping)</summary>
			public static string esri_mapping_voxelSection_createButton {
				 get { return "esri_mapping_voxelSection_createButton"; }
			}
			///<summary>Returns the id string for &quot;Sync with current symbology&quot; (esri_mapping:SyncVoxelSectionWithSymbology, Mapping)</summary>
			public static string esri_mapping_voxelSection_SyncWithSymbologyButton {
				 get { return "esri_mapping_voxelSection_SyncWithSymbologyButton"; }
			}
			///<summary>Returns the id string for &quot;Create section for current variable&quot; (esri_mapping:CreateVoxelSectionForVariable, Mapping)</summary>
			public static string esri_mapping_voxelSection_CreateForVariableButton {
				 get { return "esri_mapping_voxelSection_CreateForVariableButton"; }
			}
			///<summary>Returns the id string for &quot;Change Version&quot; (esri_mapping:ChangeVersion, Mapping)</summary>
			public static string esri_mapping_changeVersionButton {
				 get { return "esri_mapping_changeVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Change Moment&quot; (esri_mapping:ChangeHistoricalTime, Mapping)</summary>
			public static string esri_mapping_changeTimeButton {
				 get { return "esri_mapping_changeTimeButton"; }
			}
			///<summary>Returns the id string for &quot;Manage Versions&quot; (esri_mapping:OpenVersionViewAsync, Mapping)</summary>
			public static string esri_mapping_versionViewButton {
				 get { return "esri_mapping_versionViewButton"; }
			}
			///<summary>Returns the id string for &quot;New Version&quot; (esri_mapping:OpenNewVersionDialogAsync, Mapping)</summary>
			public static string esri_mapping_createNewVersionButton {
				 get { return "esri_mapping_createNewVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Historical Moments&quot; (esri_mapping:ChangeHistoricalTime, Mapping)</summary>
			public static string esri_mapping_historicalViewButton {
				 get { return "esri_mapping_historicalViewButton"; }
			}
			///<summary>Returns the id string for &quot;New Filter&quot; (esri_mapping:CreateNewObject3DRenderingFilter, Mapping)</summary>
			public static string esri_mapping_createObject3DRenderingFilter {
				 get { return "esri_mapping_createObject3DRenderingFilter"; }
			}
			///<summary>Returns the id string for &quot;Delete All Inactive Filters&quot; (esri_mapping:DeleteAllObject3DRenderingFilters, Mapping)</summary>
			public static string esri_mapping_deleteAllObject3DRenderingFilters {
				 get { return "esri_mapping_deleteAllObject3DRenderingFilters"; }
			}
			///<summary>Returns the id string for &quot;New Bookmark...&quot; (esri_mapping:BookmarksManager.CreateBookmarkAsync, Mapping)</summary>
			public static string esri_mapping_createBookmark {
				 get { return "esri_mapping_createBookmark"; }
			}
			///<summary>Returns the id string for &quot;Manage Bookmarks&quot; (esri_mapping:BookmarksManager.ShowDockingPane, Mapping)</summary>
			public static string esri_mapping_showBookmarksWindow {
				 get { return "esri_mapping_showBookmarksWindow"; }
			}
			///<summary>Returns the id string for &quot;Export Bookmarks...&quot; (esri_mapping:BookmarksManager.ExportBookMarksToFile, Mapping)</summary>
			public static string esri_mapping_exportBookmarksToFile {
				 get { return "esri_mapping_exportBookmarksToFile"; }
			}
			///<summary>Returns the id string for &quot;Import Bookmarks...&quot; (esri_mapping:BookmarksManager.ImportBookMarksFromFile, Mapping)</summary>
			public static string esri_mapping_importBookmarksFromFile {
				 get { return "esri_mapping_importBookmarksFromFile"; }
			}
			///<summary>Returns the id string for &quot;Ignore Time&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarkGalleryIgnoreTimeToggleButton, Mapping)</summary>
			public static string esri_mapping_ignoreBookmarkTime {
				 get { return "esri_mapping_ignoreBookmarkTime"; }
			}
			///<summary>Returns the id string for &quot;Ignore Range&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarkGalleryIgnoreRangeToggleButton, Mapping)</summary>
			public static string esri_mapping_ignoreBookmarkRange {
				 get { return "esri_mapping_ignoreBookmarkRange"; }
			}
			///<summary>Returns the id string for &quot;Show Descriptions&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarkGalleryDescriptionToggleButton, Mapping)</summary>
			public static string esri_mapping_showBookmarkDescription {
				 get { return "esri_mapping_showBookmarkDescription"; }
			}
			///<summary>Returns the id string for &quot;Background&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.ClipButton, Mapping)</summary>
			public static string esri_mapping_rasterBackground {
				 get { return "esri_mapping_rasterBackground"; }
			}
			///<summary>Returns the id string for &quot;Zoom To Source Resolution&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.ZoomOneToOneButton, Mapping)</summary>
			public static string esri_mapping_rasterMnuViewOneToOne {
				 get { return "esri_mapping_rasterMnuViewOneToOne"; }
			}
			///<summary>Returns the id string for &quot;North&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.NorthUpButton, Mapping)</summary>
			public static string esri_mapping_rasterViewNorthUp {
				 get { return "esri_mapping_rasterViewNorthUp"; }
			}
			///<summary>Returns the id string for &quot;Up&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.TopUpButton, Mapping)</summary>
			public static string esri_mapping_rasterViewTopUp {
				 get { return "esri_mapping_rasterViewTopUp"; }
			}
			///<summary>Returns the id string for &quot;Add To Map&quot; (esri_mapping:AddSelectedRastersAsGroupLayer, Mapping)</summary>
			public static string esri_mapping_addSelectedRastersToViewButton {
				 get { return "esri_mapping_addSelectedRastersToViewButton"; }
			}
			///<summary>Returns the id string for &quot;Visible&quot; (esri_mapping:SelectVisibleRasters, Mapping)</summary>
			public static string esri_mapping_selectVisibleRastersButton {
				 get { return "esri_mapping_selectVisibleRastersButton"; }
			}
			///<summary>Returns the id string for &quot;Lock To Selection&quot; (esri_mapping:LockToSelectedRasterItems, Mapping)</summary>
			public static string esri_mapping_lockToSelectedRastersButton {
				 get { return "esri_mapping_lockToSelectedRastersButton"; }
			}
			///<summary>Returns the id string for &quot;Deselect overviews&quot; (esri_mapping:ReselectPrimaryRasterItems, Mapping)</summary>
			public static string esri_mapping_reselectPrimaryButton {
				 get { return "esri_mapping_reselectPrimaryButton"; }
			}
			///<summary>Returns the id string for &quot;All&quot; (esri_mapping:SelectAllLayerSelection, Mapping)</summary>
			public static string esri_mapping_rasterSelectAllLayerSelectionButton {
				 get { return "esri_mapping_rasterSelectAllLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_mapping:ClearLayerSelection, Mapping)</summary>
			public static string esri_mapping_rasterClearLayerSelectionButton {
				 get { return "esri_mapping_rasterClearLayerSelectionButton"; }
			}
			///<summary>Returns the id string for &quot;Custom&quot; (esri_mapping:CustomBandCombination, Mapping)</summary>
			public static string esri_mapping_customBandCombinationButton {
				 get { return "esri_mapping_customBandCombinationButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_mapping:RemoveBandCombination, Mapping)</summary>
			public static string esri_mapping_removeBandCombinationButton {
				 get { return "esri_mapping_removeBandCombinationButton"; }
			}
			///<summary>Returns the id string for &quot;New Mosaic&quot; (esri_mapping:CreateMosaicCommand, Mapping)</summary>
			public static string esri_mapping_createMosaicDatasetButton {
				 get { return "esri_mapping_createMosaicDatasetButton"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (esri_mapping:InternalShowSymbologyPane, Mapping)</summary>
			public static string esri_mapping_rasterLayerSymbologyButton {
				 get { return "esri_mapping_rasterLayerSymbologyButton"; }
			}
			///<summary>Returns the id string for &quot;Stretch Type&quot; (esri_mapping:ShowRasterHistogramPage, Mapping)</summary>
			public static string esri_mapping_rasterLayerHistogramButton {
				 get { return "esri_mapping_rasterLayerHistogramButton"; }
			}
			///<summary>Returns the id string for &quot;&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.MosaicRulePageLauncherButton, Mapping)</summary>
			public static string esri_mapping_openRasterMosaicRulePageButton {
				 get { return "esri_mapping_openRasterMosaicRulePageButton"; }
			}
			///<summary>Returns the id string for &quot;&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.ProcessingTemplatesPageLauncherButton, Mapping)</summary>
			public static string esri_mapping_openRasterProcessingTemplatesPageButton {
				 get { return "esri_mapping_openRasterProcessingTemplatesPageButton"; }
			}
			///<summary>Returns the id string for &quot;Add custom...&quot; (esri_mapping:AddCustomRasterProcessingTemplate, Mapping)</summary>
			public static string esri_mapping_addCustomRasterProcessingTemplateButton {
				 get { return "esri_mapping_addCustomRasterProcessingTemplateButton"; }
			}
			///<summary>Returns the id string for &quot;Use Service Cache&quot; (esri_mapping:ToggleISViewMode, Mapping)</summary>
			public static string esri_mapping_toggleImageServiceViewMode {
				 get { return "esri_mapping_toggleImageServiceViewMode"; }
			}
			///<summary>Returns the id string for &quot;Variables&quot; (esri_mapping:FilterByVariables, Mapping)</summary>
			public static string esri_mapping_filterByVariablesButton {
				 get { return "esri_mapping_filterByVariablesButton"; }
			}
			///<summary>Returns the id string for &quot;Range&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.RangeDefinitionPageLauncherButton, Mapping)</summary>
			public static string esri_mapping_openRangeDefinitionPageButton {
				 get { return "esri_mapping_openRangeDefinitionPageButton"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (esri_mapping:OpenFieldsViewAsync, Mapping)</summary>
			public static string esri_mapping_selectedLayerFieldsViewButton {
				 get { return "esri_mapping_selectedLayerFieldsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (esri_mapping:OpenSubtypesViewAsync, Mapping)</summary>
			public static string esri_mapping_selectedLayerSubtypesViewButton {
				 get { return "esri_mapping_selectedLayerSubtypesViewButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_mapping:OpenDomainsViewAsync, Mapping)</summary>
			public static string esri_mapping_selectedLayerDomainsViewButton {
				 get { return "esri_mapping_selectedLayerDomainsViewButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (esri_mapping:OpenAttributeRulesViewAsync, Mapping)</summary>
			public static string esri_mapping_selectedLayerAttributeRulesViewButton {
				 get { return "esri_mapping_selectedLayerAttributeRulesViewButton"; }
			}
			///<summary>Returns the id string for &quot;Field Groups&quot; (esri_mapping:OpenFieldGroupsDialogAsync, Mapping)</summary>
			public static string esri_mapping_selectedLayerFieldsGroupDialogButton {
				 get { return "esri_mapping_selectedLayerFieldsGroupDialogButton"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (esri_mapping:OpenContingentValuesViewAsync, Mapping)</summary>
			public static string esri_mapping_selectedLayerContingentValuesViewButton {
				 get { return "esri_mapping_selectedLayerContingentValuesViewButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_mapping_fieldsPane:OpenDomains, Mapping)</summary>
			public static string esri_fieldview_domainsButton {
				 get { return "esri_fieldview_domainsButton"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (esri_mapping_fieldsPane:OpenSubtypes, Mapping)</summary>
			public static string esri_fieldview_subtypesButton {
				 get { return "esri_fieldview_subtypesButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (esri_mapping_fieldsPane:OpenAttributeRules, Mapping)</summary>
			public static string esri_fieldview_attributeRulesButton {
				 get { return "esri_fieldview_attributeRulesButton"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (esri_mapping_fieldsPane:OpenContingentValues, Mapping)</summary>
			public static string esri_fieldview_contingentvaluesButton {
				 get { return "esri_fieldview_contingentvaluesButton"; }
			}
			///<summary>Returns the id string for &quot;Field Groups&quot; (esri_mapping_fieldsPane:OpenFieldGroups, Mapping)</summary>
			public static string esri_fieldview_fieldGroupsButton {
				 get { return "esri_fieldview_fieldGroupsButton"; }
			}
			///<summary>Returns the id string for &quot;New Field&quot; (esri_mapping_fieldsPane:OnCreateNewField, Mapping)</summary>
			public static string esri_fieldsview_createnewfieldButton {
				 get { return "esri_fieldsview_createnewfieldButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping_fieldsPane:CommitEdits, Mapping)</summary>
			public static string esri_fieldsview_commitButton {
				 get { return "esri_fieldsview_commitButton"; }
			}
			///<summary>Returns the id string for &quot;Undo&quot; (not_implemented, Mapping)</summary>
			public static string esri_subtypeview_editUndo {
				 get { return "esri_subtypeview_editUndo"; }
			}
			///<summary>Returns the id string for &quot;Redo&quot; (not_implemented, Mapping)</summary>
			public static string esri_subtypeview_editRedo {
				 get { return "esri_subtypeview_editRedo"; }
			}
			///<summary>Returns the id string for &quot;Create/Manage&quot; (esri_mapping:ShowSubtypeManagementDialog, Mapping)</summary>
			public static string esri_subtypeview_designButton {
				 get { return "esri_subtypeview_designButton"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (esri_mapping_subtypesPane:OpenFields, Mapping)</summary>
			public static string esri_subtypeview_fieldsButton {
				 get { return "esri_subtypeview_fieldsButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_mapping_subtypesPane:OpenDomains, Mapping)</summary>
			public static string esri_subtypeview_domainsButton {
				 get { return "esri_subtypeview_domainsButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (esri_mapping_subtypesPane:OpenAttributeRules, Mapping)</summary>
			public static string esri_subtypeview_attributeRulesButton {
				 get { return "esri_subtypeview_attributeRulesButton"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (esri_mapping_subtypesPane:OpenContingentValues, Mapping)</summary>
			public static string esri_subtypeview_contingentValuesButton {
				 get { return "esri_subtypeview_contingentValuesButton"; }
			}
			///<summary>Returns the id string for &quot;Field Groups&quot; (esri_mapping_subtypesPane:OpenFieldGroups, Mapping)</summary>
			public static string esri_subtypeview_fieldGroupsButton {
				 get { return "esri_subtypeview_fieldGroupsButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping_subtypesPane:CommitEdits, Mapping)</summary>
			public static string esri_subtypesview_commitButton {
				 get { return "esri_subtypesview_commitButton"; }
			}
			///<summary>Returns the id string for &quot;New Domain&quot; (esri_mapping_domainsPane:OnCreateNewDomain, Mapping)</summary>
			public static string esri_domainview_createnewdomainButton {
				 get { return "esri_domainview_createnewdomainButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping_domainsPane:CommitEdits, Mapping)</summary>
			public static string esri_domainview_commitButton {
				 get { return "esri_domainview_commitButton"; }
			}
			///<summary>Returns the id string for &quot;Domain Usage&quot; (esri_mapping_domainsPane:FindDomainsInUse, Mapping)</summary>
			public static string esri_domainview_currentdomainsinuseButton {
				 get { return "esri_domainview_currentdomainsinuseButton"; }
			}
			///<summary>Returns the id string for &quot;New Version&quot; (esri_mapping_versionsPane:OnCreateNewVersion, Mapping)</summary>
			public static string esri_versionview_newVersionButton {
				 get { return "esri_versionview_newVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (esri_mapping_versionsPane:OnDeleteVersion, Mapping)</summary>
			public static string esri_versionview_deleteVersionButton {
				 get { return "esri_versionview_deleteVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Refresh Versions&quot; (esri_mapping_versionsPane:OnRefreshVersion, Mapping)</summary>
			public static string esri_versionview_refreshVersionButton {
				 get { return "esri_versionview_refreshVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Change to Selected Version&quot; (esri_mapping_versionsPane:OnChangeToSelectedVersion, Mapping)</summary>
			public static string esri_versionview_ChangeToSelectedVersionButton {
				 get { return "esri_versionview_ChangeToSelectedVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Reconcile/Post&quot; (esri_mapping_versionsPane:OnReconcileVersion, Mapping)</summary>
			public static string esri_versionview_reconcileVersionButton {
				 get { return "esri_versionview_reconcileVersionButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping_versionsPane:CommitEdits, Mapping)</summary>
			public static string esri_versionview_commitButton {
				 get { return "esri_versionview_commitButton"; }
			}
			///<summary>Returns the id string for &quot;Calculation Rule&quot; (esri_mapping_attributeRulesPane:AddCalculationRule, Mapping)</summary>
			public static string esri_attributeRulesView_AddCalculationRuleButton {
				 get { return "esri_attributeRulesView_AddCalculationRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Constraint Rule&quot; (esri_mapping_attributeRulesPane:AddConstraintRule, Mapping)</summary>
			public static string esri_attributeRulesView_AddConstraintRuleButton {
				 get { return "esri_attributeRulesView_AddConstraintRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Validation Rule&quot; (esri_mapping_attributeRulesPane:AddValidationRule, Mapping)</summary>
			public static string esri_attributeRulesView_AddValidationRuleButton {
				 get { return "esri_attributeRulesView_AddValidationRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (esri_mapping_attributeRulesPane:OpenFields, Mapping)</summary>
			public static string esri_attributeRulesView_fieldsButton {
				 get { return "esri_attributeRulesView_fieldsButton"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (esri_mapping_attributeRulesPane:OpenSubtypes, Mapping)</summary>
			public static string esri_attributeRulesView_subtypesButton {
				 get { return "esri_attributeRulesView_subtypesButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_mapping_attributeRulesPane:OpenDomains, Mapping)</summary>
			public static string esri_attributeRulesView_domainsButton {
				 get { return "esri_attributeRulesView_domainsButton"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (esri_mapping_attributeRulesPane:OpenContingentValues, Mapping)</summary>
			public static string esri_attributeRulesView_contingentValuesButton {
				 get { return "esri_attributeRulesView_contingentValuesButton"; }
			}
			///<summary>Returns the id string for &quot;Field Groups&quot; (esri_mapping_attributeRulesPane:OpenFieldGroups, Mapping)</summary>
			public static string esri_attributeRulesView_fieldGroupsButton {
				 get { return "esri_attributeRulesView_fieldGroupsButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Rule&quot; (esri_mapping_attributeRulesPane:OnDeleteRules, Mapping)</summary>
			public static string esri_attributeRulesView_deleteRuleButton {
				 get { return "esri_attributeRulesView_deleteRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Import Rules&quot; (esri_mapping_attributeRulesPane:ImportRules, Mapping)</summary>
			public static string esri_attributeRulesView_importRuleButton {
				 get { return "esri_attributeRulesView_importRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Export Rules&quot; (esri_mapping_attributeRulesPane:ExportRules, Mapping)</summary>
			public static string esri_attributeRulesView_exportRuleButton {
				 get { return "esri_attributeRulesView_exportRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Enable Rule&quot; (esri_mapping_attributeRulesPane:EnableRule, Mapping)</summary>
			public static string esri_attributeRulesView_enableRuleButton {
				 get { return "esri_attributeRulesView_enableRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Disable Rule&quot; (esri_mapping_attributeRulesPane:DisableRule, Mapping)</summary>
			public static string esri_attributeRulesView_disableRuleButton {
				 get { return "esri_attributeRulesView_disableRuleButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping_attributeRulesPane:CommitEdits, Mapping)</summary>
			public static string esri_attributeRulesView_saveRulesButton {
				 get { return "esri_attributeRulesView_saveRulesButton"; }
			}
			///<summary>Returns the id string for &quot;Add Error Layers&quot; (esri_mapping:AddGeodatabaseErrorTablesAsync, Mapping)</summary>
			public static string esri_mapping_addGDBErrorTablesButton {
				 get { return "esri_mapping_addGDBErrorTablesButton"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (esri_mapping_contingentValuesPane:CreateNewContingentValue, Mapping)</summary>
			public static string esri_contingentValuesView_newContingentValueButton {
				 get { return "esri_contingentValuesView_newContingentValueButton"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_mapping_contingentValuesPane:OnImportContingentValues, Mapping)</summary>
			public static string esri_contingentValuesView_importContingentValueButton {
				 get { return "esri_contingentValuesView_importContingentValueButton"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (esri_mapping_contingentValuesPane:OnExportContingentValues, Mapping)</summary>
			public static string esri_contingentValuesView_exportContingentValueButton {
				 get { return "esri_contingentValuesView_exportContingentValueButton"; }
			}
			///<summary>Returns the id string for &quot;Toggle Value IDs&quot; (esri_mapping_contingentValuesPane:ToggleShowIDs, Mapping)</summary>
			public static string esri_contingentValuesView_toggleIDs {
				 get { return "esri_contingentValuesView_toggleIDs"; }
			}
			///<summary>Returns the id string for &quot;Retire Value&quot; (esri_mapping_contingentValuesPane:RetireContingentValues, Mapping)</summary>
			public static string esri_contingentValuesView_retireContingentValue {
				 get { return "esri_contingentValuesView_retireContingentValue"; }
			}
			///<summary>Returns the id string for &quot;Toggle Code/Description&quot; (esri_mapping_contingentValuesPane:ToggleShowCodeDescription, Mapping)</summary>
			public static string esri_contingentValuesView_toggleCodeDescription {
				 get { return "esri_contingentValuesView_toggleCodeDescription"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping_contingentValuesPane:CommitEdits, Mapping)</summary>
			public static string esri_contingentValuesView_commitButton {
				 get { return "esri_contingentValuesView_commitButton"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (esri_mapping_contingentValuesPane:OpenFields, Mapping)</summary>
			public static string esri_contingentvaluesview_fieldsButton {
				 get { return "esri_contingentvaluesview_fieldsButton"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (esri_mapping_contingentValuesPane:OpenSubtypes, Mapping)</summary>
			public static string esri_contingentvaluesview_subtypesButton {
				 get { return "esri_contingentvaluesview_subtypesButton"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (esri_mapping_contingentValuesPane:OpenDomains, Mapping)</summary>
			public static string esri_contingentvaluesview_domainsButton {
				 get { return "esri_contingentvaluesview_domainsButton"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (esri_mapping_contingentValuesPane:OpenAttributeRules, Mapping)</summary>
			public static string esri_contingentvaluesview_attributeRulesButton {
				 get { return "esri_contingentvaluesview_attributeRulesButton"; }
			}
			///<summary>Returns the id string for &quot;Field Groups&quot; (esri_mapping_contingentValuesPane:OpenFieldGroups, Mapping)</summary>
			public static string esri_contingentvaluesview_fieldGroupsButton {
				 get { return "esri_contingentvaluesview_fieldGroupsButton"; }
			}
			///<summary>Returns the id string for &quot;Add Archive&quot; (esri_mapping:AddArchiveTableAsync, Mapping)</summary>
			public static string esri_mapping_addArchiveTableButton {
				 get { return "esri_mapping_addArchiveTableButton"; }
			}
			///<summary>Returns the id string for &quot;Configure Pop-ups&quot; (esri_mapping:ShowPopupsDockPane, Mapping)</summary>
			public static string esri_mapping_designPopupsButton {
				 get { return "esri_mapping_designPopupsButton"; }
			}
			///<summary>Returns the id string for &quot;Enable Pop-ups&quot; (esri_mapping:OnEnablePopups, Mapping)</summary>
			public static string esri_mapping_enablePopupsButton {
				 get { return "esri_mapping_enablePopupsButton"; }
			}
			///<summary>Returns the id string for &quot;Disable Pop-ups&quot; (esri_mapping:OnDisablePopups, Mapping)</summary>
			public static string esri_mapping_disablePopupsButton {
				 get { return "esri_mapping_disablePopupsButton"; }
			}
			///<summary>Returns the id string for &quot;Set Pop-up Source&quot; (esri_mapping:OnSetPopupSource, Mapping)</summary>
			public static string esri_mapping_setPopupSourceButton {
				 get { return "esri_mapping_setPopupSourceButton"; }
			}
			///<summary>Returns the id string for &quot;Remove Pop-up Source&quot; (esri_mapping:OnRemovePopupSource, Mapping)</summary>
			public static string esri_mapping_removePopupSourceButton {
				 get { return "esri_mapping_removePopupSourceButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom To&quot; (esri_mapping:ZoomToCandidateLocation, Mapping)</summary>
			public static string esri_mapping_zoomToCandidateLocation {
				 get { return "esri_mapping_zoomToCandidateLocation"; }
			}
			///<summary>Returns the id string for &quot;Pan To&quot; (esri_mapping:PanToCandidateLocation, Mapping)</summary>
			public static string esri_mapping_panToCandidateLocation {
				 get { return "esri_mapping_panToCandidateLocation"; }
			}
			///<summary>Returns the id string for &quot;Add To Selection&quot; (esri_mapping:AddCandidateToSelection, Mapping)</summary>
			public static string esri_mapping_addCandidateToSelection {
				 get { return "esri_mapping_addCandidateToSelection"; }
			}
			///<summary>Returns the id string for &quot;Show Details&quot; (esri_mapping:ShowCandidateDetails, Mapping)</summary>
			public static string esri_mapping_showCandidateDetails {
				 get { return "esri_mapping_showCandidateDetails"; }
			}
			///<summary>Returns the id string for &quot;Match exact&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchModeExactButton, Mapping)</summary>
			public static string esri_mapping_locateSearchModeExact {
				 get { return "esri_mapping_locateSearchModeExact"; }
			}
			///<summary>Returns the id string for &quot;Match any part&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchModeContainsButton, Mapping)</summary>
			public static string esri_mapping_locateSearchModeContains {
				 get { return "esri_mapping_locateSearchModeContains"; }
			}
			///<summary>Returns the id string for &quot;Enhanced search&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchModeEnhancedButton, Mapping)</summary>
			public static string esri_mapping_locateSearchModeEnhanced {
				 get { return "esri_mapping_locateSearchModeEnhanced"; }
			}
			///<summary>Returns the id string for &quot;Search all&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchFilterAllButton, Mapping)</summary>
			public static string esri_mapping_locateSearchFilterAll {
				 get { return "esri_mapping_locateSearchFilterAll"; }
			}
			///<summary>Returns the id string for &quot;Search current extent&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchFilterCurrentExtentButton, Mapping)</summary>
			public static string esri_mapping_locateSearchFilterExtent {
				 get { return "esri_mapping_locateSearchFilterExtent"; }
			}
			///<summary>Returns the id string for &quot;Search visible&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchFilterVisibleButton, Mapping)</summary>
			public static string esri_mapping_locateSearchFilterVisible {
				 get { return "esri_mapping_locateSearchFilterVisible"; }
			}
			///<summary>Returns the id string for &quot;Search visible in current extent&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.FeatureSearchFilterVisibleCurrentExtentButton, Mapping)</summary>
			public static string esri_mapping_locateSearchFilterVisibleExtent {
				 get { return "esri_mapping_locateSearchFilterVisibleExtent"; }
			}
			///<summary>Returns the id string for &quot;All&quot; (esri_mapping:SelectAllTableRecords, Mapping)</summary>
			public static string esri_mapping_selectAllTableRecordsButton {
				 get { return "esri_mapping_selectAllTableRecordsButton"; }
			}
			///<summary>Returns the id string for &quot;Switch&quot; (esri_mapping:SwitchTableRecordSelection, Mapping)</summary>
			public static string esri_mapping_switchTableRecordSelection {
				 get { return "esri_mapping_switchTableRecordSelection"; }
			}
			///<summary>Returns the id string for &quot;Clear&quot; (esri_mapping:ClearTableRecordSelection, Mapping)</summary>
			public static string esri_mapping_clearTableRecordSelection {
				 get { return "esri_mapping_clearTableRecordSelection"; }
			}
			///<summary>Returns the id string for &quot;Hide Selection&quot; (esri_mapping:HideSelectedFeaturesAsync, Mapping)</summary>
			public static string esri_mapping_hideSelectedFeaturesButton {
				 get { return "esri_mapping_hideSelectedFeaturesButton"; }
			}
			///<summary>Returns the id string for &quot;Show Hidden&quot; (esri_mapping:ShowHiddenFeaturesAsync, Mapping)</summary>
			public static string esri_mapping_showHiddenFeaturesButton {
				 get { return "esri_mapping_showHiddenFeaturesButton"; }
			}
			///<summary>Returns the id string for &quot;Cache Features&quot; (esri_mapping:LocalFeatureCacheFill, Mapping)</summary>
			public static string esri_mapping_localFeatureCacheFillCache {
				 get { return "esri_mapping_localFeatureCacheFillCache"; }
			}
			///<summary>Returns the id string for &quot;Clear Feature Cache&quot; (esri_mapping:LocalFeatureCacheClear, Mapping)</summary>
			public static string esri_mapping_localFeatureCacheClearCache {
				 get { return "esri_mapping_localFeatureCacheClearCache"; }
			}
			///<summary>Returns the id string for &quot;Configure Infographics&quot; (esri_mapping:OnInfographicSettings, Mapping)</summary>
			public static string esri_mapping_infographicSettingsButton {
				 get { return "esri_mapping_infographicSettingsButton"; }
			}
			///<summary>Returns the id string for &quot;Go to camera position&quot; (esri_mapping:LookAtKMLFeature, Mapping)</summary>
			public static string esri_mapping_moveToKMLNode {
				 get { return "esri_mapping_moveToKMLNode"; }
			}
			///<summary>Returns the id string for &quot;Zoom to node&quot; (esri_mapping:ZoomToSelectedKMLFeatures, Mapping)</summary>
			public static string esri_mapping_zoomToSelectedKMLFeatures {
				 get { return "esri_mapping_zoomToSelectedKMLFeatures"; }
			}
			///<summary>Returns the id string for &quot;Pan to node&quot; (esri_mapping:PanToSelectedKMLFeatures, Mapping)</summary>
			public static string esri_mapping_panToSelectedKMLFeatures {
				 get { return "esri_mapping_panToSelectedKMLFeatures"; }
			}
			///<summary>Returns the id string for &quot;Flash placemark&quot; (esri_mapping:FlashSelectedKMLPlacemarks, Mapping)</summary>
			public static string esri_mapping_flashSelectedKMLPlacemarks {
				 get { return "esri_mapping_flashSelectedKMLPlacemarks"; }
			}
			///<summary>Returns the id string for &quot;Show Pop-up&quot; (esri_mapping:ShowKMLPopup, Mapping)</summary>
			public static string esri_mapping_showKMLPopup {
				 get { return "esri_mapping_showKMLPopup"; }
			}
			///<summary>Returns the id string for &quot;Label&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassLayerEnableButton, Mapping)</summary>
			public static string esri_mapping_labelKMLLayerEnableButton {
				 get { return "esri_mapping_labelKMLLayerEnableButton"; }
			}
			///<summary>Returns the id string for &quot;Refresh&quot; (esri_mapping:RefreshKMLLayer, Mapping)</summary>
			public static string esri_mapping_refreshKMLLayerButton {
				 get { return "esri_mapping_refreshKMLLayerButton"; }
			}
			///<summary>Returns the id string for &quot;Geocode Table&quot; (esri_mapping:ShowGeocodeTable, Mapping)</summary>
			public static string esri_mapping_toolGeocodeTableButton {
				 get { return "esri_mapping_toolGeocodeTableButton"; }
			}
			///<summary>Returns the id string for &quot;Use Wizard&quot; (esri_mapping:ShowGeocodeTable, Mapping)</summary>
			public static string esri_mapping_wizardGeocodeTableButton {
				 get { return "esri_mapping_wizardGeocodeTableButton"; }
			}
			///<summary>Returns the id string for &quot;Start Stream&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataStartStreamButton, Mapping)</summary>
			public static string esri_mapping_streamingDataStartStreamButton {
				 get { return "esri_mapping_streamingDataStartStreamButton"; }
			}
			///<summary>Returns the id string for &quot;Stop Stream&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataStopStreamButton, Mapping)</summary>
			public static string esri_mapping_streamingDataStopStreamButton {
				 get { return "esri_mapping_streamingDataStopStreamButton"; }
			}
			///<summary>Returns the id string for &quot;Discard Observations&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataDiscardObservationsButton, Mapping)</summary>
			public static string esri_mapping_streamingDataDiscardObservationsButton {
				 get { return "esri_mapping_streamingDataDiscardObservationsButton"; }
			}
			///<summary>Returns the id string for &quot;Sync&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SynchronizeReplicaButton, Mapping)</summary>
			public static string RGDBProjectItemSyncButton {
				 get { return "RGDBProjectItemSyncButton"; }
			}
			///<summary>Returns the id string for &quot;Georeference&quot; (esri_mapping:Commands.StartGeorefenceSession, Mapping)</summary>
			public static string esri_mapping_georeferenceing_StartSessionButton {
				 get { return "esri_mapping_georeferenceing_StartSessionButton"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (esri_mapping:Commands.ImportControlPoints, Mapping)</summary>
			public static string esri_mapping_georeference_LoadControlPointsButton {
				 get { return "esri_mapping_georeference_LoadControlPointsButton"; }
			}
			///<summary>Returns the id string for &quot;Move To Display&quot; (esri_mapping:Commands.MoveToDisplay, Mapping)</summary>
			public static string esri_mapping_georeference_MoveToDisplayButton {
				 get { return "esri_mapping_georeference_MoveToDisplayButton"; }
			}
			///<summary>Returns the id string for &quot;Elevate To Ground&quot; (esri_mapping:Commands.ElevateToGround, Mapping)</summary>
			public static string esri_mapping_georeference_ElevateToGroundButton {
				 get { return "esri_mapping_georeference_ElevateToGroundButton"; }
			}
			///<summary>Returns the id string for &quot;Reset&quot; (esri_mapping:Commands.Reset, Mapping)</summary>
			public static string esri_mapping_georeference_ResetButton {
				 get { return "esri_mapping_georeference_ResetButton"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (esri_mapping:Commands.Save, Mapping)</summary>
			public static string esri_mapping_georeference_SaveButton {
				 get { return "esri_mapping_georeference_SaveButton"; }
			}
			///<summary>Returns the id string for &quot;Save To Workspace&quot; (esri_mapping:Commands.SaveToWorkspace, Mapping)</summary>
			public static string esri_mapping_georeference_SaveToWorkspaceButton {
				 get { return "esri_mapping_georeference_SaveToWorkspaceButton"; }
			}
			///<summary>Returns the id string for &quot;Save As New&quot; (esri_mapping:Commands.SaveAs, Mapping)</summary>
			public static string esri_mapping_georeference_SaveAsButton {
				 get { return "esri_mapping_georeference_SaveAsButton"; }
			}
			///<summary>Returns the id string for &quot;Close Georeference&quot; (esri_mapping:Commands.CloseSession, Mapping)</summary>
			public static string esri_mapping_georeference_CloseSessionButton {
				 get { return "esri_mapping_georeference_CloseSessionButton"; }
			}
			///<summary>Returns the id string for &quot;Binning&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.Binning.EnableBinningButton, Mapping)</summary>
			public static string esri_mapping_enableBinningButton {
				 get { return "esri_mapping_enableBinningButton"; }
			}
			///<summary>Returns the id string for &quot;Summary Statistics&quot; (esri_mapping:ShowBinningProperties, Mapping)</summary>
			public static string esri_mapping_binningStatsButton {
				 get { return "esri_mapping_binningStatsButton"; }
			}
			///<summary>Returns the id string for &quot;Share and Download Options&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.LocationOptionsButton, Mapping)</summary>
			public static string esri_mapping_openLocationOptionsButton {
				 get { return "esri_mapping_openLocationOptionsButton"; }
			}
		}
		public static partial class Buttonpalette {
			///<summary>Returns the id string for &quot;Link Views&quot; (Buttonpalette, Mapping)</summary>
			public static string esri_mapping_syncViewExtentPalette {
				 get { return "esri_mapping_syncViewExtentPalette"; }
			}
			///<summary>Returns the id string for &quot;Path&quot; (Buttonpalette, Mapping)</summary>
			public static string esri_mapping_animationFeedbackPalette {
				 get { return "esri_mapping_animationFeedbackPalette"; }
			}
			///<summary>Returns the id string for &quot;Convert&quot; (Buttonpalette, Mapping)</summary>
			public static string esri_mapping_convertMapPalette {
				 get { return "esri_mapping_convertMapPalette"; }
			}
		}
		public static partial class Checkbox {
			///<summary>Returns the id string for &quot;Label Features In This Class&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassEnableCheckBox, Mapping)</summary>
			public static string esri_mapping_labelClassEnableCheckBox {
				 get { return "esri_mapping_labelClassEnableCheckBox"; }
			}
			///<summary>Returns the id string for &quot;Single Value&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.RangeSingleValueCheckBox, Mapping)</summary>
			public static string esri_mapping_rangeSingleValueCheckBox {
				 get { return "esri_mapping_rangeSingleValueCheckBox"; }
			}
			///<summary>Returns the id string for &quot;Show Previous Observations&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataShowPreviousObservationsCheckBox, Mapping)</summary>
			public static string esri_mapping_streamLayerShowPreviousObservationsCheckBox {
				 get { return "esri_mapping_streamLayerShowPreviousObservationsCheckBox"; }
			}
			///<summary>Returns the id string for &quot;Show Track Lines&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataShowTrackLinesCheckBox, Mapping)</summary>
			public static string esri_mapping_streamLayerShowTrackLinesCheckBox {
				 get { return "esri_mapping_streamLayerShowTrackLinesCheckBox"; }
			}
		}
		public static partial class Combobox {
			///<summary>Returns the id string for &quot;Show: &quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.StyleClassComboBox, Mapping)</summary>
			public static string esri_mapping_StyleClassCombobox {
				 get { return "esri_mapping_StyleClassCombobox"; }
			}
			///<summary>Returns the id string for &quot;Expression&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassExpressionComboBox, Mapping)</summary>
			public static string esri_mapping_labelClassExpressionComboBox {
				 get { return "esri_mapping_labelClassExpressionComboBox"; }
			}
			///<summary>Returns the id string for &quot;Font Size&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolFontSizeComboBox, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolFontSizeComboBox {
				 get { return "esri_mapping_labelTextSymbolFontSizeComboBox"; }
			}
			///<summary>Returns the id string for &quot;Font Style&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolFontStyleComboBox, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolFontStyleComboBox {
				 get { return "esri_mapping_labelTextSymbolFontStyleComboBox"; }
			}
			///<summary>Returns the id string for &quot;Active Range&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.RangeNamesComboBox, Mapping)</summary>
			public static string esri_mapping_rangeNamesComboBox {
				 get { return "esri_mapping_rangeNamesComboBox"; }
			}
			///<summary>Returns the id string for &quot;Alias Source&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.RangeAliasLayerSourceComboBox, Mapping)</summary>
			public static string esri_mapping_rangeAliasLayerSourceComboBox {
				 get { return "esri_mapping_rangeAliasLayerSourceComboBox"; }
			}
			///<summary>Returns the id string for &quot;Layer Definition Query&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.DefinitionQueryComboBox, Mapping)</summary>
			public static string esri_mapping_layerDefQueryComboBox {
				 get { return "esri_mapping_layerDefQueryComboBox"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.VariableComboBox, Mapping)</summary>
			public static string esri_mapping_voxelLayerVariableComboBox {
				 get { return "esri_mapping_voxelLayerVariableComboBox"; }
			}
			///<summary>Returns the id string for &quot;Renderer:&quot; (ViewModels.RasterLayer.Ribbon.RasterRendererComboBoxViewModel, Mapping)</summary>
			public static string esri_mapping_rasterLayerRenderer {
				 get { return "esri_mapping_rasterLayerRenderer"; }
			}
			///<summary>Returns the id string for &quot;Owner:&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.Versioning.VersionOwnerComboBox, Mapping)</summary>
			public static string esri_versionview_versionOwnerComboBox {
				 get { return "esri_versionview_versionOwnerComboBox"; }
			}
			///<summary>Returns the id string for &quot;Mode &quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.NearPlaneClippingMode, Mapping)</summary>
			public static string esri_mapping_nearPlaneClippingMode {
				 get { return "esri_mapping_nearPlaneClippingMode"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_mapping_OrthoMappingView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.OrthoMappingView, Mapping)</summary>
			public static string esri_mapping_OrthoMappingView {
				 get { return "esri_mapping_OrthoMappingView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_DrawingOrderView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.DrawingOrderView, Mapping)</summary>
			public static string esri_mapping_DrawingOrderView {
				 get { return "esri_mapping_DrawingOrderView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_DataSourceView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.DataSourceView, Mapping)</summary>
			public static string esri_mapping_DataSourceView {
				 get { return "esri_mapping_DataSourceView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_SelectionView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.SelectionView, Mapping)</summary>
			public static string esri_mapping_SelectionView {
				 get { return "esri_mapping_SelectionView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_SnappingView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.SnappingView, Mapping)</summary>
			public static string esri_mapping_SnappingView {
				 get { return "esri_mapping_SnappingView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_LabelingView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.LabelingView, Mapping)</summary>
			public static string esri_mapping_LabelingView {
				 get { return "esri_mapping_LabelingView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ImageSpaceItemsView&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.ImageSpaceItemsView, Mapping)</summary>
			public static string esri_mapping_ImageSpaceItemsView {
				 get { return "esri_mapping_ImageSpaceItemsView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_toc_legendLoader&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.LegendLoader, Mapping)</summary>
			public static string esri_mapping_toc_legendLoader {
				 get { return "esri_mapping_toc_legendLoader"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_toc_kmlNodeLoader&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.KMLNodeLoader, Mapping)</summary>
			public static string esri_mapping_toc_kmlNodeLoader {
				 get { return "esri_mapping_toc_kmlNodeLoader"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_toc_wmsStyleLoader&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.WMSStyleLoader, Mapping)</summary>
			public static string esri_mapping_toc_wmsStyleLoader {
				 get { return "esri_mapping_toc_wmsStyleLoader"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_toc_elevationSourceLoader&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.ElevationSourceLoader, Mapping)</summary>
			public static string esri_mapping_toc_elevationSourceLoader {
				 get { return "esri_mapping_toc_elevationSourceLoader"; }
			}
		}
		public static partial class Customcontrol {
			///<summary>Returns the id string for &quot;Label Class&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassNameComboBox, Mapping)</summary>
			public static string esri_mapping_labelClassNameComboBox {
				 get { return "esri_mapping_labelClassNameComboBox"; }
			}
			///<summary>Returns the id string for &quot;Out Beyond&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassOutBeyondComboBox, Mapping)</summary>
			public static string esri_mapping_labelClassOutBeyondComboBox {
				 get { return "esri_mapping_labelClassOutBeyondComboBox"; }
			}
			///<summary>Returns the id string for &quot;In Beyond&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.LabelClassInBeyondComboBox, Mapping)</summary>
			public static string esri_mapping_labelClassInBeyondComboBox {
				 get { return "esri_mapping_labelClassInBeyondComboBox"; }
			}
			///<summary>Returns the id string for &quot;Font&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.Ribbon.TextSymbolFontControl, Mapping)</summary>
			public static string esri_mapping_labelClassFontControl {
				 get { return "esri_mapping_labelClassFontControl"; }
			}
			///<summary>Returns the id string for &quot;Set color for current label class&quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.TextSymbolColorViewModel, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolColorPicker {
				 get { return "esri_mapping_labelTextSymbolColorPicker"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_snappingOpenTrayButton&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.SnappingSplitViewModel, Mapping)</summary>
			public static string esri_mapping_snappingOpenTrayButton {
				 get { return "esri_mapping_snappingOpenTrayButton"; }
			}
			///<summary>Returns the id string for &quot;Current Range&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.CurrentRangeViewModel, Mapping)</summary>
			public static string esri_mapping_currentRangeControl {
				 get { return "esri_mapping_currentRangeControl"; }
			}
			///<summary>Returns the id string for &quot;Range Step&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.RangeStepViewModel, Mapping)</summary>
			public static string esri_mapping_rangeStepControl {
				 get { return "esri_mapping_rangeStepControl"; }
			}
			///<summary>Returns the id string for &quot;Range Playback&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.RangePlaybackSpeedViewModel, Mapping)</summary>
			public static string esri_mapping_rangePlaybackSpeedControl {
				 get { return "esri_mapping_rangePlaybackSpeedControl"; }
			}
			///<summary>Returns the id string for &quot;Full Range&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.RangeSlider.Ribbon.FullRangeViewModel, Mapping)</summary>
			public static string esri_mapping_fullRangeControl {
				 get { return "esri_mapping_fullRangeControl"; }
			}
			///<summary>Returns the id string for &quot;Current Time&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.TimeSlider.Ribbon.TimeSliderCustomControlViewModel, Mapping)</summary>
			public static string esri_mapping_currentTimeControl {
				 get { return "esri_mapping_currentTimeControl"; }
			}
			///<summary>Returns the id string for &quot;Time Step&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.TimeSlider.Ribbon.TimeSliderCustomControlViewModel, Mapping)</summary>
			public static string esri_mapping_TimeStepControl {
				 get { return "esri_mapping_TimeStepControl"; }
			}
			///<summary>Returns the id string for &quot;Time Playback&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.TimeSlider.Ribbon.TimeSliderCustomControlViewModel, Mapping)</summary>
			public static string esri_mapping_TimePlaybackSpeedControl {
				 get { return "esri_mapping_TimePlaybackSpeedControl"; }
			}
			///<summary>Returns the id string for &quot;Full Time&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.TimeSlider.Ribbon.TimeSliderCustomControlViewModel, Mapping)</summary>
			public static string esri_mapping_fullTimeControl {
				 get { return "esri_mapping_fullTimeControl"; }
			}
			///<summary>Returns the id string for &quot;Time Zone&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.TimeSlider.Ribbon.TimeSliderCustomControlViewModel, Mapping)</summary>
			public static string esri_mapping_timeZoneControl {
				 get { return "esri_mapping_timeZoneControl"; }
			}
			///<summary>Returns the id string for &quot;Time Snapping&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.TimeSlider.Ribbon.TimeSliderCustomControlViewModel, Mapping)</summary>
			public static string esri_mapping_timeSnappingControl {
				 get { return "esri_mapping_timeSnappingControl"; }
			}
			///<summary>Returns the id string for &quot;Point Display Controls&quot; (ArcGIS.Desktop.Internal.Mapping.PointCloud.PointCloudRibbonThinningViewModel, Mapping)</summary>
			public static string esri_mapping_PointCloudRibbonThinning_CustomControl {
				 get { return "esri_mapping_PointCloudRibbonThinning_CustomControl"; }
			}
			///<summary>Returns the id string for &quot;Append Options&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationRibbonViewModel, Mapping)</summary>
			public static string esri_mapping_animationAppendControl {
				 get { return "esri_mapping_animationAppendControl"; }
			}
			///<summary>Returns the id string for &quot;Keyframe Edit&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationRibbonViewModel, Mapping)</summary>
			public static string esri_mapping_animationKeyframeControl {
				 get { return "esri_mapping_animationKeyframeControl"; }
			}
			///<summary>Returns the id string for &quot;Animation Playback&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationRibbonViewModel, Mapping)</summary>
			public static string esri_mapping_animationPlaybackControl {
				 get { return "esri_mapping_animationPlaybackControl"; }
			}
			///<summary>Returns the id string for &quot;Overlay Options&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationRibbonViewModel, Mapping)</summary>
			public static string esri_mapping_animationOverlayControl {
				 get { return "esri_mapping_animationOverlayControl"; }
			}
			///<summary>Returns the id string for &quot;Manage Animations&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationRibbonViewModel, Mapping)</summary>
			public static string esri_mapping_animationListControl {
				 get { return "esri_mapping_animationListControl"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_profileViewControl&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.ProfileRibbonViewModel, Mapping)</summary>
			public static string esri_mapping_profileViewControl {
				 get { return "esri_mapping_profileViewControl"; }
			}
			///<summary>Returns the id string for &quot;Out Beyond&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.LayerOutBeyondComboBox, Mapping)</summary>
			public static string esri_mapping_layerOutBeyondComboBox {
				 get { return "esri_mapping_layerOutBeyondComboBox"; }
			}
			///<summary>Returns the id string for &quot;In Beyond&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.LayerInBeyondComboBox, Mapping)</summary>
			public static string esri_mapping_layerInBeyondComboBox {
				 get { return "esri_mapping_layerInBeyondComboBox"; }
			}
			///<summary>Returns the id string for &quot;Download Map&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.DownloadMap, Mapping)</summary>
			public static string esri_mapping_downloadMap {
				 get { return "esri_mapping_downloadMap"; }
			}
			///<summary>Returns the id string for &quot;Transparency&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.TransparencySliderViewModel, Mapping)</summary>
			public static string esri_mapping_layerTransparency {
				 get { return "esri_mapping_layerTransparency"; }
			}
			///<summary>Returns the id string for &quot;Masking&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.MaskingLayerSelector, Mapping)</summary>
			public static string esri_mapping_layerMasking {
				 get { return "esri_mapping_layerMasking"; }
			}
			///<summary>Returns the id string for &quot;Layer Extrusion&quot; (ArcGIS.Desktop.Internal.Mapping.CommonControls.ExtrusionFieldAndUnitViewModel, Mapping)</summary>
			public static string esri_mapping_layerExtrusionFieldAndUnit {
				 get { return "esri_mapping_layerExtrusionFieldAndUnit"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (ArcGIS.Desktop.Internal.Mapping.ElevationSurfaces.Ribbon.ElevationSurfaceDrawingViewModel, Mapping)</summary>
			public static string esri_mapping_elevationSurfaceDrawing {
				 get { return "esri_mapping_elevationSurfaceDrawing"; }
			}
			///<summary>Returns the id string for &quot;Surface&quot; (ArcGIS.Desktop.Internal.Mapping.ElevationSurfaces.Ribbon.ElevationSurfaceSurfaceViewModel, Mapping)</summary>
			public static string esri_mapping_elevationSurfaceRibbon {
				 get { return "esri_mapping_elevationSurfaceRibbon"; }
			}
			///<summary>Returns the id string for &quot;Elevation&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.ElevationViewModel, Mapping)</summary>
			public static string esri_mapping_voxelLayerElevation {
				 get { return "esri_mapping_voxelLayerElevation"; }
			}
			///<summary>Returns the id string for &quot;Isosurface&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.IsosurfaceViewModel, Mapping)</summary>
			public static string esri_mapping_voxelLayerIsosurface {
				 get { return "esri_mapping_voxelLayerIsosurface"; }
			}
			///<summary>Returns the id string for &quot;Brightness&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.BrightnessSliderViewModel, Mapping)</summary>
			public static string esri_mapping_layerBrightness {
				 get { return "esri_mapping_layerBrightness"; }
			}
			///<summary>Returns the id string for &quot;Contrast&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.ContrastSliderViewModel, Mapping)</summary>
			public static string esri_mapping_layerContrast {
				 get { return "esri_mapping_layerContrast"; }
			}
			///<summary>Returns the id string for &quot;Gamma&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.GammaSliderViewModel, Mapping)</summary>
			public static string esri_mapping_layerGamma {
				 get { return "esri_mapping_layerGamma"; }
			}
			///<summary>Returns the id string for &quot;Compression&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.RasterCompressionViewModel, Mapping)</summary>
			public static string esri_mapping_rasterLayerCompression {
				 get { return "esri_mapping_rasterLayerCompression"; }
			}
			///<summary>Returns the id string for &quot;DRA&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.DRASwitchViewModel, Mapping)</summary>
			public static string esri_mapping_rasterStretchDRA {
				 get { return "esri_mapping_rasterStretchDRA"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamingDataCustomControl&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.StreamingDataViewModel, Mapping)</summary>
			public static string esri_mapping_streamingDataCustomControl {
				 get { return "esri_mapping_streamingDataCustomControl"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_binningThresholdControl&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.Binning.ThresholdViewModel, Mapping)</summary>
			public static string esri_mapping_binningThresholdControl {
				 get { return "esri_mapping_binningThresholdControl"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_binningSizeTweaker&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.Binning.SizeTweakerViewModel, Mapping)</summary>
			public static string esri_mapping_binningSizeTweaker {
				 get { return "esri_mapping_binningSizeTweaker"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_binningAppearanceCustomControl&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.Binning.BinningAppearanceRibbonCustomControl, Mapping)</summary>
			public static string esri_mapping_binningAppearanceCustomControl {
				 get { return "esri_mapping_binningAppearanceCustomControl"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_binningLockLevelCustomControl&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.Binning.LockLevelCustomControl, Mapping)</summary>
			public static string esri_mapping_binningLockLevelCustomControl {
				 get { return "esri_mapping_binningLockLevelCustomControl"; }
			}
			///<summary>Returns the id string for &quot;Eye-Dome lighting&quot; (ArcGIS.Desktop.Internal.Mapping.Controls.Ribbon.EyeDomeLightingSliderControlViewModel, Mapping)</summary>
			public static string esri_mapping_EyeDomeLightingSliderControl {
				 get { return "esri_mapping_EyeDomeLightingSliderControl"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Bookmarks&quot; (BookmarksDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_bookmarksManagerDockPane {
				 get { return "esri_mapping_bookmarksManagerDockPane"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.SymbologyDockPaneContentProvider, Mapping)</summary>
			public static string esri_mapping_symbologyDockPane {
				 get { return "esri_mapping_symbologyDockPane"; }
			}
			///<summary>Returns the id string for &quot;Label Class&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.LabelClassDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_labelClassDockPane {
				 get { return "esri_mapping_labelClassDockPane"; }
			}
			///<summary>Returns the id string for &quot;Configure Pop-ups&quot; (ArcGIS.Desktop.Internal.Mapping.Popups.PopupsDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_popupsDockPane {
				 get { return "esri_mapping_popupsDockPane"; }
			}
			///<summary>Returns the id string for &quot;Pop-up&quot; (ArcGIS.Desktop.Internal.Mapping.Identify.InfoDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_infoDockPane {
				 get { return "esri_mapping_infoDockPane"; }
			}
			///<summary>Returns the id string for &quot;Locate&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.LocateDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_locateDockPane {
				 get { return "esri_mapping_locateDockPane"; }
			}
			///<summary>Returns the id string for &quot;Geocode Table&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.gtDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_geocodeTableDockPane {
				 get { return "esri_mapping_geocodeTableDockPane"; }
			}
			///<summary>Returns the id string for &quot;Export Movie&quot; (AnimationDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_animationDockPane {
				 get { return "esri_mapping_animationDockPane"; }
			}
			///<summary>Returns the id string for &quot;Animation Properties&quot; (AnimationDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_animationEditorDockPane {
				 get { return "esri_mapping_animationEditorDockPane"; }
			}
			///<summary>Returns the id string for &quot;Preview Frame&quot; (AnimationDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_animationPreviewDockPane {
				 get { return "esri_mapping_animationPreviewDockPane"; }
			}
			///<summary>Returns the id string for &quot;Animation Timeline&quot; (AnimationDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_animationTimelineDockPane {
				 get { return "esri_mapping_animationTimelineDockPane"; }
			}
			///<summary>Returns the id string for &quot;History&quot; (ArcGIS.Desktop.Internal.Mapping.Table.ChangeHistoricalTime.ChangeHistoricalTimeDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_temporalViewerDockPane {
				 get { return "esri_mapping_temporalViewerDockPane"; }
			}
			///<summary>Returns the id string for &quot;Feature Class Properties&quot; (ArcGIS.Desktop.Internal.Mapping.Annotation.FeatureClassPropertiesDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_featureClassDockPane {
				 get { return "esri_mapping_featureClassDockPane"; }
			}
			///<summary>Returns the id string for &quot;Exploratory Analysis&quot; (InteractiveAnalysisDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_interactiveAnalysisDockPane {
				 get { return "esri_mapping_interactiveAnalysisDockPane"; }
			}
			///<summary>Returns the id string for &quot;Create Scene Layer Package&quot; (ArcGIS.Desktop.Internal.Mapping.Wizards.CreateSceneLayerPackage.CreateSceneLayerPackageDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_createSceneLayerPackageDockPane {
				 get { return "esri_mapping_createSceneLayerPackageDockPane"; }
			}
			///<summary>Returns the id string for &quot;Building Filter&quot; (ArcGIS.Desktop.Internal.Mapping.Object3DRenderingFilter.Object3DRenderingFilterDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayerObject3DRenderingFilterDockPane {
				 get { return "esri_mapping_buildingSceneLayerObject3DRenderingFilterDockPane"; }
			}
			///<summary>Returns the id string for &quot;Isosurface&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.IsosurfaceDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_sceneLayerIsosurfaceDockPane {
				 get { return "esri_mapping_sceneLayerIsosurfaceDockPane"; }
			}
			///<summary>Returns the id string for &quot;Slice&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.StandardSliceDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_sceneLayerStandardSliceDockPane {
				 get { return "esri_mapping_sceneLayerStandardSliceDockPane"; }
			}
			///<summary>Returns the id string for &quot;Domain Usage&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.DomainsInUseDockPaneViewModel, Mapping)</summary>
			public static string esri_mapping_domainsinuseDockPane {
				 get { return "esri_mapping_domainsinuseDockPane"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Add To Map&quot; (ArcGIS.Desktop.Mapping.AddToMapDynamicMenu, Mapping)</summary>
			public static string esri_projectItemAddToMapDynamicMenu {
				 get { return "esri_projectItemAddToMapDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Change Basemap Layer Type&quot; (ChangeBasemapLayerTypeMenu, Mapping)</summary>
			public static string esri_mapping_setBasemapLayerTypeMenu {
				 get { return "esri_mapping_setBasemapLayerTypeMenu"; }
			}
			///<summary>Returns the id string for &quot;Selectable Layers&quot; (SelectableLayersMenu, Mapping)</summary>
			public static string esri_mapping_selectableLayersMenu {
				 get { return "esri_mapping_selectableLayersMenu"; }
			}
			///<summary>Returns the id string for &quot;Depth Priority&quot; (DepthPriorityMenu, Mapping)</summary>
			public static string esri_mapping_layerDepthPriorityDynamicMenu {
				 get { return "esri_mapping_layerDepthPriorityDynamicMenu"; }
			}
			///<summary>Returns the id string for &quot;Update&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarksUpdateMenu, Mapping)</summary>
			public static string esri_mapping_updateBookmarksMenu {
				 get { return "esri_mapping_updateBookmarksMenu"; }
			}
			///<summary>Returns the id string for &quot;Enable Pop-ups&quot; (ArcGIS.Desktop.Internal.Mapping.Popups.PopupsEnableMenu, Mapping)</summary>
			public static string esri_mapping_enablePopupsMenu {
				 get { return "esri_mapping_enablePopupsMenu"; }
			}
		}
		public static partial class Editbox {
			///<summary>Returns the id string for &quot;Filter Name:&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.FilterFieldsNameEditBox, Mapping)</summary>
			public static string esri_fieldsview_filterNameEditBox {
				 get { return "esri_fieldsview_filterNameEditBox"; }
			}
			///<summary>Returns the id string for &quot;Filter Domain:&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.FilterFieldsDomainNameEditBox, Mapping)</summary>
			public static string esri_fieldsview_filterDomainEditBox {
				 get { return "esri_fieldsview_filterDomainEditBox"; }
			}
			///<summary>Returns the id string for &quot;Filter Text:&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.FilterDomainsEditBox, Mapping)</summary>
			public static string esri_domainview_filterEditBox {
				 get { return "esri_domainview_filterEditBox"; }
			}
			///<summary>Returns the id string for &quot;Name: &quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.Versioning.VersionNameEditBox, Mapping)</summary>
			public static string esri_versionview_versionNameEditBox {
				 get { return "esri_versionview_versionNameEditBox"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.PointCloud.PointCloudLayerSymbologyGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerSymbologyGallery {
				 get { return "esri_mapping_pointCloudLayerSymbologyGallery"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Symbology.VoxelLayerSymbologyGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_voxelLayerSymbologyGallery {
				 get { return "esri_mapping_voxelLayerSymbologyGallery"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (ArcGIS.Desktop.Internal.Mapping.TOC.TOCFilterGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_tocFilterGallery {
				 get { return "esri_mapping_tocFilterGallery"; }
			}
			///<summary>Returns the id string for &quot;Basemap&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BasemapGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_basemapGallery {
				 get { return "esri_mapping_basemapGallery"; }
			}
			///<summary>Returns the id string for &quot;Basemap&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MapPreviewBasemapGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_previewBasemapGallery {
				 get { return "esri_mapping_previewBasemapGallery"; }
			}
			///<summary>Returns the id string for &quot;Bookmarks&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarksNavigateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_bookmarksNavigateGallery {
				 get { return "esri_mapping_bookmarksNavigateGallery"; }
			}
			///<summary>Returns the id string for &quot;Bookmarks&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarksNavigateGalleryViewModel, Mapping)</summary>
			public static string esri_fullmotionvideo_bookmarksNavigateGallery {
				 get { return "esri_fullmotionvideo_bookmarksNavigateGallery"; }
			}
			///<summary>Returns the id string for &quot;Update&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.BookmarksUpdateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_bookmarksUpdateGallery {
				 get { return "esri_mapping_bookmarksUpdateGallery"; }
			}
			///<summary>Returns the id string for &quot;Stretch Type&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.StretchTypeGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterStretchTypeGallery {
				 get { return "esri_mapping_rasterStretchTypeGallery"; }
			}
			///<summary>Returns the id string for &quot;Resampling Type&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.ResamplingTypeGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterResamplingTypeGallery {
				 get { return "esri_mapping_rasterResamplingTypeGallery"; }
			}
			///<summary>Returns the id string for &quot;Band Combination&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.BandCombinationGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterBandCombinationGallery {
				 get { return "esri_mapping_rasterBandCombinationGallery"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.SymbolizerTemplateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_layerSymbologyGallery {
				 get { return "esri_mapping_layerSymbologyGallery"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.BinsSymbolizerTemplateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_layerBinsSymbologyGallery {
				 get { return "esri_mapping_layerBinsSymbologyGallery"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Symbology.WMSSubLayerSymbolizerTemplateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_wmsSubLayerSymbologyGallery {
				 get { return "esri_mapping_wmsSubLayerSymbologyGallery"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol Style&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.TextSymbolStyleGallery, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolStylesGallery {
				 get { return "esri_mapping_labelTextSymbolStylesGallery"; }
			}
			///<summary>Returns the id string for &quot;Label Placement Style&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.LabelPlacementStyleGallery, Mapping)</summary>
			public static string esri_mapping_labelPlacementStyleGallery {
				 get { return "esri_mapping_labelPlacementStyleGallery"; }
			}
			///<summary>Returns the id string for &quot;Template&quot; (RasterProcess.TemplateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterTemplateGallery {
				 get { return "esri_mapping_rasterTemplateGallery"; }
			}
			///<summary>Returns the id string for &quot;Symbology&quot; (ArcGIS.Desktop.Internal.Mapping.Raster.Symbology.ColorizerTemplateGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterLayerSymbologyGallery {
				 get { return "esri_mapping_rasterLayerSymbologyGallery"; }
			}
			///<summary>Returns the id string for &quot;Sort&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.MosaicMethodsGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterMosaicMethodsGallery {
				 get { return "esri_mapping_rasterMosaicMethodsGallery"; }
			}
			///<summary>Returns the id string for &quot;Resolve Overlap&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.MosaicOperatorsGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterMosaicOperatorsGallery {
				 get { return "esri_mapping_rasterMosaicOperatorsGallery"; }
			}
			///<summary>Returns the id string for &quot;Processing Templates&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.RenderingRulesGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_rasterRenderingRulesGallery {
				 get { return "esri_mapping_rasterRenderingRulesGallery"; }
			}
			///<summary>Returns the id string for &quot;Building Filter&quot; (ArcGIS.Desktop.Internal.Mapping.Object3DRenderingFilter.Object3DRenderingFilterGallery, Mapping)</summary>
			public static string esri_mapping_layerObject3DRenderingFilterGallery {
				 get { return "esri_mapping_layerObject3DRenderingFilterGallery"; }
			}
			///<summary>Returns the id string for &quot;Face Culling&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.FaceCullingGallery, Mapping)</summary>
			public static string esri_mapping_layer3DFaceCullingGallery {
				 get { return "esri_mapping_layer3DFaceCullingGallery"; }
			}
			///<summary>Returns the id string for &quot;Lighting&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.LightingGallery, Mapping)</summary>
			public static string esri_mapping_layer3DLightingGallery {
				 get { return "esri_mapping_layer3DLightingGallery"; }
			}
			///<summary>Returns the id string for &quot;Type&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.ExtrusionTypeGallery, Mapping)</summary>
			public static string esri_mapping_layerExtrusionTypeGallery {
				 get { return "esri_mapping_layerExtrusionTypeGallery"; }
			}
			///<summary>Returns the id string for &quot;Add Preset&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SimpleLayerGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_simpleLayerGallery {
				 get { return "esri_mapping_simpleLayerGallery"; }
			}
			///<summary>Returns the id string for &quot;Add Data&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AddDataGallery, Mapping)</summary>
			public static string esri_mapping_addDataGallery {
				 get { return "esri_mapping_addDataGallery"; }
			}
			///<summary>Returns the id string for &quot;Related Data&quot; (ArcGIS.Desktop.Internal.Mapping.Table.RelatedDataGallery, Mapping)</summary>
			public static string esri_mapping_tableRelatesGallery {
				 get { return "esri_mapping_tableRelatesGallery"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationImportKeyframesGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_importToKeyframeGallery {
				 get { return "esri_mapping_importToKeyframeGallery"; }
			}
			///<summary>Returns the id string for &quot;Add Overlay&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AnimationOverlayGallery, Mapping)</summary>
			public static string esri_mapping_animationOverlayGallery {
				 get { return "esri_mapping_animationOverlayGallery"; }
			}
			///<summary>Returns the id string for &quot;Exploratory Analysis&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveAnalysisGallery, Mapping)</summary>
			public static string esri_mapping_interactiveAnalysisGallery {
				 get { return "esri_mapping_interactiveAnalysisGallery"; }
			}
			///<summary>Returns the id string for &quot;Drawing Mode&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SceneDrawingModeGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_sceneViewModeGallery {
				 get { return "esri_mapping_sceneViewModeGallery"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (ArcGIS.Desktop.Internal.Mapping.Locate.LocatorFilterGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_locatorFilterGallery {
				 get { return "esri_mapping_locatorFilterGallery"; }
			}
			///<summary>Returns the id string for &quot;Add Rule&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.AttributeRules.Ribbon.AddRuleGallery, Mapping)</summary>
			public static string esri_mapping_attributeRules_addRuleGallery {
				 get { return "esri_mapping_attributeRules_addRuleGallery"; }
			}
			///<summary>Returns the id string for &quot;Ready to Use Rules&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.AttributeRules.Ribbon.DataReviewerRulesGalleryViewModel, Mapping)</summary>
			public static string esri_mapping_attributeRules_datareviewerRuleGallery {
				 get { return "esri_mapping_attributeRules_datareviewerRuleGallery"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_locateGallery&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.LocateGallery, Mapping)</summary>
			public static string esri_mapping_locateGallery {
				 get { return "esri_mapping_locateGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerAppearanceDrawingGroup {
				 get { return "esri_mapping_pointCloudLayerAppearanceDrawingGroup"; }
			}
			///<summary>Returns the id string for &quot;Point Display&quot; (Group, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerAppearancePointThinningGroup {
				 get { return "esri_mapping_pointCloudLayerAppearancePointThinningGroup"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (Group, Mapping)</summary>
			public static string esri_project_mapping_home {
				 get { return "esri_project_mapping_home"; }
			}
			///<summary>Returns the id string for &quot;Styles&quot; (Group, Mapping)</summary>
			public static string esri_project_styles {
				 get { return "esri_project_styles"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Group, Mapping)</summary>
			public static string esri_project_styles_create {
				 get { return "esri_project_styles_create"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (Group, Mapping)</summary>
			public static string esri_project_styles_project {
				 get { return "esri_project_styles_project"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Group, Mapping)</summary>
			public static string esri_project_styles_manage {
				 get { return "esri_project_styles_manage"; }
			}
			///<summary>Returns the id string for &quot;Organize&quot; (Group, Mapping)</summary>
			public static string esri_mapping_organizeStyles {
				 get { return "esri_mapping_organizeStyles"; }
			}
			///<summary>Returns the id string for &quot;Windows&quot; (Group, Mapping)</summary>
			public static string esri_mapping_dockWindows {
				 get { return "esri_mapping_dockWindows"; }
			}
			///<summary>Returns the id string for &quot;Project&quot; (Group, Mapping)</summary>
			public static string esri_mapping_projectFile {
				 get { return "esri_mapping_projectFile"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (Group, Mapping)</summary>
			public static string esri_mapping_navigateGroup {
				 get { return "esri_mapping_navigateGroup"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingLayerGroup {
				 get { return "esri_mapping_labelingLayerGroup"; }
			}
			///<summary>Returns the id string for &quot;Labeling&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingGroup {
				 get { return "esri_mapping_labelingGroup"; }
			}
			///<summary>Returns the id string for &quot;Thumbnail&quot; (Group, Mapping)</summary>
			public static string esri_mapping_thumbnailGroup {
				 get { return "esri_mapping_thumbnailGroup"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingMapGroup {
				 get { return "esri_mapping_labelingMapGroup"; }
			}
			///<summary>Returns the id string for &quot;Label Placement&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingPlacementStyleGroup {
				 get { return "esri_mapping_labelingPlacementStyleGroup"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Group, Mapping)</summary>
			public static string esri_mapping_mapGroup {
				 get { return "esri_mapping_mapGroup"; }
			}
			///<summary>Returns the id string for &quot;Label Class&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingLabelClassGroup {
				 get { return "esri_mapping_labelingLabelClassGroup"; }
			}
			///<summary>Returns the id string for &quot;Visibility Range&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingScalesGroup {
				 get { return "esri_mapping_labelingScalesGroup"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol&quot; (Group, Mapping)</summary>
			public static string esri_mapping_kmlLayerLabelingTextSymbolGroup {
				 get { return "esri_mapping_kmlLayerLabelingTextSymbolGroup"; }
			}
			///<summary>Returns the id string for &quot;Text Symbol&quot; (Group, Mapping)</summary>
			public static string esri_mapping_labelingTextSymbolGroup {
				 get { return "esri_mapping_labelingTextSymbolGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Mapping)</summary>
			public static string esri_mapping_selectionGroup {
				 get { return "esri_mapping_selectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Inquiry&quot; (Group, Mapping)</summary>
			public static string esri_mapping_inquiryGroup {
				 get { return "esri_mapping_inquiryGroup"; }
			}
			///<summary>Returns the id string for &quot;Offline&quot; (Group, Mapping)</summary>
			public static string esri_mapping_offlineGroup {
				 get { return "esri_mapping_offlineGroup"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Group, Mapping)</summary>
			public static string esri_mapping_viewGroup {
				 get { return "esri_mapping_viewGroup"; }
			}
			///<summary>Returns the id string for &quot;Link&quot; (Group, Mapping)</summary>
			public static string esri_mapping_syncViewGroup {
				 get { return "esri_mapping_syncViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Definition Query&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerDefQueryGroup {
				 get { return "esri_mapping_layerDefQueryGroup"; }
			}
			///<summary>Returns the id string for &quot;Exclusion&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerDataExclusionGroup {
				 get { return "esri_mapping_layerDataExclusionGroup"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerObject3DRenderingFilterGroup {
				 get { return "esri_mapping_layerObject3DRenderingFilterGroup"; }
			}
			///<summary>Returns the id string for &quot;Table&quot; (Group, Mapping)</summary>
			public static string esri_mapping_featureLayerAttributeGroup {
				 get { return "esri_mapping_featureLayerAttributeGroup"; }
			}
			///<summary>Returns the id string for &quot;Relationship&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerRelationshipsGroup {
				 get { return "esri_mapping_layerRelationshipsGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerSelectionGroup {
				 get { return "esri_mapping_layerSelectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Mapping)</summary>
			public static string esri_mapping_sceneLayerSelectionGroup {
				 get { return "esri_mapping_sceneLayerSelectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerToolsGroup {
				 get { return "esri_mapping_layerToolsGroup"; }
			}
			///<summary>Returns the id string for &quot;Geocoding&quot; (Group, Mapping)</summary>
			public static string esri_mapping_geocodeToolsGroup {
				 get { return "esri_mapping_geocodeToolsGroup"; }
			}
			///<summary>Returns the id string for &quot;3D Exploratory Analysis&quot; (Group, Mapping)</summary>
			public static string esri_mapping_interactiveAnalysisGroup {
				 get { return "esri_mapping_interactiveAnalysisGroup"; }
			}
			///<summary>Returns the id string for &quot;Profile Viewing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_profileViewGroup {
				 get { return "esri_mapping_profileViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Visibility Range&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerScaleVisibilityGroup {
				 get { return "esri_mapping_layerScaleVisibilityGroup"; }
			}
			///<summary>Returns the id string for &quot;Effects&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerEffectsGroup {
				 get { return "esri_mapping_layerEffectsGroup"; }
			}
			///<summary>Returns the id string for &quot;Effects&quot; (Group, Mapping)</summary>
			public static string esri_mapping__pointCloudLayerEffectsGroup {
				 get { return "esri_mapping__pointCloudLayerEffectsGroup"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerSymbology {
				 get { return "esri_mapping_layerSymbology"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerSymbology {
				 get { return "esri_mapping_subtypeGroupLayerSymbology"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_annotationLayerSymbology {
				 get { return "esri_mapping_annotationLayerSymbology"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_sceneLayerSymbology {
				 get { return "esri_mapping_sceneLayerSymbology"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerSymbologyWMSSubLayers {
				 get { return "esri_mapping_layerSymbologyWMSSubLayers"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerSymbologyMixedLayers {
				 get { return "esri_mapping_layerSymbologyMixedLayers"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_streamLayerSymbology {
				 get { return "esri_mapping_streamLayerSymbology"; }
			}
			///<summary>Returns the id string for &quot;Faces&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layer3DGroup {
				 get { return "esri_mapping_layer3DGroup"; }
			}
			///<summary>Returns the id string for &quot;Extrusion&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerExtrusion {
				 get { return "esri_mapping_layerExtrusion"; }
			}
			///<summary>Returns the id string for &quot;Navigation&quot; (Group, Mapping)</summary>
			public static string esri_mapping_navigation {
				 get { return "esri_mapping_navigation"; }
			}
			///<summary>Returns the id string for &quot;Lighting and Shading&quot; (Group, Mapping)</summary>
			public static string esri_mapping_lightingAndShading_LAS_PCL {
				 get { return "esri_mapping_lightingAndShading_LAS_PCL"; }
			}
			///<summary>Returns the id string for &quot;Lighting and Shading&quot; (Group, Mapping)</summary>
			public static string esri_mapping_lightingAndShadingGroup {
				 get { return "esri_mapping_lightingAndShadingGroup"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Group, Mapping)</summary>
			public static string esri_mapping_range {
				 get { return "esri_mapping_range"; }
			}
			///<summary>Returns the id string for &quot;Active Range&quot; (Group, Mapping)</summary>
			public static string esri_mapping_activeRange {
				 get { return "esri_mapping_activeRange"; }
			}
			///<summary>Returns the id string for &quot;Current Range&quot; (Group, Mapping)</summary>
			public static string esri_mapping_currentRange {
				 get { return "esri_mapping_currentRange"; }
			}
			///<summary>Returns the id string for &quot;Step&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rangeStep {
				 get { return "esri_mapping_rangeStep"; }
			}
			///<summary>Returns the id string for &quot;Playback&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rangePlayback {
				 get { return "esri_mapping_rangePlayback"; }
			}
			///<summary>Returns the id string for &quot;Full Extent&quot; (Group, Mapping)</summary>
			public static string esri_mapping_fullRange {
				 get { return "esri_mapping_fullRange"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Group, Mapping)</summary>
			public static string esri_mapping_time {
				 get { return "esri_mapping_time"; }
			}
			///<summary>Returns the id string for &quot;Current Time&quot; (Group, Mapping)</summary>
			public static string esri_mapping_currentTime {
				 get { return "esri_mapping_currentTime"; }
			}
			///<summary>Returns the id string for &quot;Step&quot; (Group, Mapping)</summary>
			public static string esri_mapping_timeStep {
				 get { return "esri_mapping_timeStep"; }
			}
			///<summary>Returns the id string for &quot;Playback&quot; (Group, Mapping)</summary>
			public static string esri_mapping_timePlayback {
				 get { return "esri_mapping_timePlayback"; }
			}
			///<summary>Returns the id string for &quot;Full Extent&quot; (Group, Mapping)</summary>
			public static string esri_mapping_fullTime {
				 get { return "esri_mapping_fullTime"; }
			}
			///<summary>Returns the id string for &quot;Time Zone&quot; (Group, Mapping)</summary>
			public static string esri_mapping_timeZoneGroup {
				 get { return "esri_mapping_timeZoneGroup"; }
			}
			///<summary>Returns the id string for &quot;Snapping&quot; (Group, Mapping)</summary>
			public static string esri_mapping_timeSnapping {
				 get { return "esri_mapping_timeSnapping"; }
			}
			///<summary>Returns the id string for &quot;Animation&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animation {
				 get { return "esri_mapping_animation"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationVisualization {
				 get { return "esri_mapping_animationVisualization"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationAppend {
				 get { return "esri_mapping_animationAppend"; }
			}
			///<summary>Returns the id string for &quot;Edit&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationKeyframe {
				 get { return "esri_mapping_animationKeyframe"; }
			}
			///<summary>Returns the id string for &quot;Playback&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationPlayback {
				 get { return "esri_mapping_animationPlayback"; }
			}
			///<summary>Returns the id string for &quot;Overlay&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationOverlay {
				 get { return "esri_mapping_animationOverlay"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationExport {
				 get { return "esri_mapping_animationExport"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Group, Mapping)</summary>
			public static string esri_mapping_animationList {
				 get { return "esri_mapping_animationList"; }
			}
			///<summary>Returns the id string for &quot;Scene&quot; (Group, Mapping)</summary>
			public static string esri_mapping_sceneGroup {
				 get { return "esri_mapping_sceneGroup"; }
			}
			///<summary>Returns the id string for &quot;View Clipping&quot; (Group, Mapping)</summary>
			public static string esri_mapping_viewClippingGroup {
				 get { return "esri_mapping_viewClippingGroup"; }
			}
			///<summary>Returns the id string for &quot;Overprint&quot; (Group, Mapping)</summary>
			public static string esri_mapping_overprint {
				 get { return "esri_mapping_overprint"; }
			}
			///<summary>Returns the id string for &quot;Effects&quot; (Group, Mapping)</summary>
			public static string esri_mapping_elevationEffectsGroup {
				 get { return "esri_mapping_elevationEffectsGroup"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_elevationDrawingGroup {
				 get { return "esri_mapping_elevationDrawingGroup"; }
			}
			///<summary>Returns the id string for &quot;Surface&quot; (Group, Mapping)</summary>
			public static string esri_mapping_elevationSurfaceGroup {
				 get { return "esri_mapping_elevationSurfaceGroup"; }
			}
			///<summary>Returns the id string for &quot;Enhancement&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerEnhancementGroup {
				 get { return "esri_mapping_rasterLayerEnhancementGroup"; }
			}
			///<summary>Returns the id string for &quot;Rendering&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerRenderingGroup {
				 get { return "esri_mapping_rasterLayerRenderingGroup"; }
			}
			///<summary>Returns the id string for &quot;Rotate&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerRotateGroup {
				 get { return "esri_mapping_rasterLayerRotateGroup"; }
			}
			///<summary>Returns the id string for &quot;Compression&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerCompressionGroup {
				 get { return "esri_mapping_rasterLayerCompressionGroup"; }
			}
			///<summary>Returns the id string for &quot;Image Display Order&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerImageDisplayOrderGroup {
				 get { return "esri_mapping_rasterLayerImageDisplayOrderGroup"; }
			}
			///<summary>Returns the id string for &quot;Processing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerProcessingTemplatesGroup {
				 get { return "esri_mapping_rasterLayerProcessingTemplatesGroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerToolsGroup {
				 get { return "esri_mapping_rasterLayerToolsGroup"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerToolsGroup {
				 get { return "esri_mapping_imageServiceLayerToolsGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Mapping)</summary>
			public static string esri_mapping_mosaicLayerSelectionGroup {
				 get { return "esri_mapping_mosaicLayerSelectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Multidimensional Filter&quot; (Group, Mapping)</summary>
			public static string esri_mapping_rasterLayerMultidimensionalGroup {
				 get { return "esri_mapping_rasterLayerMultidimensionalGroup"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Group, Mapping)</summary>
			public static string esri_mapping_mdimRasterLayerAnalysisGroup {
				 get { return "esri_mapping_mdimRasterLayerAnalysisGroup"; }
			}
			///<summary>Returns the id string for &quot;Clipboard&quot; (Group, Mapping)</summary>
			public static string esri_mapping_designView_clipboardGroup {
				 get { return "esri_mapping_designView_clipboardGroup"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Group, Mapping)</summary>
			public static string esri_mapping_designViewGroup {
				 get { return "esri_mapping_designViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Group, Mapping)</summary>
			public static string esri_mapping_designViewGroupOnlyFieldsView {
				 get { return "esri_mapping_designViewGroupOnlyFieldsView"; }
			}
			///<summary>Returns the id string for &quot;Archiving&quot; (Group, Mapping)</summary>
			public static string esri_mapping_archiveGroup {
				 get { return "esri_mapping_archiveGroup"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Group, Mapping)</summary>
			public static string esri_fieldview_designGroup {
				 get { return "esri_fieldview_designGroup"; }
			}
			///<summary>Returns the id string for &quot; Changes &quot; (Group, Mapping)</summary>
			public static string esri_fieldview_changesGroup {
				 get { return "esri_fieldview_changesGroup"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (Group, Mapping)</summary>
			public static string esri_fieldview_filterGroup {
				 get { return "esri_fieldview_filterGroup"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (Group, Mapping)</summary>
			public static string esri_subtypeview_managementGroup {
				 get { return "esri_subtypeview_managementGroup"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Group, Mapping)</summary>
			public static string esri_subtypeview_designViewGroup {
				 get { return "esri_subtypeview_designViewGroup"; }
			}
			///<summary>Returns the id string for &quot; Changes &quot; (Group, Mapping)</summary>
			public static string esri_subtypeview_changesGroup {
				 get { return "esri_subtypeview_changesGroup"; }
			}
			///<summary>Returns the id string for &quot;Filter&quot; (Group, Mapping)</summary>
			public static string esri_domainview_filterGroup {
				 get { return "esri_domainview_filterGroup"; }
			}
			///<summary>Returns the id string for &quot; Changes &quot; (Group, Mapping)</summary>
			public static string esri_domainview_changesGroup {
				 get { return "esri_domainview_changesGroup"; }
			}
			///<summary>Returns the id string for &quot;Versioning&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerVersioningGroup {
				 get { return "esri_mapping_layerVersioningGroup"; }
			}
			///<summary>Returns the id string for &quot;Archiving&quot; (Group, Mapping)</summary>
			public static string esri_mapping_layerArchivingGroup {
				 get { return "esri_mapping_layerArchivingGroup"; }
			}
			///<summary>Returns the id string for &quot; Map View &quot; (Group, Mapping)</summary>
			public static string esri_mapping_versionMapViewGroup {
				 get { return "esri_mapping_versionMapViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Filter Versions&quot; (Group, Mapping)</summary>
			public static string esri_mapping_filterVersionsGroup {
				 get { return "esri_mapping_filterVersionsGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage Versions&quot; (Group, Mapping)</summary>
			public static string esri_mapping_VersionChangesGroup {
				 get { return "esri_mapping_VersionChangesGroup"; }
			}
			///<summary>Returns the id string for &quot;Version Administration&quot; (Group, Mapping)</summary>
			public static string esri_mapping_VersionAdministrationGroup {
				 get { return "esri_mapping_VersionAdministrationGroup"; }
			}
			///<summary>Returns the id string for &quot;Add Rules&quot; (Group, Mapping)</summary>
			public static string esri_mapping_AddAttributeRulesButtonGroup {
				 get { return "esri_mapping_AddAttributeRulesButtonGroup"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (Group, Mapping)</summary>
			public static string esri_mapping_AttributeRulesButtonGroup {
				 get { return "esri_mapping_AttributeRulesButtonGroup"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Group, Mapping)</summary>
			public static string esri_mapping_AttributeRulesDesignViewGroup {
				 get { return "esri_mapping_AttributeRulesDesignViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (Group, Mapping)</summary>
			public static string esri_mapping_ContingentValuesGroup {
				 get { return "esri_mapping_ContingentValuesGroup"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Group, Mapping)</summary>
			public static string esri_contingentvalues_designViewGroup {
				 get { return "esri_contingentvalues_designViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Streaming Data&quot; (Group, Mapping)</summary>
			public static string esri_mapping_streamingDataGroup {
				 get { return "esri_mapping_streamingDataGroup"; }
			}
			///<summary>Returns the id string for &quot;Previous Observations&quot; (Group, Mapping)</summary>
			public static string esri_mapping_streamLayerPreviousObservations {
				 get { return "esri_mapping_streamLayerPreviousObservations"; }
			}
			///<summary>Returns the id string for &quot;Alignment&quot; (Group, Mapping)</summary>
			public static string esri_mapping_georeference_GeoreferenceGroup {
				 get { return "esri_mapping_georeference_GeoreferenceGroup"; }
			}
			///<summary>Returns the id string for &quot;Alignment&quot; (Group, Mapping)</summary>
			public static string esri_mapping_georeference_RasterGeoreferenceGroup {
				 get { return "esri_mapping_georeference_RasterGeoreferenceGroup"; }
			}
			///<summary>Returns the id string for &quot;Prepare&quot; (Group, Mapping)</summary>
			public static string esri_mapping_georeference_PrepareGroup {
				 get { return "esri_mapping_georeference_PrepareGroup"; }
			}
			///<summary>Returns the id string for &quot;Save&quot; (Group, Mapping)</summary>
			public static string esri_mapping_georeference_SaveGroup {
				 get { return "esri_mapping_georeference_SaveGroup"; }
			}
			///<summary>Returns the id string for &quot;Close&quot; (Group, Mapping)</summary>
			public static string esri_mapping_georeference_CloseGroup {
				 get { return "esri_mapping_georeference_CloseGroup"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningLayerGroup {
				 get { return "esri_mapping_binningLayerGroup"; }
			}
			///<summary>Returns the id string for &quot;Binning Threshold&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningThresholdGroup {
				 get { return "esri_mapping_binningThresholdGroup"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningLayerDrawingGroup {
				 get { return "esri_mapping_binningLayerDrawingGroup"; }
			}
			///<summary>Returns the id string for &quot;Size&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningSizeGroup {
				 get { return "esri_mapping_binningSizeGroup"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningAppearanceGroup {
				 get { return "esri_mapping_binningAppearanceGroup"; }
			}
			///<summary>Returns the id string for &quot;Summary&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningSummaryGroup {
				 get { return "esri_mapping_binningSummaryGroup"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_binningDrawingGroup {
				 get { return "esri_mapping_binningDrawingGroup"; }
			}
			///<summary>Returns the id string for &quot;Elevation&quot; (Group, Mapping)</summary>
			public static string esri_mapping_voxelLayerElevationGroup {
				 get { return "esri_mapping_voxelLayerElevationGroup"; }
			}
			///<summary>Returns the id string for &quot;Variable&quot; (Group, Mapping)</summary>
			public static string esri_mapping_voxelLayerVariableGroup {
				 get { return "esri_mapping_voxelLayerVariableGroup"; }
			}
			///<summary>Returns the id string for &quot;Drawing&quot; (Group, Mapping)</summary>
			public static string esri_mapping_voxelLayerDrawingGroup {
				 get { return "esri_mapping_voxelLayerDrawingGroup"; }
			}
			///<summary>Returns the id string for &quot;Isosurface&quot; (Group, Mapping)</summary>
			public static string esri_mapping_voxelLayerIsosurfaceGroup {
				 get { return "esri_mapping_voxelLayerIsosurfaceGroup"; }
			}
			///<summary>Returns the id string for &quot;Slice&quot; (Group, Mapping)</summary>
			public static string esri_mapping_voxelLayerDataSliceGroup {
				 get { return "esri_mapping_voxelLayerDataSliceGroup"; }
			}
			///<summary>Returns the id string for &quot;Isosurface&quot; (Group, Mapping)</summary>
			public static string esri_mapping_voxelLayerDataIsosurfaceGroup {
				 get { return "esri_mapping_voxelLayerDataIsosurfaceGroup"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_mapping_layerFactories&quot; (Category, Mapping)</summary>
			public static string esri_mapping_layerFactories {
				 get { return "esri_mapping_layerFactories"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_tocViews&quot; (Category, Mapping)</summary>
			public static string esri_mapping_tocViews {
				 get { return "esri_mapping_tocViews"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_toc_mapMemberChildLoaders&quot; (Category, Mapping)</summary>
			public static string esri_mapping_toc_mapMemberChildLoaders {
				 get { return "esri_mapping_toc_mapMemberChildLoaders"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_showSimplifiedTOC&quot; (Category, Mapping)</summary>
			public static string esri_mapping_showSimplifiedTOC {
				 get { return "esri_mapping_showSimplifiedTOC"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapViews&quot; (Category, Mapping)</summary>
			public static string esri_mapping_mapViews {
				 get { return "esri_mapping_mapViews"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldValueEditTemplate&quot; (Category, Mapping)</summary>
			public static string esri_mapping_fieldValueEditTemplate {
				 get { return "esri_mapping_fieldValueEditTemplate"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_styleFileManager&quot; (Category, Mapping)</summary>
			public static string esri_mapping_styleFileManager {
				 get { return "esri_mapping_styleFileManager"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_mapping_bookmarks&quot; (BookmarksEmbeddableControlViewModel, Mapping)</summary>
			public static string esri_mapping_bookmarks {
				 get { return "esri_mapping_bookmarks"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_locate&quot; (ArcGIS.Desktop.Internal.Mapping.LocateEmbeddableControlViewModel, Mapping)</summary>
			public static string esri_mapping_locate {
				 get { return "esri_mapping_locate"; }
			}
			///<summary>Returns the id string for &quot;FeatureLayer&quot; (FeatureLayer, Mapping)</summary>
			public static string FeatureLayer {
				 get { return "FeatureLayer"; }
			}
			///<summary>Returns the id string for &quot;SubtypeGroupLayer&quot; (ArcGIS.Desktop.Mapping.SubtypeGroupLayer, Mapping)</summary>
			public static string SubtypeGroupLayer {
				 get { return "SubtypeGroupLayer"; }
			}
			///<summary>Returns the id string for &quot;AnnotationLayer&quot; (AnnotationLayer, Mapping)</summary>
			public static string AnnotationLayer {
				 get { return "AnnotationLayer"; }
			}
			///<summary>Returns the id string for &quot;AnnotationSubLayer&quot; (AnnotationSubLayer, Mapping)</summary>
			public static string AnnotationSubLayer {
				 get { return "AnnotationSubLayer"; }
			}
			///<summary>Returns the id string for &quot;DimensionLayer&quot; (DimensionLayer, Mapping)</summary>
			public static string DimensionLayer {
				 get { return "DimensionLayer"; }
			}
			///<summary>Returns the id string for &quot;GroupLayer&quot; (GroupLayer, Mapping)</summary>
			public static string GroupLayer {
				 get { return "GroupLayer"; }
			}
			///<summary>Returns the id string for &quot;KMLLayer&quot; (KMLLayer, Mapping)</summary>
			public static string KMLLayer {
				 get { return "KMLLayer"; }
			}
			///<summary>Returns the id string for &quot;GraphicsLayer&quot; (ArcGIS.Desktop.Internal.Mapping.GraphicsLayer, Mapping)</summary>
			public static string GraphicsLayer {
				 get { return "GraphicsLayer"; }
			}
			///<summary>Returns the id string for &quot;VectorTileLayer&quot; (VectorTileLayer, Mapping)</summary>
			public static string VectorTileLayer {
				 get { return "VectorTileLayer"; }
			}
			///<summary>Returns the id string for &quot;TiledServiceLayer&quot; (TiledServiceLayer, Mapping)</summary>
			public static string TiledServiceLayer {
				 get { return "TiledServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;GlobeServiceLayer&quot; (GlobeServiceLayer, Mapping)</summary>
			public static string GlobeServiceLayer {
				 get { return "GlobeServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;BuildingSceneLayer&quot; (BuildingSceneLayer, Mapping)</summary>
			public static string BuildingSceneLayer {
				 get { return "BuildingSceneLayer"; }
			}
			///<summary>Returns the id string for &quot;BuildingDisciplineSceneLayer&quot; (BuildingDisciplineSceneLayer, Mapping)</summary>
			public static string BuildingDisciplineSceneLayer {
				 get { return "BuildingDisciplineSceneLayer"; }
			}
			///<summary>Returns the id string for &quot;SceneServiceLayer&quot; (SceneServiceLayer, Mapping)</summary>
			public static string SceneServiceLayer {
				 get { return "SceneServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;DynamicServiceLayer&quot; (DynamicServiceLayer, Mapping)</summary>
			public static string DynamicServiceLayer {
				 get { return "DynamicServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;ServiceSubLayer&quot; (ServiceSubLayer, Mapping)</summary>
			public static string ServiceSubLayer {
				 get { return "ServiceSubLayer"; }
			}
			///<summary>Returns the id string for &quot;ServiceCompositeSubLayer&quot; (ServiceCompositeSubLayer, Mapping)</summary>
			public static string ServiceCompositeSubLayer {
				 get { return "ServiceCompositeSubLayer"; }
			}
			///<summary>Returns the id string for &quot;ParcelFabricLayer&quot; (ArcGIS.Desktop.Internal.Mapping.ParcelFabricLayer, Mapping)</summary>
			public static string ParcelFabricLayer {
				 get { return "ParcelFabricLayer"; }
			}
			///<summary>Returns the id string for &quot;TopologyLayer&quot; (ArcGIS.Desktop.Internal.Mapping.TopologyLayer, Mapping)</summary>
			public static string TopologyLayer {
				 get { return "TopologyLayer"; }
			}
			///<summary>Returns the id string for &quot;GeodatabaseErrorLayer&quot; (ArcGIS.Desktop.Internal.Mapping.GeodatabaseErrorLayer, Mapping)</summary>
			public static string GeodatabaseErrorLayer {
				 get { return "GeodatabaseErrorLayer"; }
			}
			///<summary>Returns the id string for &quot;NetworkDatasetLayer&quot; (NetworkDatasetLayer, Mapping)</summary>
			public static string NetworkDatasetLayer {
				 get { return "NetworkDatasetLayer"; }
			}
			///<summary>Returns the id string for &quot;NetworkAnalystLayer&quot; (NetworkAnalystLayer, Mapping)</summary>
			public static string NetworkAnalystLayer {
				 get { return "NetworkAnalystLayer"; }
			}
			///<summary>Returns the id string for &quot;MosaicLayer&quot; (MosaicLayer, Mapping)</summary>
			public static string MosaicLayer {
				 get { return "MosaicLayer"; }
			}
			///<summary>Returns the id string for &quot;FeatureMosaicSubLayer&quot; (FeatureMosaicSubLayer, Mapping)</summary>
			public static string FeatureMosaicSubLayer {
				 get { return "FeatureMosaicSubLayer"; }
			}
			///<summary>Returns the id string for &quot;ImageMosaicSubLayer&quot; (ImageMosaicSubLayer, Mapping)</summary>
			public static string ImageMosaicSubLayer {
				 get { return "ImageMosaicSubLayer"; }
			}
			///<summary>Returns the id string for &quot;RasterLayer&quot; (RasterLayer, Mapping)</summary>
			public static string RasterLayer {
				 get { return "RasterLayer"; }
			}
			///<summary>Returns the id string for &quot;ImageServiceLayer&quot; (ImageServiceLayer, Mapping)</summary>
			public static string ImageServiceLayer {
				 get { return "ImageServiceLayer"; }
			}
			///<summary>Returns the id string for &quot;UtilityNetworkLayer&quot; (ArcGIS.Desktop.Mapping.UtilityNetworkLayer, Mapping)</summary>
			public static string UtilityNetworkLayer {
				 get { return "UtilityNetworkLayer"; }
			}
			///<summary>Returns the id string for &quot;TraceNetworkLayer&quot; (ArcGIS.Desktop.Mapping.TraceNetworkLayer, Mapping)</summary>
			public static string TraceNetworkLayer {
				 get { return "TraceNetworkLayer"; }
			}
			///<summary>Returns the id string for &quot;DiagramLayer&quot; (ArcGIS.Desktop.Mapping.DiagramLayer, Mapping)</summary>
			public static string DiagramLayer {
				 get { return "DiagramLayer"; }
			}
			///<summary>Returns the id string for &quot;WMSSubLayer&quot; (WMSSubLayer, Mapping)</summary>
			public static string WMSSubLayer {
				 get { return "WMSSubLayer"; }
			}
			///<summary>Returns the id string for &quot;ParcelLayer&quot; (ArcGIS.Desktop.Internal.Mapping.ParcelLayer, Mapping)</summary>
			public static string ParcelLayer {
				 get { return "ParcelLayer"; }
			}
			///<summary>Returns the id string for &quot;BuildingDisciplineLayer&quot; (ArcGIS.Desktop.Internal.Mapping.BuildingDisciplineLayer, Mapping)</summary>
			public static string BuildingDisciplineLayer {
				 get { return "BuildingDisciplineLayer"; }
			}
			///<summary>Returns the id string for &quot;BuildingLayer&quot; (ArcGIS.Desktop.Internal.Mapping.BuildingLayer, Mapping)</summary>
			public static string BuildingLayer {
				 get { return "BuildingLayer"; }
			}
			///<summary>Returns the id string for &quot;PointCloudLayer&quot; (ArcGIS.Desktop.Mapping.PointCloudSceneLayer, Mapping)</summary>
			public static string PointCloudLayer {
				 get { return "PointCloudLayer"; }
			}
			///<summary>Returns the id string for &quot;VoxelLayer&quot; (ArcGIS.Desktop.Internal.Mapping.VoxelLayer, Mapping)</summary>
			public static string VoxelLayer {
				 get { return "VoxelLayer"; }
			}
			///<summary>Returns the id string for &quot;StandaloneTable&quot; (StandaloneTable, Mapping)</summary>
			public static string StandaloneTable {
				 get { return "StandaloneTable"; }
			}
			///<summary>Returns the id string for &quot;StandaloneVideo&quot; (StandaloneVideo, Mapping)</summary>
			public static string StandaloneVideo {
				 get { return "StandaloneVideo"; }
			}
			///<summary>Returns the id string for &quot;StyleContainer&quot; (ArcGIS.Desktop.Internal.Mapping.StyleContainer, Mapping)</summary>
			public static string StyleContainer {
				 get { return "StyleContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_core_multiSelectRecognizer_styleItems&quot; (StyleItemMultiselectRecognizer, Mapping)</summary>
			public static string esri_core_multiSelectRecognizer_styleItems {
				 get { return "esri_core_multiSelectRecognizer_styleItems"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_StyleProjectItem&quot; (ArcGIS.Desktop.Mapping.StyleProjectItem, Mapping)</summary>
			public static string esri_itemInfoType_StyleProjectItem {
				 get { return "esri_itemInfoType_StyleProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_StyleItemProjectItem&quot; (ArcGIS.Desktop.Internal.Mapping.StyleItemProjectItem, Mapping)</summary>
			public static string esri_itemInfoType_StyleItemProjectItem {
				 get { return "esri_itemInfoType_StyleItemProjectItem"; }
			}
			///<summary>Returns the id string for &quot;MapContainer&quot; (ArcGIS.Desktop.Internal.Mapping.MapContainer, Mapping)</summary>
			public static string MapContainer {
				 get { return "MapContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_MapProjectItem&quot; (ArcGIS.Desktop.Internal.Mapping.MapProjectItem, Mapping)</summary>
			public static string esri_itemInfoType_MapProjectItem {
				 get { return "esri_itemInfoType_MapProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_MapMembertItem&quot; (ArcGIS.Desktop.Internal.Mapping.MapMembertItem, Mapping)</summary>
			public static string esri_itemInfoType_MapMembertItem {
				 get { return "esri_itemInfoType_MapMembertItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_FileStyleProjectItem&quot; (ArcGIS.Desktop.Internal.Mapping.FileStyleProjectItem, Mapping)</summary>
			public static string esri_itemInfoType_FileStyleProjectItem {
				 get { return "esri_itemInfoType_FileStyleProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_FileStylxProjectItem&quot; (ArcGIS.Desktop.Internal.Mapping.FileStylxProjectItem, Mapping)</summary>
			public static string esri_itemInfoType_FileStylxProjectItem {
				 get { return "esri_itemInfoType_FileStylxProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_PortalStylxProjectItem&quot; (ArcGIS.Desktop.Internal.Mapping.PortalStylxProjectItem, Mapping)</summary>
			public static string esri_itemInfoType_PortalStylxProjectItem {
				 get { return "esri_itemInfoType_PortalStylxProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_cad_worldFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Mapping)</summary>
			public static string esri_browseDialogFilters_cad_worldFiles {
				 get { return "esri_browseDialogFilters_cad_worldFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_worldFiles3D&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Mapping)</summary>
			public static string esri_browseDialogFilters_worldFiles3D {
				 get { return "esri_browseDialogFilters_worldFiles3D"; }
			}
			///<summary>Returns the id string for &quot;esri_browseDialogFilters_worldFiles&quot; (ArcGIS.Desktop.Internal.Core.BrowseProjectFilter, Mapping)</summary>
			public static string esri_browseDialogFilters_worldFiles {
				 get { return "esri_browseDialogFilters_worldFiles"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_3DLightingAndShading {
				 get { return "esri_mapping_3DLightingAndShading"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_EDLEnabledCondition {
				 get { return "esri_mapping_EDLEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;Only point cloud layers are selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyPointCloudLayersSelectedCondition {
				 get { return "esri_mapping_onlyPointCloudLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Exactly one point cloud layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singlePointCloudLayerSelectedCondition {
				 get { return "esri_mapping_singlePointCloudLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Mapping)</summary>
			public static string esri_StylesContainer {
				 get { return "esri_StylesContainer"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Condition, Mapping)</summary>
			public static string esri_MappingContainer {
				 get { return "esri_MappingContainer"; }
			}
			///<summary>Returns the id string for &quot;An elevation source is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_ElevationSourceSelectedCondition {
				 get { return "esri_mapping_ElevationSourceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An elevation surface is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_ElevationSurfaceSelectedCondition {
				 get { return "esri_mapping_ElevationSurfaceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;The ground surface is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_IsGroundSurfaceSelectedCondition {
				 get { return "esri_mapping_IsGroundSurfaceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An elevation source has been copied to the clipboard&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_PasteElevationSourceSelectedCondition {
				 get { return "esri_mapping_PasteElevationSourceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An elevation surfaces has been copied to the clipboard&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_PasteElevationSurfacesSelectedCondition {
				 get { return "esri_mapping_PasteElevationSurfacesSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;No subtype value layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_SubtypeValueLayerNotSelectedCondition {
				 get { return "esri_mapping_SubtypeValueLayerNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A WFS Layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_WfsLayerSelectedCondition {
				 get { return "esri_mapping_WfsLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;No subtype value layer and feature layer using stream service is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypeValueLayerAndStreamServiceNotSelectedCondition {
				 get { return "esri_mapping_subtypeValueLayerAndStreamServiceNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A Subtype layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerSelectedCondition {
				 get { return "esri_mapping_subtypeGroupLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;All Selected Layers are Subtype layers&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlySubtypeGroupLayersSelectedCondition {
				 get { return "esri_mapping_onlySubtypeGroupLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;No subtype layer or subtype value layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerParentAndChildNotSelectedCondition {
				 get { return "esri_mapping_subtypeGroupLayerParentAndChildNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A valid group layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_inValidGroupLayerSelectedCondition {
				 get { return "esri_mapping_inValidGroupLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A project is open and Image Analyst license is available.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_openProjectAndHasIAELicCondition {
				 get { return "esri_mapping_openProjectAndHasIAELicCondition"; }
			}
			///<summary>Returns the id string for &quot;A project has a map project item&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapProjectItemCondition {
				 get { return "esri_mapping_mapProjectItemCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapPaneOrLayoutPane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapPaneOrLayoutPane {
				 get { return "esri_mapping_mapPaneOrLayoutPane"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_locateProvidersReadyToUseWithMap&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_locateProvidersReadyToUseWithMap {
				 get { return "esri_mapping_locateProvidersReadyToUseWithMap"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_locateProvidersReadyToUseNoMap&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_locateProvidersReadyToUseNoMap {
				 get { return "esri_mapping_locateProvidersReadyToUseNoMap"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layoutPane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_layoutPane {
				 get { return "esri_mapping_layoutPane"; }
			}
			///<summary>Returns the id string for &quot;A layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_layerSelectedCondition {
				 get { return "esri_mapping_layerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A single layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleLayerSelectedCondition {
				 get { return "esri_mapping_singleLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A feature layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_featureLayerSelectedCondition {
				 get { return "esri_mapping_featureLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A feature layer is selected and is versioned&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_featureLayerSelectedIsVersionedState {
				 get { return "esri_mapping_featureLayerSelectedIsVersionedState"; }
			}
			///<summary>Returns the id string for &quot;A feature layer is selected and is versionable&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_featureLayerSelectedIsVersionableState {
				 get { return "esri_mapping_featureLayerSelectedIsVersionableState"; }
			}
			///<summary>Returns the id string for &quot;A feature layer is selected and is archive enabled&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapMemberSelectedIsArchiveEnabledCondition {
				 get { return "esri_mapping_mapMemberSelectedIsArchiveEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;A feature layer is selected and its parent datasource supports GDB validation&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapMemberSelectedSupportsGdbValidationCondition {
				 get { return "esri_mapping_mapMemberSelectedSupportsGdbValidationCondition"; }
			}
			///<summary>Returns the id string for &quot;A data source is versionable and selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_dataSourceSelectedIsVersionableCondition {
				 get { return "esri_mapping_dataSourceSelectedIsVersionableCondition"; }
			}
			///<summary>Returns the id string for &quot;A data source is versionable and selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_dataSourceSelectedIsValidForChangeVersionCondition {
				 get { return "esri_mapping_dataSourceSelectedIsValidForChangeVersionCondition"; }
			}
			///<summary>Returns the id string for &quot;A data source is versionable and selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_dataSourceSelectedIsVersionableAndNotFeatureServiceCondition {
				 get { return "esri_mapping_dataSourceSelectedIsVersionableAndNotFeatureServiceCondition"; }
			}
			///<summary>Returns the id string for &quot;A data source is versionable and selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_dataSourceSelectedIsValidForChangeMomentCondition {
				 get { return "esri_mapping_dataSourceSelectedIsValidForChangeMomentCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_itemSelectedIsVersionableCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_itemSelectedIsVersionableCondition {
				 get { return "esri_mapping_itemSelectedIsVersionableCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_itemSelectedIsVersionableAndNoEditsCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_itemSelectedIsVersionableAndNoEditsCondition {
				 get { return "esri_mapping_itemSelectedIsVersionableAndNoEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_itemSelectedIsVersionableAndNoEditsAndNotBranchClientServerCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_itemSelectedIsVersionableAndNoEditsAndNotBranchClientServerCondition {
				 get { return "esri_mapping_itemSelectedIsVersionableAndNoEditsAndNotBranchClientServerCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_hasStandardLicenseAndItemSelectedIsVersionableCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_hasStandardLicenseAndItemSelectedIsVersionableCondition {
				 get { return "esri_mapping_hasStandardLicenseAndItemSelectedIsVersionableCondition"; }
			}
			///<summary>Returns the id string for &quot;A data layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_dataLayerSelectedCondition {
				 get { return "esri_mapping_dataLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;The current map is not a BaseMap&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapNotBaseMapCondition {
				 get { return "esri_mapping_mapNotBaseMapCondition"; }
			}
			///<summary>Returns the id string for &quot;A feature layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_annotationLayerSelectedCondition {
				 get { return "esri_mapping_annotationLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A network analyst layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_NALayerSelectedCondition {
				 get { return "esri_mapping_NALayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A network analyst layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_NALayerOrSublayerSelectedCondition {
				 get { return "esri_mapping_NALayerOrSublayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A utility network layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_utilityNetworkCondition {
				 get { return "esri_mapping_utilityNetworkCondition"; }
			}
			///<summary>Returns the id string for &quot;A trace network layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_traceNetworkCondition {
				 get { return "esri_mapping_traceNetworkCondition"; }
			}
			///<summary>Returns the id string for &quot;The layer elevation property page can be shown.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_showLayerElevationCondition {
				 get { return "esri_mapping_showLayerElevationCondition"; }
			}
			///<summary>Returns the id string for &quot;WMTS Service layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_WMTSServiceLayerSelectedCondition {
				 get { return "esri_mapping_WMTSServiceLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;WMS Service layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_WMSServiceLayerSelectedCondition {
				 get { return "esri_mapping_WMSServiceLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;WMS sub layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_WMSSubLayerSelectedCondition {
				 get { return "esri_mapping_WMSSubLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Feature layer using a stream service data connection is not selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_StreamServiceNotSelectedCondition {
				 get { return "esri_mapping_StreamServiceNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;No composite sublayer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_compositeSublayerNotSelectedCondition {
				 get { return "esri_mapping_compositeSublayerNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;No composite sublayer and feature layer using stream service is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_compositeSublayerAndStreamServiceNotSelectedCondition {
				 get { return "esri_mapping_compositeSublayerAndStreamServiceNotSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;ShapeField is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_isShapeFileSelectedCondition {
				 get { return "esri_mapping_isShapeFileSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Feature Class is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_isFeatureClassSelectedCondition {
				 get { return "esri_mapping_isFeatureClassSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Non feature service feature layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_isSelectedFeatureLayerValidForIndexesCondition {
				 get { return "esri_mapping_isSelectedFeatureLayerValidForIndexesCondition"; }
			}
			///<summary>Returns the id string for &quot;Non feature service table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_isSelectedTableValidForIndexesCondition {
				 get { return "esri_mapping_isSelectedTableValidForIndexesCondition"; }
			}
			///<summary>Returns the id string for &quot;The selected layers can be removed&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_canRemoveSelectedLayersCondition {
				 get { return "esri_mapping_canRemoveSelectedLayersCondition"; }
			}
			///<summary>Returns the id string for &quot;The selected layers can be copied&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_canCopySelectedLayersCondition {
				 get { return "esri_mapping_canCopySelectedLayersCondition"; }
			}
			///<summary>Returns the id string for &quot;A network diagram layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_diagramLayerSelectedCondition {
				 get { return "esri_mapping_diagramLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;The selected layers can be grouped&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_CanGroupSelectedLayersCondition {
				 get { return "esri_mapping_CanGroupSelectedLayersCondition"; }
			}
			///<summary>Returns the id string for &quot;A map or a single group layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_CanAddGroupLayerCondition {
				 get { return "esri_mapping_CanAddGroupLayerCondition"; }
			}
			///<summary>Returns the id string for &quot;A single group layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleGroupLayerSelectedCondition {
				 get { return "esri_mapping_singleGroupLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A single group layer, with children, is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_canUngroupLayerSelectedCondition {
				 get { return "esri_mapping_canUngroupLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Multiple layers are selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_multipleLayersSelectedCondition {
				 get { return "esri_mapping_multipleLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A standalone table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_standaloneTableSelectedCondition {
				 get { return "esri_mapping_standaloneTableSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;All the layers and standalone tables selected have oid&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_allOidTablesSelectedCondition {
				 get { return "esri_mapping_allOidTablesSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A single standalone table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleStandaloneTableSelectedCondition {
				 get { return "esri_mapping_singleStandaloneTableSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A standalone video is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_standaloneVideoSelectedCondition {
				 get { return "esri_mapping_standaloneVideoSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A single standalone table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleStandaloneVideoSelectedCondition {
				 get { return "esri_mapping_singleStandaloneVideoSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A single map member is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleMapMemberSelectedCondition {
				 get { return "esri_mapping_singleMapMemberSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A layer legend class is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_legendClassSelectedCondition {
				 get { return "esri_mapping_legendClassSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A map is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapSelectedCondition {
				 get { return "esri_mapping_mapSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;2D Map&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapViewingMode2DCondition {
				 get { return "esri_mapping_mapViewingMode2DCondition"; }
			}
			///<summary>Returns the id string for &quot;3D Scene&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapViewingMode3DPerspectiveCondition {
				 get { return "esri_mapping_mapViewingMode3DPerspectiveCondition"; }
			}
			///<summary>Returns the id string for &quot;3D Globe&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapViewingMode3DGlobeCondition {
				 get { return "esri_mapping_mapViewingMode3DGlobeCondition"; }
			}
			///<summary>Returns the id string for &quot;3D Scene or Globe&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_ViewingMode3DCondition {
				 get { return "esri_mapping_ViewingMode3DCondition"; }
			}
			///<summary>Returns the id string for &quot;3D Scene or Globe or Stereo&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_ViewingMode3DOrStereoCondition {
				 get { return "esri_mapping_ViewingMode3DOrStereoCondition"; }
			}
			///<summary>Returns the id string for &quot;Show the symbology pane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_SymbologyPaneVisibleCondition {
				 get { return "esri_mapping_SymbologyPaneVisibleCondition"; }
			}
			///<summary>Returns the id string for &quot;Show the labeling pane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_LabelingPaneVisibleCondition {
				 get { return "esri_mapping_LabelingPaneVisibleCondition"; }
			}
			///<summary>Returns the id string for &quot;Enable 2D-3D map converter&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_MapConvertCondition {
				 get { return "esri_mapping_MapConvertCondition"; }
			}
			///<summary>Returns the id string for &quot;Enable map-basemap converter&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_BasemapConvertCondition {
				 get { return "esri_mapping_BasemapConvertCondition"; }
			}
			///<summary>Returns the id string for &quot;Enable Basemap Gallery&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_BasemapGalleryCondition {
				 get { return "esri_mapping_BasemapGalleryCondition"; }
			}
			///<summary>Returns the id string for &quot;Enable Basemap Gallery for Preview&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_PreviewBasemapGalleryCondition {
				 get { return "esri_mapping_PreviewBasemapGalleryCondition"; }
			}
			///<summary>Returns the id string for &quot;Data source supports viewing attribute rules&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_designview_canOpenAttributeRules {
				 get { return "esri_mapping_designview_canOpenAttributeRules"; }
			}
			///<summary>Returns the id string for &quot;Fields have been modified or deleted in the fields view.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_hasEditsCondition {
				 get { return "esri_mapping_fieldsView_hasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;Data source supports adding new fields&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_canAdd {
				 get { return "esri_mapping_fieldsView_canAdd"; }
			}
			///<summary>Returns the id string for &quot;Data source supports viewing subtypes&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_canOpenSubtypes {
				 get { return "esri_mapping_fieldsView_canOpenSubtypes"; }
			}
			///<summary>Returns the id string for &quot;Data source supports adding field groups&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_canFieldGroups {
				 get { return "esri_mapping_fieldsView_canFieldGroups"; }
			}
			///<summary>Returns the id string for &quot;Data source supports viewing domains&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_canOpenDomains {
				 get { return "esri_mapping_fieldsView_canOpenDomains"; }
			}
			///<summary>Returns the id string for &quot;Data source supports viewing contingent values&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_canOpenContingentValues {
				 get { return "esri_mapping_fieldsView_canOpenContingentValues"; }
			}
			///<summary>Returns the id string for &quot;Fields are selected in the fields view for copy.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_selectedCondition {
				 get { return "esri_mapping_fieldsView_selectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Fields are selected in the fields view for paste.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_copiedCondition {
				 get { return "esri_mapping_fieldsView_copiedCondition"; }
			}
			///<summary>Returns the id string for &quot;Fields are selected in the fields view for cut.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_cutCondition {
				 get { return "esri_mapping_fieldsView_cutCondition"; }
			}
			///<summary>Returns the id string for &quot;Fields are selected in the fields view for delete.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_deleteCondition {
				 get { return "esri_mapping_fieldsView_deleteCondition"; }
			}
			///<summary>Returns the id string for &quot;Fields are selected in the fields view for Undo.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_undoCondition {
				 get { return "esri_mapping_fieldsView_undoCondition"; }
			}
			///<summary>Returns the id string for &quot;Fields are selected in the fields view for Undo.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_fieldsView_redoCondition {
				 get { return "esri_mapping_fieldsView_redoCondition"; }
			}
			///<summary>Returns the id string for &quot;The subtypes view is not read only and has at leas one integer field.&quot; (Condition, Mapping)</summary>
			public static string esri_subtypes_canManageCondition {
				 get { return "esri_subtypes_canManageCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes have been modified or deleted in the subtypes view.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_hasEditsCondition {
				 get { return "esri_mapping_subtypesView_hasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes are selected in the fields view for copy.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_selectedCondition {
				 get { return "esri_mapping_subtypesView_selectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes are selected in the fields view for paste.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_copiedCondition {
				 get { return "esri_mapping_subtypesView_copiedCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes are selected in the fields view for cut.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_cutCondition {
				 get { return "esri_mapping_subtypesView_cutCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes are selected in the fields view for delete.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_deleteCondition {
				 get { return "esri_mapping_subtypesView_deleteCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes are selected in the fields view for Undo.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_undoCondition {
				 get { return "esri_mapping_subtypesView_undoCondition"; }
			}
			///<summary>Returns the id string for &quot;Subtypes are selected in the fields view for Undo.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_subtypesView_redoCondition {
				 get { return "esri_mapping_subtypesView_redoCondition"; }
			}
			///<summary>Returns the id string for &quot;License is standard or datasource is file geodatabase and domains are editable.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_domainsView_canEditDomainsCondition {
				 get { return "esri_mapping_domainsView_canEditDomainsCondition"; }
			}
			///<summary>Returns the id string for &quot;Domains are selected in the domains view for copy.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_domainsView_selectedCondition {
				 get { return "esri_mapping_domainsView_selectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Domains are selected in the fields view for paste.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_domainsView_copiedCondition {
				 get { return "esri_mapping_domainsView_copiedCondition"; }
			}
			///<summary>Returns the id string for &quot;Domains are selected in the fields view for cut.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_domainsView_cutCondition {
				 get { return "esri_mapping_domainsView_cutCondition"; }
			}
			///<summary>Returns the id string for &quot;Domains are selected in the fields view for delete.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_domainsView_deleteCondition {
				 get { return "esri_mapping_domainsView_deleteCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportsDesignView&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportsDesignView {
				 get { return "esri_mapping_selectionSupportsDesignView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportsDesignViewSubtypes&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportsDesignViewSubtypes {
				 get { return "esri_mapping_selectionSupportsDesignViewSubtypes"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportsDesignViewDomains&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportsDesignViewDomains {
				 get { return "esri_mapping_selectionSupportsDesignViewDomains"; }
			}
			///<summary>Returns the id string for &quot;Domains have been modified or deleted in the domains view.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_domainsView_hasEditsCondition {
				 get { return "esri_mapping_domainsView_hasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportsAttributeRulesView&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportsAttributeRulesView {
				 get { return "esri_mapping_selectionSupportsAttributeRulesView"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_editable&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_editable {
				 get { return "esri_mapping_attributeRulesView_editable"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_rulesSelected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_rulesSelected {
				 get { return "esri_mapping_attributeRulesView_rulesSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_canExport&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_canExport {
				 get { return "esri_mapping_attributeRulesView_canExport"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_enabled&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_enabled {
				 get { return "esri_mapping_attributeRulesView_enabled"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_reviewer&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_reviewer {
				 get { return "esri_mapping_attributeRulesView_reviewer"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportsContingentValues&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportsContingentValues {
				 get { return "esri_mapping_selectionSupportsContingentValues"; }
			}
			///<summary>Returns the id string for &quot;Versions have been modified or deleted in the versions view&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_versionsView_hasEditsCondition {
				 get { return "esri_mapping_versionsView_hasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;Version(s) have been selected in the versions view&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_versionsView_hasSelectionCondition {
				 get { return "esri_mapping_versionsView_hasSelectionCondition"; }
			}
			///<summary>Returns the id string for &quot;License is standard&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_versionsView_canAddNewAndReconcileCondition {
				 get { return "esri_mapping_versionsView_canAddNewAndReconcileCondition"; }
			}
			///<summary>Returns the id string for &quot;License is standard&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_versionsView_canReconcileAndPostCondition {
				 get { return "esri_mapping_versionsView_canReconcileAndPostCondition"; }
			}
			///<summary>Returns the id string for &quot;Version(s) have been selected in the versions view, and the license level is standard or higher&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_versionsView_canDeleteCondition {
				 get { return "esri_mapping_versionsView_canDeleteCondition"; }
			}
			///<summary>Returns the id string for &quot;Attribute rules has valid edits&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_attributeRules_hasEditsCondition {
				 get { return "esri_mapping_attributeRules_hasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;Contingent values have valid edits&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_contingentValues_hasEditsCondition {
				 get { return "esri_mapping_contingentValues_hasEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;Retire contingent value&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_contingentValues_canRetireValuesCondition {
				 get { return "esri_mapping_contingentValues_canRetireValuesCondition"; }
			}
			///<summary>Returns the id string for &quot;Can add contingent value&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_contingentValues_canAddContingentValuesCondition {
				 get { return "esri_mapping_contingentValues_canAddContingentValuesCondition"; }
			}
			///<summary>Returns the id string for &quot;Data source supports viewing subtypes&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_contingentValuesView_canOpenSubtypesCondition {
				 get { return "esri_mapping_contingentValuesView_canOpenSubtypesCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_pane_core&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_pane_core {
				 get { return "esri_mapping_pane_core"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_stereoMapViewPane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_stereoMapViewPane {
				 get { return "esri_mapping_stereoMapViewPane"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_notStereoMapViewPane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_notStereoMapViewPane {
				 get { return "esri_mapping_notStereoMapViewPane"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapOrDesignViewPanes&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapOrDesignViewPanes {
				 get { return "esri_mapping_mapOrDesignViewPanes"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapOrDesignViewOrConflictsPanes&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapOrDesignViewOrConflictsPanes {
				 get { return "esri_mapping_mapOrDesignViewOrConflictsPanes"; }
			}
			///<summary>Returns the id string for &quot;A feature layer or a standalone table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_tocTableCondition {
				 get { return "esri_mapping_tocTableCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapOrEditViewPanes&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapOrEditViewPanes {
				 get { return "esri_mapping_mapOrEditViewPanes"; }
			}
			///<summary>Returns the id string for &quot;License is standard and versions view has edits&quot; (Condition, Mapping)</summary>
			public static string esri_license_hasStandardLicenseAndVersionsHaveEditsCondition {
				 get { return "esri_license_hasStandardLicenseAndVersionsHaveEditsCondition"; }
			}
			///<summary>Returns the id string for &quot;License is standard or datasource is file geodatabase&quot; (Condition, Mapping)</summary>
			public static string esri_license_hasStandardLicenseOrDatasourceIsFileGDBCondition {
				 get { return "esri_license_hasStandardLicenseOrDatasourceIsFileGDBCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleStreamLayerSupportTrackLinesSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleStreamLayerSupportTrackLinesSelectedCondition {
				 get { return "esri_mapping_singleStreamLayerSupportTrackLinesSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleFeatureLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleFeatureLayerSelectedCondition {
				 get { return "esri_mapping_singleFeatureLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleBasicFeatureLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleBasicFeatureLayerSelectedCondition {
				 get { return "esri_mapping_singleBasicFeatureLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleEditingEligibleLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleEditingEligibleLayerSelectedCondition {
				 get { return "esri_mapping_singleEditingEligibleLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleFeatureLayerVersionedSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleFeatureLayerVersionedSelectedCondition {
				 get { return "esri_mapping_singleFeatureLayerVersionedSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_queryDefSupportedSingleLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_queryDefSupportedSingleLayerSelectedCondition {
				 get { return "esri_mapping_queryDefSupportedSingleLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_queryDefSupportedLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_queryDefSupportedLayersSelectedCondition {
				 get { return "esri_mapping_queryDefSupportedLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportedLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportedLayersSelectedCondition {
				 get { return "esri_mapping_selectionSupportedLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_pasteLayersIntoMapCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_pasteLayersIntoMapCondition {
				 get { return "esri_mapping_pasteLayersIntoMapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_pasteLayersIntoGroupCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_pasteLayersIntoGroupCondition {
				 get { return "esri_mapping_pasteLayersIntoGroupCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_EnableSymbologyCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_EnableSymbologyCondition {
				 get { return "esri_mapping_EnableSymbologyCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_EnableDrawingCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_EnableDrawingCondition {
				 get { return "esri_mapping_EnableDrawingCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_EnableSwipeCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_EnableSwipeCondition {
				 get { return "esri_mapping_EnableSwipeCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_streamLayerSelectedCondition {
				 get { return "esri_mapping_streamLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyStreamLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyStreamLayersSelectedCondition {
				 get { return "esri_mapping_onlyStreamLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamLayerWithTrackIdSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_streamLayerWithTrackIdSelectedCondition {
				 get { return "esri_mapping_streamLayerWithTrackIdSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamLayerWithNoTrackIdSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_streamLayerWithNoTrackIdSelectedCondition {
				 get { return "esri_mapping_streamLayerWithNoTrackIdSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyFeatureLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyFeatureLayersSelectedCondition {
				 get { return "esri_mapping_onlyFeatureLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyCadLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyCadLayerSelectedCondition {
				 get { return "esri_mapping_onlyCadLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labeledLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_labeledLayerSelectedCondition {
				 get { return "esri_mapping_labeledLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleLabelClassSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleLabelClassSelectedCondition {
				 get { return "esri_mapping_singleLabelClassSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_FeatureLayerIn2DMapCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_FeatureLayerIn2DMapCondition {
				 get { return "esri_mapping_FeatureLayerIn2DMapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labeledLayer2DCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_labeledLayer2DCondition {
				 get { return "esri_mapping_labeledLayer2DCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyAnnotationLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyAnnotationLayersSelectedCondition {
				 get { return "esri_mapping_onlyAnnotationLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyAnnotationSubLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyAnnotationSubLayersSelectedCondition {
				 get { return "esri_mapping_onlyAnnotationSubLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyDimensionLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyDimensionLayersSelectedCondition {
				 get { return "esri_mapping_onlyDimensionLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_only3DFeatureLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_only3DFeatureLayersSelectedCondition {
				 get { return "esri_mapping_only3DFeatureLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_only2DFeatureLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_only2DFeatureLayersSelectedCondition {
				 get { return "esri_mapping_only2DFeatureLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyFeatureLayersSelectedOn3DViewCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyFeatureLayersSelectedOn3DViewCondition {
				 get { return "esri_mapping_onlyFeatureLayersSelectedOn3DViewCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_FaceCullingCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_FaceCullingCondition {
				 get { return "esri_mapping_FaceCullingCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_LightingCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_LightingCondition {
				 get { return "esri_mapping_LightingCondition"; }
			}
			///<summary>Returns the id string for &quot;Only standalone tables or feature layers selected.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyTableLayersSelectedCondition {
				 get { return "esri_mapping_onlyTableLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerExtrusionCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_layerExtrusionCondition {
				 get { return "esri_mapping_layerExtrusionCondition"; }
			}
			///<summary>Returns the id string for &quot;Selected feature layer uses a netcdf data source&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_netcdfStandardDataSourceSelectedCondition {
				 get { return "esri_mapping_netcdfStandardDataSourceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Selected raster layer uses a netcdf or multidimensional raster data source&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_netcdfOrMdimRasterDataSourceSelectedCondition {
				 get { return "esri_mapping_netcdfOrMdimRasterDataSourceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyImageServiceLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyImageServiceLayersSelectedCondition {
				 get { return "esri_mapping_onlyImageServiceLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An image service layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerSelectedCondition {
				 get { return "esri_mapping_imageServiceLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An image service layer or a mosaic layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_imageServiceAndMosaicLayerSelectedCondition {
				 get { return "esri_mapping_imageServiceAndMosaicLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An image service layer with table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerWithTableSelectedCondition {
				 get { return "esri_mapping_imageServiceLayerWithTableSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;An image service layer with table is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_dynamicImageServiceLayerWithTableSelectedCondition {
				 get { return "esri_mapping_dynamicImageServiceLayerWithTableSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleMdimISLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleMdimISLayerSelectedCondition {
				 get { return "esri_mapping_singleMdimISLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyMosaicLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyMosaicLayersSelectedCondition {
				 get { return "esri_mapping_onlyMosaicLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleMdimMosaicLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleMdimMosaicLayerSelectedCondition {
				 get { return "esri_mapping_singleMdimMosaicLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyMosaicImageSubLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyMosaicImageSubLayersSelectedCondition {
				 get { return "esri_mapping_onlyMosaicImageSubLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A mosaic image sub layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mosaicImageSubLayerSelectedCondition {
				 get { return "esri_mapping_mosaicImageSubLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleMdimMosaicImgSubLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleMdimMosaicImgSubLayerSelectedCondition {
				 get { return "esri_mapping_singleMdimMosaicImgSubLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A raster layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_allRasterLayersSelectedCondition {
				 get { return "esri_mapping_allRasterLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyRasterLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyRasterLayersSelectedCondition {
				 get { return "esri_mapping_onlyRasterLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;Show the symbology pane&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_RasterSymbologyPaneVisibleCondition {
				 get { return "esri_mapping_RasterSymbologyPaneVisibleCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_RasterHasSensorModelCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_RasterHasSensorModelCondition {
				 get { return "esri_mapping_RasterHasSensorModelCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_imageServiceLayerDownloadEnabledCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerDownloadEnabledCondition {
				 get { return "esri_mapping_imageServiceLayerDownloadEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerStretchTypeApplicableCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_rasterLayerStretchTypeApplicableCondition {
				 get { return "esri_mapping_rasterLayerStretchTypeApplicableCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerBandCombinationApplicableCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_rasterLayerBandCombinationApplicableCondition {
				 get { return "esri_mapping_rasterLayerBandCombinationApplicableCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleMdimRasterLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleMdimRasterLayerSelectedCondition {
				 get { return "esri_mapping_singleMdimRasterLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mixedLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mixedLayersSelectedCondition {
				 get { return "esri_mapping_mixedLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_kmlLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_kmlLayersSelectedCondition {
				 get { return "esri_mapping_kmlLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_vectorTileLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_vectorTileLayersSelectedCondition {
				 get { return "esri_mapping_vectorTileLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_LayersWithSymbologySelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_LayersWithSymbologySelectedCondition {
				 get { return "esri_mapping_LayersWithSymbologySelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_versionManager_canDeleteVersion&quot; (Condition, Mapping)</summary>
			public static string esri_versionManager_canDeleteVersion {
				 get { return "esri_versionManager_canDeleteVersion"; }
			}
			///<summary>Returns the id string for &quot;The active map view has selected features.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_activeMapView_hasFeatureSelectionCondition {
				 get { return "esri_mapping_activeMapView_hasFeatureSelectionCondition"; }
			}
			///<summary>Returns the id string for &quot;The active map view has time enabled.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_timeEnabledCondition {
				 get { return "esri_mapping_timeEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;The active map view has range enabled.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_rangeEnabledCondition {
				 get { return "esri_mapping_rangeEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;The active map view has animation enabled.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_animationEnabledCondition {
				 get { return "esri_mapping_animationEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;The user is signed in to the AGOL portal.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_infographic_signedIn_condition {
				 get { return "esri_mapping_infographic_signedIn_condition"; }
			}
			///<summary>Returns the id string for &quot;Selected raster layer uses a query data source&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_queryDataSourceSelectedCondition {
				 get { return "esri_mapping_queryDataSourceSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_buildingSceneLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayersSelectedCondition {
				 get { return "esri_mapping_buildingSceneLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labeledSceneLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_labeledSceneLayerSelectedCondition {
				 get { return "esri_mapping_labeledSceneLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectionSupportedSceneLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_selectionSupportedSceneLayersSelectedCondition {
				 get { return "esri_mapping_selectionSupportedSceneLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sceneLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_sceneLayerSelectedCondition {
				 get { return "esri_mapping_sceneLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_only3DObjectLayersOr3DPointLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_only3DObjectLayersOr3DPointLayersSelectedCondition {
				 get { return "esri_mapping_only3DObjectLayersOr3DPointLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyIntegratedMeshLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyIntegratedMeshLayersSelectedCondition {
				 get { return "esri_mapping_onlyIntegratedMeshLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelLayersSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_voxelLayersSelectedCondition {
				 get { return "esri_mapping_voxelLayersSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleVoxelLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleVoxelLayerSelectedCondition {
				 get { return "esri_mapping_singleVoxelLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapHasAtLeastOneSyncEnabledLayerCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapHasAtLeastOneSyncEnabledLayerCondition {
				 get { return "esri_mapping_mapHasAtLeastOneSyncEnabledLayerCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapHasAtLeastOneSyncableLayerCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_mapHasAtLeastOneSyncableLayerCondition {
				 get { return "esri_mapping_mapHasAtLeastOneSyncableLayerCondition"; }
			}
			///<summary>Returns the id string for &quot;Selected Layer is not a Subtype layer and not a StreamLayer.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_JoinsAndRelatesEnabledCondition {
				 get { return "esri_mapping_JoinsAndRelatesEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;Selected map has an active georeferencing edit session.&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_SceneGeoreferenceCondition {
				 get { return "esri_mapping_SceneGeoreferenceCondition"; }
			}
			///<summary>Returns the id string for &quot;Map Pane View is a 3D map&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_SceneMapCondition {
				 get { return "esri_mapping_SceneMapCondition"; }
			}
			///<summary>Returns the id string for &quot;Map Pane View is a 2D map&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_MapCondition {
				 get { return "esri_mapping_MapCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyBimLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyBimLayerSelectedCondition {
				 get { return "esri_mapping_onlyBimLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_onlyBimCompositeLayerSelectedCondition&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_onlyBimCompositeLayerSelectedCondition {
				 get { return "esri_mapping_onlyBimCompositeLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;A single binning layer is selected&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_singleBinningLayerSelectedCondition {
				 get { return "esri_mapping_singleBinningLayerSelectedCondition"; }
			}
			///<summary>Returns the id string for &quot;MapHasBookmarks&quot; (Condition, Mapping)</summary>
			public static string esri_mapping_activeMapHasBookmarksCondition {
				 get { return "esri_mapping_activeMapHasBookmarksCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Mapping&quot; (MappingModule, Mapping)</summary>
			public static string esri_mapping {
				 get { return "esri_mapping"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Map and Scene&quot; (MapSceneDefaultsViewModel, Mapping)</summary>
			public static string esri_mapping_mapSceneDefaultsPage {
				 get { return "esri_mapping_mapSceneDefaultsPage"; }
			}
			///<summary>Returns the id string for &quot;Navigation&quot; (NavigationOptionsViewModel, Mapping)</summary>
			public static string esri_mapping_navigationPropertyPage {
				 get { return "esri_mapping_navigationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (SelectionSettingsViewModel, Mapping)</summary>
			public static string esri_mapping_selectionPropertyPage {
				 get { return "esri_mapping_selectionPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (DisplayOptionsViewModel, Mapping)</summary>
			public static string esri_mapping_applicationDisplayPropertyPage {
				 get { return "esri_mapping_applicationDisplayPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Color Management&quot; (ColorManagementOptionsViewModel, Mapping)</summary>
			public static string esri_mapping_applicatioColorManagementPropertyPage {
				 get { return "esri_mapping_applicatioColorManagementPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;CAD&quot; (ArcGIS.Desktop.Internal.Mapping.Cad.CadOptionsViewModel, Mapping)</summary>
			public static string esri_mapping_CadOptionsPropertyPage {
				 get { return "esri_mapping_CadOptionsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Units&quot; (UnitSettingsViewModel, Mapping)</summary>
			public static string esri_mapping_unitsPropertyPage {
				 get { return "esri_mapping_unitsPropertyPage"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Point Cloud Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerPropertySheet {
				 get { return "esri_mapping_pointCloudLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Binning Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_binningLayerPropertySheet {
				 get { return "esri_mapping_binningLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Feature Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_featureLayerPropertySheet {
				 get { return "esri_mapping_featureLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Feature Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiFeatureLayerPropertySheet {
				 get { return "esri_mapping_multiFeatureLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_locatorPropertySheet {
				 get { return "esri_mapping_locatorPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_locatorCompositePropertySheet {
				 get { return "esri_mapping_locatorCompositePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Locator Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_locatorEaglePropertySheet {
				 get { return "esri_mapping_locatorEaglePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_layerPropertySheet {
				 get { return "esri_mapping_layerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerPropertySheet {
				 get { return "esri_mapping_subtypeGroupLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_dynamicServiceLayerPropertySheet {
				 get { return "esri_mapping_dynamicServiceLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_tiledServiceLayerPropertySheet {
				 get { return "esri_mapping_tiledServiceLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_simpleLayerPropertySheet {
				 get { return "esri_mapping_simpleLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiLayerPropertySheet {
				 get { return "esri_mapping_multiLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_kmlLayerPropertySheet {
				 get { return "esri_mapping_kmlLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_vectorTileLayerPropertySheet {
				 get { return "esri_mapping_vectorTileLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Standalone Table Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_standaloneTablePropertySheet {
				 get { return "esri_mapping_standaloneTablePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Standalone Table Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiStandaloneTablePropertySheet {
				 get { return "esri_mapping_multiStandaloneTablePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Standalone Video Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_standaloneVideoPropertySheet {
				 get { return "esri_mapping_standaloneVideoPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Standalone Video Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiStandvideoVideoPropertySheet {
				 get { return "esri_mapping_multiStandvideoVideoPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Map Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_mapPropertySheet {
				 get { return "esri_mapping_mapPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Multiple Map Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiMapPropertySheet {
				 get { return "esri_mapping_multiMapPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Group Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_groupLayerPropertySheet {
				 get { return "esri_mapping_groupLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Network Analysis Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_naLayerPropertySheet {
				 get { return "esri_mapping_naLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Network Dataset Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_ndsLayerPropertySheet {
				 get { return "esri_mapping_ndsLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Utility Network Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_utilityNetworkLayerPropertySheet {
				 get { return "esri_mapping_utilityNetworkLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Trace Network Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_traceNetworkLayerPropertySheet {
				 get { return "esri_mapping_traceNetworkLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Network Diagram Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_networkDiagramLayerPropertySheet {
				 get { return "esri_mapping_networkDiagramLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Mosaic Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_mosaicLayerPropertySheet {
				 get { return "esri_mapping_mosaicLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Feature Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_featureMosaicSubLayerPropertySheet {
				 get { return "esri_mapping_featureMosaicSubLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Image Service Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_imageMosaicSubLayerPropertySheet {
				 get { return "esri_mapping_imageMosaicSubLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Raster Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_rasterLayerPropertySheet {
				 get { return "esri_mapping_rasterLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Image Service Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerPropertySheet {
				 get { return "esri_mapping_imageServiceLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Scale Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_scaleSettingsPropertySheet {
				 get { return "esri_mapping_scaleSettingsPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Scale Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_heightSettingsPropertySheet {
				 get { return "esri_mapping_heightSettingsPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayerPropertySheet {
				 get { return "esri_mapping_buildingSceneLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_buildingDisciplineSceneLayerPropertySheet {
				 get { return "esri_mapping_buildingDisciplineSceneLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_sceneServicelayerPropertySheet {
				 get { return "esri_mapping_sceneServicelayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_integratedMeshSceneServicelayerPropertySheet {
				 get { return "esri_mapping_integratedMeshSceneServicelayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_voxelLayerPropertySheet {
				 get { return "esri_mapping_voxelLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Elevation Source Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_elevationSourcePropertySheet {
				 get { return "esri_mapping_elevationSourcePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Elevation Source Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiElevationSourcePropertySheet {
				 get { return "esri_mapping_multiElevationSourcePropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Annotation SubLayer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_annotationSubLayerPropertySheet {
				 get { return "esri_mapping_annotationSubLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Multiple Annotation Sublayer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_multiAnnotationSubLayerPropertySheet {
				 get { return "esri_mapping_multiAnnotationSubLayerPropertySheet"; }
			}
			///<summary>Returns the id string for &quot;Parcel Fabric Layer Properties&quot; (Sheet, Mapping)</summary>
			public static string esri_mapping_parcelLayerPropertySheet {
				 get { return "esri_mapping_parcelLayerPropertySheet"; }
			}
		}
		public static partial class Wizard {
			///<summary>Returns the id string for &quot;Create Scene Layer Package&quot; (Wizard, Mapping)</summary>
			public static string esri_mapping_createSceneLayerPackage_Wizard {
				 get { return "esri_mapping_createSceneLayerPackage_Wizard"; }
			}
		}
		public static partial class Labelcontrol {
			///<summary>Returns the id string for &quot; &quot; (Labelcontrol, Mapping)</summary>
			public static string esri_emptyLabel2 {
				 get { return "esri_emptyLabel2"; }
			}
			///<summary>Returns the id string for &quot;Class &quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_labelClassNameLabel {
				 get { return "esri_mapping_labelClassNameLabel"; }
			}
			///<summary>Returns the id string for &quot;Field &quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_labelClassFieldLabel {
				 get { return "esri_mapping_labelClassFieldLabel"; }
			}
			///<summary>Returns the id string for &quot;Name:&quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_rangeNameLabel {
				 get { return "esri_mapping_rangeNameLabel"; }
			}
			///<summary>Returns the id string for &quot;Alias:&quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_rangeAliasLayerSourceLabel {
				 get { return "esri_mapping_rangeAliasLayerSourceLabel"; }
			}
			///<summary>Returns the id string for &quot;Size&quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_layerSymbolSizeLabel {
				 get { return "esri_mapping_layerSymbolSizeLabel"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_emptyLabel {
				 get { return "esri_mapping_emptyLabel"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_emptyLabel2 {
				 get { return "esri_mapping_emptyLabel2"; }
			}
			///<summary>Returns the id string for &quot;Variable &quot; (Labelcontrol, Mapping)</summary>
			public static string esri_mapping_voxelLayerVariableLabel {
				 get { return "esri_mapping_voxelLayerVariableLabel"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Add To New&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_addDataMenu {
				 get { return "esri_mapping_addDataMenu"; }
			}
			///<summary>Returns the id string for &quot;Convert&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_map2DConvertMenu {
				 get { return "esri_mapping_map2DConvertMenu"; }
			}
			///<summary>Returns the id string for &quot;Convert&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_map3DConvertMenu {
				 get { return "esri_mapping_map3DConvertMenu"; }
			}
			///<summary>Returns the id string for &quot;Convert&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mapStereoConvertMenu {
				 get { return "esri_mapping_mapStereoConvertMenu"; }
			}
			///<summary>Returns the id string for &quot;Convert&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_basemapConvertMenu {
				 get { return "esri_mapping_basemapConvertMenu"; }
			}
			///<summary>Returns the id string for &quot;Add&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_addStyleMenu {
				 get { return "esri_mapping_addStyleMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_newStyleMenu {
				 get { return "esri_mapping_newStyleMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_styleContainerContextMenu {
				 get { return "esri_mapping_styleContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Import&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_importStyleMenu {
				 get { return "esri_mapping_importStyleMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_StyleContextMenu {
				 get { return "esri_mapping_StyleContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Item&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_StyleItemContextMenu {
				 get { return "esri_mapping_StyleItemContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Item&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_StyleItemProjectItemContextMenu {
				 get { return "esri_mapping_StyleItemProjectItemContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_StyleContentContextMenu {
				 get { return "esri_mapping_StyleContentContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_FileStyleContextMenu {
				 get { return "esri_mapping_FileStyleContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_FileStylxContextMenu {
				 get { return "esri_mapping_FileStylxContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_PortalStylxContextMenu {
				 get { return "esri_mapping_PortalStylxContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mapContainerContextMenu {
				 get { return "esri_mapping_mapContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Link Views&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_syncViewExtentMenu {
				 get { return "esri_mapping_syncViewExtentMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_map3DContextMenu {
				 get { return "esri_mapping_map3DContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_map2DContextMenu {
				 get { return "esri_mapping_map2DContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_stereoMapContextMenu {
				 get { return "esri_mapping_stereoMapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_basemapContextMenu {
				 get { return "esri_mapping_basemapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_networkDiagramContextMenu {
				 get { return "esri_mapping_networkDiagramContextMenu"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_containmentMapContextMenu {
				 get { return "esri_mapping_containmentMapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;More&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_labelingOptionsMenu {
				 get { return "esri_mapping_labelingOptionsMenu"; }
			}
			///<summary>Returns the id string for &quot;Labeling&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_labelingOptionsSubMenu {
				 get { return "esri_mapping_labelingOptionsSubMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_tocContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_tocContextMenu {
				 get { return "esri_mapping_tocContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mapContextMenu {
				 get { return "esri_mapping_mapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_3d_mapContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_3d_mapContextMenu {
				 get { return "esri_mapping_3d_mapContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_2DCategoryContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_2DCategoryContextMenu {
				 get { return "esri_mapping_2DCategoryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_3DCategoryContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_3DCategoryContextMenu {
				 get { return "esri_mapping_3DCategoryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ElevationSurfaceCategoryContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_ElevationSurfaceCategoryContextMenu {
				 get { return "esri_mapping_ElevationSurfaceCategoryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ElevationSurfaceContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_ElevationSurfaceContextMenu {
				 get { return "esri_mapping_ElevationSurfaceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ElevationSourceContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_ElevationSourceContextMenu {
				 get { return "esri_mapping_ElevationSourceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_binningLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_binningLayerContextMenu {
				 get { return "esri_mapping_binningLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_layerContextMenu {
				 get { return "esri_mapping_layerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypeGroupLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerContextMenu {
				 get { return "esri_mapping_subtypeGroupLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypeValueLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_subtypeValueLayerContextMenu {
				 get { return "esri_mapping_subtypeValueLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_buildingSceneLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayerContextMenu {
				 get { return "esri_mapping_buildingSceneLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_buildingDisciplineSceneLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_buildingDisciplineSceneLayerContextMenu {
				 get { return "esri_mapping_buildingDisciplineSceneLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelLayerContextMenu {
				 get { return "esri_mapping_voxelLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelIsosurfacesContainerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelIsosurfacesContainerContextMenu {
				 get { return "esri_mapping_voxelIsosurfacesContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelIsosurfaceGroupContainerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelIsosurfaceGroupContainerContextMenu {
				 get { return "esri_mapping_voxelIsosurfaceGroupContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelIsosurfaceContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelIsosurfaceContextMenu {
				 get { return "esri_mapping_voxelIsosurfaceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelStandardSliceContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelStandardSliceContextMenu {
				 get { return "esri_mapping_voxelStandardSliceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelSlicesContainerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelSlicesContainerContextMenu {
				 get { return "esri_mapping_voxelSlicesContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelSectionContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelSectionContextMenu {
				 get { return "esri_mapping_voxelSectionContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelSectionsContainerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_voxelSectionsContainerContextMenu {
				 get { return "esri_mapping_voxelSectionsContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_scenelayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_scenelayerContextMenu {
				 get { return "esri_mapping_scenelayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_integratedMeshContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_integratedMeshContextMenu {
				 get { return "esri_mapping_integratedMeshContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_groupLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_groupLayerContextMenu {
				 get { return "esri_mapping_groupLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_kmlLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_kmlLayerContextMenu {
				 get { return "esri_mapping_kmlLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_vectorTilesLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_vectorTilesLayerContextMenu {
				 get { return "esri_mapping_vectorTilesLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_kmlFeatureContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_kmlFeatureContextMenu {
				 get { return "esri_mapping_kmlFeatureContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_kmlNonGeographicFeatureContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_kmlNonGeographicFeatureContextMenu {
				 get { return "esri_mapping_kmlNonGeographicFeatureContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_serviceLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_serviceLayerContextMenu {
				 get { return "esri_mapping_serviceLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_naLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_naLayerContextMenu {
				 get { return "esri_mapping_naLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_networkDatasetLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_networkDatasetLayerContextMenu {
				 get { return "esri_mapping_networkDatasetLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_utilityNetworkLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_utilityNetworkLayerContextMenu {
				 get { return "esri_mapping_utilityNetworkLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_traceNetworkLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_traceNetworkLayerContextMenu {
				 get { return "esri_mapping_traceNetworkLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_networkDiagramLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_networkDiagramLayerContextMenu {
				 get { return "esri_mapping_networkDiagramLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_tinLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_tinLayerContextMenu {
				 get { return "esri_mapping_tinLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_lasDatasetLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_lasDatasetLayerContextMenu {
				 get { return "esri_mapping_lasDatasetLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_terrainLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_terrainLayerContextMenu {
				 get { return "esri_mapping_terrainLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_pointCloudLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerContextMenu {
				 get { return "esri_mapping_pointCloudLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_standaloneTableContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_standaloneTableContextMenu {
				 get { return "esri_mapping_standaloneTableContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_standaloneVideoContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_standaloneVideoContextMenu {
				 get { return "esri_mapping_standaloneVideoContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_standaloneVideosCategoryContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_standaloneVideosCategoryContextMenu {
				 get { return "esri_mapping_standaloneVideosCategoryContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Data Source&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_dataSourceContextMenu {
				 get { return "esri_mapping_dataSourceContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_tocFilterMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_tocFilterMenu {
				 get { return "esri_mapping_tocFilterMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_locatorFilterMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_locatorFilterMenu {
				 get { return "esri_mapping_locatorFilterMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_rasterLayerContextMenu {
				 get { return "esri_mapping_rasterLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_imageServiceLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerContextMenu {
				 get { return "esri_mapping_imageServiceLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mosaicLayerContextMenu {
				 get { return "esri_mapping_mosaicLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicFootprintSubLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mosaicFootprintSubLayerContextMenu {
				 get { return "esri_mapping_mosaicFootprintSubLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicBoundarySubLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mosaicBoundarySubLayerContextMenu {
				 get { return "esri_mapping_mosaicBoundarySubLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicSeamlineSubLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mosaicSeamlineSubLayerContextMenu {
				 get { return "esri_mapping_mosaicSeamlineSubLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicImageSubLayerContextMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_mosaicImageSubLayerContextMenu {
				 get { return "esri_mapping_mosaicImageSubLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_rasterSelectionSubMenu {
				 get { return "esri_mapping_rasterSelectionSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Depth Priority&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_layerDepthPrioritySubMenu {
				 get { return "esri_mapping_layerDepthPrioritySubMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_selectionSubMenu {
				 get { return "esri_mapping_selectionSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_standaloneTable_selectionSubMenu {
				 get { return "esri_mapping_standaloneTable_selectionSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_sceneLayer_selectionSubMenu {
				 get { return "esri_mapping_sceneLayer_selectionSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_integratedMeshsceneLayer_selectionSubMenu {
				 get { return "esri_mapping_integratedMeshsceneLayer_selectionSubMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_selection2DContextMenu {
				 get { return "esri_mapping_selection2DContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_selection3DContextMenu {
				 get { return "esri_mapping_selection3DContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_popupToolContextMenu {
				 get { return "esri_mapping_popupToolContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Convert Coordinates&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_ConvertCoordinatesMenu {
				 get { return "esri_mapping_ConvertCoordinatesMenu"; }
			}
			///<summary>Returns the id string for &quot;Band Combinations&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_bandCombinationMenu {
				 get { return "esri_mapping_bandCombinationMenu"; }
			}
			///<summary>Returns the id string for &quot;Design&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_designViewMenu {
				 get { return "esri_mapping_designViewMenu"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labelClassMenu&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_labelClassMenu {
				 get { return "esri_mapping_labelClassMenu"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_labelClassPasteMenu {
				 get { return "esri_mapping_labelClassPasteMenu"; }
			}
			///<summary>Returns the id string for &quot;Annotation sublayer properties&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_annotationSubLayerContextMenu {
				 get { return "esri_mapping_annotationSubLayerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Locate Candidate&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_locatecandidate_menu {
				 get { return "esri_mapping_locatecandidate_menu"; }
			}
			///<summary>Returns the id string for &quot;Locate Candidate&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_layercandidate_menu {
				 get { return "esri_mapping_layercandidate_menu"; }
			}
			///<summary>Returns the id string for &quot;Locate Multiselect Candidate&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_locatecandidate_multiselection_menu {
				 get { return "esri_mapping_locatecandidate_multiselection_menu"; }
			}
			///<summary>Returns the id string for &quot;Layer Multiselect Candidate&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_layercandidate_multiselection_menu {
				 get { return "esri_mapping_layercandidate_multiselection_menu"; }
			}
			///<summary>Returns the id string for &quot;Geocode Table&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_geocodetable_menu {
				 get { return "esri_mapping_geocodetable_menu"; }
			}
			///<summary>Returns the id string for &quot;Line of Sight&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratoryLOSMenu {
				 get { return "esri_mapping_exploratoryLOSMenu"; }
			}
			///<summary>Returns the id string for &quot;View Dome&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratoryViewDomeMenu {
				 get { return "esri_mapping_exploratoryViewDomeMenu"; }
			}
			///<summary>Returns the id string for &quot;Viewshed&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratoryViewshedMenu {
				 get { return "esri_mapping_exploratoryViewshedMenu"; }
			}
			///<summary>Returns the id string for &quot;Slice&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratorySliceRectMenu {
				 get { return "esri_mapping_exploratorySliceRectMenu"; }
			}
			///<summary>Returns the id string for &quot;Slice&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratorySliceBoxMenu {
				 get { return "esri_mapping_exploratorySliceBoxMenu"; }
			}
			///<summary>Returns the id string for &quot;Slice&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratorySliceCylinderMenu {
				 get { return "esri_mapping_exploratorySliceCylinderMenu"; }
			}
			///<summary>Returns the id string for &quot;Slice&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratorySliceSphereMenu {
				 get { return "esri_mapping_exploratorySliceSphereMenu"; }
			}
			///<summary>Returns the id string for &quot;Cut and Fill&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_exploratoryCutFillMenu {
				 get { return "esri_mapping_exploratoryCutFillMenu"; }
			}
			///<summary>Returns the id string for &quot;&quot; (Menu, Mapping)</summary>
			public static string esri_mapping_locate_layerSearchOptionsMenu {
				 get { return "esri_mapping_locate_layerSearchOptionsMenu"; }
			}
		}
		public static partial class Minitoolbar {
			///<summary>Returns the id string for &quot;esri_mapping_slicePlaneToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_slicePlaneToolbar {
				 get { return "esri_mapping_slicePlaneToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sliceBoxToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_sliceBoxToolbar {
				 get { return "esri_mapping_sliceBoxToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sliceCylinderToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_sliceCylinderToolbar {
				 get { return "esri_mapping_sliceCylinderToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sliceSphereToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_sliceSphereToolbar {
				 get { return "esri_mapping_sliceSphereToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_profileCreatingToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_profileCreatingToolbar {
				 get { return "esri_mapping_profileCreatingToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_profileViewingToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_profileViewingToolbar {
				 get { return "esri_mapping_profileViewingToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_cutFillPolygonToolbar&quot; (Minitoolbar, Mapping)</summary>
			public static string esri_mapping_cutFillPolygonToolbar {
				 get { return "esri_mapping_cutFillPolygonToolbar"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Data Setup&quot; (ArcGIS.Desktop.Internal.Mapping.Wizards.CreateSceneLayerPackage.Pages.DataSetupViewModel, Mapping)</summary>
			public static string esri_mappping_createSLPKDataSetupPage {
				 get { return "esri_mappping_createSLPKDataSetupPage"; }
			}
			///<summary>Returns the id string for &quot;&quot; (ArcGIS.Desktop.Internal.Mapping.Wizards.CreateSceneLayerPackage.Pages.GPToolViewModel, Mapping)</summary>
			public static string esri_mapping_createSLPKGPToolPage {
				 get { return "esri_mapping_createSLPKGPToolPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerGeneralPropertyPage {
				 get { return "esri_mapping_pointCloudLayerGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.SourceViewModel, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerSourcePropertyPage {
				 get { return "esri_mapping_pointCloudLayerSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Elevation&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ElevationViewModel, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerElevationPropertyPage {
				 get { return "esri_mapping_pointCloudLayerElevationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Cache&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.CacheViewModel, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerCachePropertyPage {
				 get { return "esri_mapping_pointCloudLayerCachePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Point Cloud Layer Filter&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.PointCloud.PointCloudLayerFilterViewModel, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerFilterPropertyPage {
				 get { return "esri_mapping_pointCloudLayerFilterPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Summary Statistics&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.BinningLayerSummaryStatsViewModel, Mapping)</summary>
			public static string esri_mapping_binningSummaryStatisticsPage {
				 get { return "esri_mapping_binningSummaryStatisticsPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalLayerPropertyPage {
				 get { return "esri_mapping_generalLayerPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Metadata&quot; (ArcGIS.Desktop.Internal.Mapping.CommonControls.DescriptionViewModel, Mapping)</summary>
			public static string esri_mapping_descriptionPropertyPage {
				 get { return "esri_mapping_descriptionPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.SourceViewModel, Mapping)</summary>
			public static string esri_mapping_layerSourcePropertyPage {
				 get { return "esri_mapping_layerSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Elevation&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ElevationViewModel, Mapping)</summary>
			public static string esri_mapping_layerElevationPropertyPage {
				 get { return "esri_mapping_layerElevationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.SelectionViewModel, Mapping)</summary>
			public static string esri_mapping_layerSelectionPropertyPage {
				 get { return "esri_mapping_layerSelectionPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.DisplayViewModel, Mapping)</summary>
			public static string esri_mapping_layerDisplayPropertyPage {
				 get { return "esri_mapping_layerDisplayPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Cache&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.CacheViewModel, Mapping)</summary>
			public static string esri_mapping_layerCachePropertyPage {
				 get { return "esri_mapping_layerCachePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Definition Query&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.DefinitionQueryViewModel, Mapping)</summary>
			public static string esri_mapping_layerDefintionQueryPage {
				 get { return "esri_mapping_layerDefintionQueryPage"; }
			}
			///<summary>Returns the id string for &quot;Time&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.TimeViewModel, Mapping)</summary>
			public static string esri_mapping_layerTimePage {
				 get { return "esri_mapping_layerTimePage"; }
			}
			///<summary>Returns the id string for &quot;Range&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.RangeViewModel, Mapping)</summary>
			public static string esri_mapping_layerRangePage {
				 get { return "esri_mapping_layerRangePage"; }
			}
			///<summary>Returns the id string for &quot;Indexes&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.IndexPropertyPageViewModel, Mapping)</summary>
			public static string esri_mapping_layerIndexesPropertyPage {
				 get { return "esri_mapping_layerIndexesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Joins&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.JoinsViewModel, Mapping)</summary>
			public static string esri_mapping_joinsPropertyPage {
				 get { return "esri_mapping_joinsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Relates&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.RelatesViewModel, Mapping)</summary>
			public static string esri_mapping_relatesPropertyPage {
				 get { return "esri_mapping_relatesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Query Parameters&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.QueryParametersViewModel, Mapping)</summary>
			public static string esri_mapping_queryParametersPropertyPage {
				 get { return "esri_mapping_queryParametersPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;WFS&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.WfsParametersViewModel, Mapping)</summary>
			public static string esri_mapping_wfsPropertyPage {
				 get { return "esri_mapping_wfsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;About the locator&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_LocatorGeneralPropertyPage {
				 get { return "esri_mapping_LocatorGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Reference data tables&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorReferenceDataTablesViewModel, Mapping)</summary>
			public static string esri_mapping_locatorReferenceDataTablesPropertyPage {
				 get { return "esri_mapping_locatorReferenceDataTablesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Place name alias table&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorPlaceNameAliasTableViewModel, Mapping)</summary>
			public static string esri_mapping_locatorPlaceNameAliasTablePropertyPage {
				 get { return "esri_mapping_locatorPlaceNameAliasTablePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Input fields&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorInputAddressFieldsViewModel, Mapping)</summary>
			public static string esri_mapping_locatorInputAddressFieldsPropertyPage {
				 get { return "esri_mapping_locatorInputAddressFieldsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Outputs&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorOutputsViewModel, Mapping)</summary>
			public static string esri_mapping_locatorOutputsPropertyPage {
				 get { return "esri_mapping_locatorOutputsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Geocoding options&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorGeocodingOptionsViewModel, Mapping)</summary>
			public static string esri_mapping_locatorGeocodingOptionsPropertyPage {
				 get { return "esri_mapping_locatorGeocodingOptionsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Performance&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorPerformanceViewModel, Mapping)</summary>
			public static string esri_mapping_locatorPerformancePropertyPage {
				 get { return "esri_mapping_locatorPerformancePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;About the locator&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.CompositeLocatorGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_CompositeLocatorGeneralPropertyPage {
				 get { return "esri_mapping_CompositeLocatorGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Input fields&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.CompositeLocatorInputAddressFieldsViewModel, Mapping)</summary>
			public static string esri_mapping_CompositeLocatorInputAddressFieldsPropertyPage {
				 get { return "esri_mapping_CompositeLocatorInputAddressFieldsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Participating locators&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.CompositeLocatorInputMappingViewModel, Mapping)</summary>
			public static string esri_mapping_CompositeLocatorInputMappingPropertyPage {
				 get { return "esri_mapping_CompositeLocatorInputMappingPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Outputs&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.CompositeLocatorOutputsViewModel, Mapping)</summary>
			public static string esri_mapping_CompositeLocatorOutputsPropertyPage {
				 get { return "esri_mapping_CompositeLocatorOutputsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Performance&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.CompositeLocatorPerformanceViewModel, Mapping)</summary>
			public static string esri_mapping_CompositeLocatorPerformancePropertyPage {
				 get { return "esri_mapping_CompositeLocatorPerformancePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;About the locator&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEagleGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEagleGeneralPropertyPage {
				 get { return "esri_mapping_locatorEagleGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Reference Data Tables&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEagleReferenceDataViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEagleReferenceDataPropertyPage {
				 get { return "esri_mapping_locatorEagleReferenceDataPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Alternate Name Tables&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEagleAlternateDataViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEagleAlternateDataPropertyPage {
				 get { return "esri_mapping_locatorEagleAlternateDataPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Input fields&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEagleInputFieldsViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEagleInputFieldsPropertyPage {
				 get { return "esri_mapping_locatorEagleInputFieldsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Output fields&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEagleOutputsViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEagleOutputsPropertyPage {
				 get { return "esri_mapping_locatorEagleOutputsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Geocoding options&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEagleGeocodingOptionsViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEagleGeocodingOptionsPropertyPage {
				 get { return "esri_mapping_locatorEagleGeocodingOptionsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Performance&quot; (ArcGIS.Desktop.Internal.Mapping.PropertyPages.LocatorEaglePerformanceViewModel, Mapping)</summary>
			public static string esri_mapping_locatorEaglePerformancePropertyPage {
				 get { return "esri_mapping_locatorEaglePerformancePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Subtype&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.SubtypeLayersViewModel, Mapping)</summary>
			public static string esri_mapping_subtypeLayersPropertyPage {
				 get { return "esri_mapping_subtypeLayersPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ServiceLayerDisplayViewModel, Mapping)</summary>
			public static string esri_mapping_dynamicServiceLayerDisplayPropertyPage {
				 get { return "esri_mapping_dynamicServiceLayerDisplayPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Layers&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ServiceLayerSubLayerSelectionViewModel, Mapping)</summary>
			public static string esri_mapping_WMSLayersPropertyPage {
				 get { return "esri_mapping_WMSLayersPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;WMTS&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ServiceLayerTilingSchemeViewModel, Mapping)</summary>
			public static string esri_mapping_tiledServiceLayerConfigurationPropertyPage {
				 get { return "esri_mapping_tiledServiceLayerConfigurationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalStandaloneTablePropertyPage {
				 get { return "esri_mapping_generalStandaloneTablePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.SourceViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneTableSourcePropertyPage {
				 get { return "esri_mapping_standaloneTableSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Definition Query&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.DefinitionQueryViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneTableDefinitionQueryPropertyPage {
				 get { return "esri_mapping_standaloneTableDefinitionQueryPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Indexes&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.IndexPropertyPageViewModel, Mapping)</summary>
			public static string esri_mapping_StandaloneTableIndexesPropertyPage {
				 get { return "esri_mapping_StandaloneTableIndexesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Joins&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.JoinsViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneTableJoinsPropertyPage {
				 get { return "esri_mapping_standaloneTableJoinsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Relates&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.RelatesViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneTableRelatesPropertyPage {
				 get { return "esri_mapping_standaloneTableRelatesPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.DisplayViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneTableDisplayPropertyPage {
				 get { return "esri_mapping_standaloneTableDisplayPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.SelectionViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneSelectionPropertyPage {
				 get { return "esri_mapping_standaloneSelectionPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneTable.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_multiGeneralStandaloneTablePropertyPage {
				 get { return "esri_mapping_multiGeneralStandaloneTablePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneVideo.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalStandaloneVideoPropertyPage {
				 get { return "esri_mapping_generalStandaloneVideoPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneVideo.SourceViewModel, Mapping)</summary>
			public static string esri_mapping_standaloneVideoSourcePropertyPage {
				 get { return "esri_mapping_standaloneVideoSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.StandaloneVideo.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_multiGeneralStandaloneVideoPropertyPage {
				 get { return "esri_mapping_multiGeneralStandaloneVideoPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalMapPropertyPage {
				 get { return "esri_mapping_generalMapPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Extent&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.CustomFullExtentViewModel, Mapping)</summary>
			public static string esri_mapping_customFullExtentMapPropertyPage {
				 get { return "esri_mapping_customFullExtentMapPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Clip Layers&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.ClipLayersViewModel, Mapping)</summary>
			public static string esri_mapping_clipLayersPropertyPage {
				 get { return "esri_mapping_clipLayersPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Coordinate Systems&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.CoordinateSystemViewModel, Mapping)</summary>
			public static string esri_mapping_coordinateSystemPropertyPage {
				 get { return "esri_mapping_coordinateSystemPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Transformation&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.TransformationViewModel, Mapping)</summary>
			public static string esri_mapping_transformationPropertyPage {
				 get { return "esri_mapping_transformationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Illumination&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.IlluminationViewModel, Mapping)</summary>
			public static string esri_mapping_illuminationPropertyPage {
				 get { return "esri_mapping_illuminationPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Labels&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.LabelGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_labelGeneralPropertyPage {
				 get { return "esri_mapping_labelGeneralPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Stereo&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.StereoScopicViewModel, Mapping)</summary>
			public static string esri_mapping_stereoScopicPropertyPage {
				 get { return "esri_mapping_stereoScopicPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Color Management&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.ColorManagementViewModel, Mapping)</summary>
			public static string esri_mapping_colorManagementPropertyPage {
				 get { return "esri_mapping_colorManagementPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Map.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalMultiMapPropertyPage {
				 get { return "esri_mapping_generalMultiMapPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Labels&quot; (ArcGIS.Desktop.Internal.Mapping.Labeling.LabelGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_labelGeneralMultiMapPropertyPage {
				 get { return "esri_mapping_labelGeneralMultiMapPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.GeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalGroupLayerPropertyPage {
				 get { return "esri_mapping_generalGroupLayerPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Travel Mode&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.NATransportation.NALayerTravelModePropertyPage, Mapping)</summary>
			public static string esri_mapping_naLayerTravelModePropertyPage {
				 get { return "esri_mapping_naLayerTravelModePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Network Properties&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.NetworkPropertiesViewModel, Mapping)</summary>
			public static string esri_mapping_layerNetworkPropertiesPage {
				 get { return "esri_mapping_layerNetworkPropertiesPage"; }
			}
			///<summary>Returns the id string for &quot;Diagram Properties&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.NetworkDiagramPropertiesViewModel, Mapping)</summary>
			public static string esri_mapping_layerNetworkDiagramPropertiesPage {
				 get { return "esri_mapping_layerNetworkDiagramPropertiesPage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.RasterDisplayViewModel, Mapping)</summary>
			public static string esri_mapping_layerMosaicDisplayPage {
				 get { return "esri_mapping_layerMosaicDisplayPage"; }
			}
			///<summary>Returns the id string for &quot;Mosaic&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.MosaicRuleViewModel, Mapping)</summary>
			public static string esri_mapping_layerMosaicRulePage {
				 get { return "esri_mapping_layerMosaicRulePage"; }
			}
			///<summary>Returns the id string for &quot;Processing Templates&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ProcessingTemplateViewModel, Mapping)</summary>
			public static string esri_mapping_layerProcessingTemplatePage {
				 get { return "esri_mapping_layerProcessingTemplatePage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.RasterDisplayViewModel, Mapping)</summary>
			public static string esri_mapping_layerRasterDisplayPage {
				 get { return "esri_mapping_layerRasterDisplayPage"; }
			}
			///<summary>Returns the id string for &quot;Display&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ISDisplayViewModel, Mapping)</summary>
			public static string esri_mapping_layerISDisplayPage {
				 get { return "esri_mapping_layerISDisplayPage"; }
			}
			///<summary>Returns the id string for &quot;Standard Scales&quot; (ArcGIS.Desktop.Internal.Mapping.CommonControls.ScaleControls.ScalesListVM, Mapping)</summary>
			public static string esri_mapping_scaleListPropertyPage {
				 get { return "esri_mapping_scaleListPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Scale Format&quot; (ArcGIS.Desktop.Internal.Mapping.CommonControls.ScaleControls.ScalesFormatVM, Mapping)</summary>
			public static string esri_mapping_scaleFormatPropertyPage {
				 get { return "esri_mapping_scaleFormatPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Standard Heights&quot; (ArcGIS.Desktop.Internal.Mapping.CommonControls.ScaleControls.ScalesListVM, Mapping)</summary>
			public static string esri_mapping_heightListPropertyPage {
				 get { return "esri_mapping_heightListPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.ElevationSurfaces.ElevationSourceGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_generalElevationSourcePropertyPage {
				 get { return "esri_mapping_generalElevationSourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Source&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.ElevationSurfaces.SourceViewModel, Mapping)</summary>
			public static string esri_mapping_SourcePropertyPage {
				 get { return "esri_mapping_SourcePropertyPage"; }
			}
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.AnnotationSubLayerGeneralViewModel, Mapping)</summary>
			public static string esri_mapping_annotationSubLayerGeneralPage {
				 get { return "esri_mapping_annotationSubLayerGeneralPage"; }
			}
			///<summary>Returns the id string for &quot;Annotation Class&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.AnnotationSubLayerAnnotationClassViewModel, Mapping)</summary>
			public static string esri_mapping_annotationSubLayerAnnotationClassPage {
				 get { return "esri_mapping_annotationSubLayerAnnotationClassPage"; }
			}
			///<summary>Returns the id string for &quot;Feature Layers&quot; (ArcGIS.Desktop.Internal.Mapping.Views.PropertyPages.Layer.ParcelFeatureLayersViewModel, Mapping)</summary>
			public static string esri_catalog_parcelFeatureLayersPropertyPage {
				 get { return "esri_catalog_parcelFeatureLayersPropertyPage"; }
			}
		}
		public static partial class Pane {
			///<summary>Returns the id string for &quot;Fields&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.FieldsPaneViewModel, Mapping)</summary>
			public static string esri_mapping_fieldsPane {
				 get { return "esri_mapping_fieldsPane"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.DomainsPaneViewModel, Mapping)</summary>
			public static string esri_mapping_domainsPane {
				 get { return "esri_mapping_domainsPane"; }
			}
			///<summary>Returns the id string for &quot;Versions&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.Versioning.VersionsPaneViewModel, Mapping)</summary>
			public static string esri_mapping_versionsPane {
				 get { return "esri_mapping_versionsPane"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.SubtypesPaneViewModel, Mapping)</summary>
			public static string esri_mapping_subtypesPane {
				 get { return "esri_mapping_subtypesPane"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.AttributeRules.AttributeRulesPaneViewModel, Mapping)</summary>
			public static string esri_mapping_attributeRulesPane {
				 get { return "esri_mapping_attributeRulesPane"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (ArcGIS.Desktop.Internal.Mapping.DesignView.ContingentValues.ContingentValuesPaneViewModel, Mapping)</summary>
			public static string esri_mapping_contingentValuesPane {
				 get { return "esri_mapping_contingentValuesPane"; }
			}
		}
		public static partial class Spinner {
			///<summary>Returns the id string for &quot;Transparency spinner&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.TransparencySpinner, Mapping)</summary>
			public static string esri_mapping_spinner_layerTransparency {
				 get { return "esri_mapping_spinner_layerTransparency"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerFlickerSpinner&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.FlickerSpinner, Mapping)</summary>
			public static string esri_mapping_layerFlickerSpinner {
				 get { return "esri_mapping_layerFlickerSpinner"; }
			}
			///<summary>Returns the id string for &quot;Angle:&quot; (ArcGIS.Desktop.Internal.Mapping.Views.RasterLayer.Ribbon.RotationSpinner, Mapping)</summary>
			public static string esri_mapping_rasterRotateAngleSpinner {
				 get { return "esri_mapping_rasterRotateAngleSpinner"; }
			}
			///<summary>Returns the id string for &quot;Distance &quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.NearPlaneClippingDistanceViewModel, Mapping)</summary>
			public static string esri_mapping_spinner_nearPlaneClippingDistance {
				 get { return "esri_mapping_spinner_nearPlaneClippingDistance"; }
			}
		}
		public static partial class Splitbutton {
			///<summary>Returns the id string for &quot;esri_mapping_exploreSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_exploreSplitButton {
				 get { return "esri_mapping_exploreSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerSymbologySplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_layerSymbologySplitButton {
				 get { return "esri_mapping_layerSymbologySplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerBinsSymbologySplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_layerBinsSymbologySplitButton {
				 get { return "esri_mapping_layerBinsSymbologySplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerStretchTypeSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_rasterLayerStretchTypeSplitButton {
				 get { return "esri_mapping_rasterLayerStretchTypeSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerSymbologyWMSSubLayerSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_layerSymbologyWMSSubLayerSplitButton {
				 get { return "esri_mapping_layerSymbologyWMSSubLayerSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_addDataSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_addDataSplitButton {
				 get { return "esri_mapping_addDataSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerSymbologySplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_rasterLayerSymbologySplitButton {
				 get { return "esri_mapping_rasterLayerSymbologySplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_infographicSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_infographicSplitButton {
				 get { return "esri_mapping_infographicSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_animationAppendTransitionSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_animationAppendTransitionSplitButton {
				 get { return "esri_mapping_animationAppendTransitionSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_interactiveAnalysisSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_interactiveAnalysisSplitButton {
				 get { return "esri_mapping_interactiveAnalysisSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_attributeRulesView_newCalculationRuleSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_attributeRulesView_newCalculationRuleSplitButton {
				 get { return "esri_attributeRulesView_newCalculationRuleSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_pointCloudLayerSymbologySplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerSymbologySplitButton {
				 get { return "esri_mapping_pointCloudLayerSymbologySplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_profileViewSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_profileViewSplitButton {
				 get { return "esri_mapping_profileViewSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelLayerSymbologySplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_voxelLayerSymbologySplitButton {
				 get { return "esri_mapping_voxelLayerSymbologySplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_snappingSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_snappingSplitButton {
				 get { return "esri_mapping_snappingSplitButton"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_locateSplitButton&quot; (Splitbutton, Mapping)</summary>
			public static string esri_mapping_locateSplitButton {
				 get { return "esri_mapping_locateSplitButton"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_mapping_scene3DObjectLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_scene3DObjectLayerSelectedState {
				 get { return "esri_mapping_scene3DObjectLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_scenePointLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_scenePointLayerSelectedState {
				 get { return "esri_mapping_scenePointLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sceneIntegratedMeshLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_sceneIntegratedMeshLayerSelectedState {
				 get { return "esri_mapping_sceneIntegratedMeshLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_LASDLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_LASDLayerSelectedState {
				 get { return "esri_mapping_LASDLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_pointCloudLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerSelectedState {
				 get { return "esri_mapping_pointCloudLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleTOCItemSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_singleTOCItemSelectedState {
				 get { return "esri_mapping_singleTOCItemSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_all3DLayersSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_all3DLayersSelectedState {
				 get { return "esri_mapping_all3DLayersSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapViewingMode3DPerspectiveState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapViewingMode3DPerspectiveState {
				 get { return "esri_mapping_mapViewingMode3DPerspectiveState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapViewingMode3DGlobeState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapViewingMode3DGlobeState {
				 get { return "esri_mapping_mapViewingMode3DGlobeState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypeValueLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypeValueLayerSelectedState {
				 get { return "esri_mapping_subtypeValueLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_EDLEnabledState&quot; (State, Mapping)</summary>
			public static string esri_mapping_EDLEnabledState {
				 get { return "esri_mapping_EDLEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ElevationSourceSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_ElevationSourceSelectedState {
				 get { return "esri_mapping_ElevationSourceSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ElevationSurfaceSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_ElevationSurfaceSelectedState {
				 get { return "esri_mapping_ElevationSurfaceSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_IsGroundSurfaceSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_IsGroundSurfaceSelectedState {
				 get { return "esri_mapping_IsGroundSurfaceSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_PasteElevationSourceSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_PasteElevationSourceSelectedState {
				 get { return "esri_mapping_PasteElevationSourceSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_PasteElevationSurfacesSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_PasteElevationSurfacesSelectedState {
				 get { return "esri_mapping_PasteElevationSurfacesSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_WfsLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_WfsLayerSelectedState {
				 get { return "esri_mapping_WfsLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_streamLayerSelectedState {
				 get { return "esri_mapping_streamLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypeGroupLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerSelectedState {
				 get { return "esri_mapping_subtypeGroupLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_inValidGroupLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_inValidGroupLayerSelectedState {
				 get { return "esri_mapping_inValidGroupLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_license_hasImageAnalystExtensionLicenseState&quot; (State, Mapping)</summary>
			public static string esri_license_hasImageAnalystExtensionLicenseState {
				 get { return "esri_license_hasImageAnalystExtensionLicenseState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapProjectItemState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapProjectItemState {
				 get { return "esri_mapping_mapProjectItemState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_findproviders_loaded&quot; (State, Mapping)</summary>
			public static string esri_mapping_findproviders_loaded {
				 get { return "esri_mapping_findproviders_loaded"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_layerSelectedState {
				 get { return "esri_mapping_layerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapTypeContainmentMapState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapTypeContainmentMapState {
				 get { return "esri_mapping_mapTypeContainmentMapState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_groupLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_groupLayerSelectedState {
				 get { return "esri_mapping_groupLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_annotationSubLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_annotationSubLayerSelectedState {
				 get { return "esri_mapping_annotationSubLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_multipleLayersSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_multipleLayersSelectedState {
				 get { return "esri_mapping_multipleLayersSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_rasterLayerSelectedState {
				 get { return "esri_mapping_rasterLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mosaicLayerSelectedState {
				 get { return "esri_mapping_mosaicLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_imageServiceLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerSelectedState {
				 get { return "esri_mapping_imageServiceLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_annotationLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_annotationLayerSelectedState {
				 get { return "esri_mapping_annotationLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapMemberSelectedIsArchiveEnabledState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapMemberSelectedIsArchiveEnabledState {
				 get { return "esri_mapping_mapMemberSelectedIsArchiveEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapMemberSelectedSupportsGdbValidationState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapMemberSelectedSupportsGdbValidationState {
				 get { return "esri_mapping_mapMemberSelectedSupportsGdbValidationState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapTypeNetworkDiagramState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapTypeNetworkDiagramState {
				 get { return "esri_mapping_mapTypeNetworkDiagramState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_dataLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_dataLayerSelectedState {
				 get { return "esri_mapping_dataLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapTypeBasemapState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapTypeBasemapState {
				 get { return "esri_mapping_mapTypeBasemapState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_NALayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_NALayerSelectedState {
				 get { return "esri_mapping_NALayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_NALayerSublayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_NALayerSublayerSelectedState {
				 get { return "esri_mapping_NALayerSublayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_map_utilityNetwork&quot; (State, Mapping)</summary>
			public static string esri_map_utilityNetwork {
				 get { return "esri_map_utilityNetwork"; }
			}
			///<summary>Returns the id string for &quot;esri_map_traceNetwork&quot; (State, Mapping)</summary>
			public static string esri_map_traceNetwork {
				 get { return "esri_map_traceNetwork"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicSublayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mosaicSublayerSelectedState {
				 get { return "esri_mapping_mosaicSublayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ParcelFabricLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_ParcelFabricLayerSelectedState {
				 get { return "esri_mapping_ParcelFabricLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_stereoMapState&quot; (State, Mapping)</summary>
			public static string esri_mapping_stereoMapState {
				 get { return "esri_mapping_stereoMapState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_compositeSublayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_compositeSublayerSelectedState {
				 get { return "esri_mapping_compositeSublayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_WMTSServiceLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_WMTSServiceLayerSelectedState {
				 get { return "esri_mapping_WMTSServiceLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_WMSServiceLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_WMSServiceLayerSelectedState {
				 get { return "esri_mapping_WMSServiceLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_WMSSubLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_WMSSubLayerSelectedState {
				 get { return "esri_mapping_WMSSubLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_ShapeFileLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_ShapeFileLayerSelectedState {
				 get { return "esri_mapping_ShapeFileLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_queryDataConnectionSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_queryDataConnectionSelectedState {
				 get { return "esri_mapping_queryDataConnectionSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_FeatureServiceTableSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_FeatureServiceTableSelectedState {
				 get { return "esri_mapping_FeatureServiceTableSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_RemoveLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_RemoveLayerSelectedState {
				 get { return "esri_mapping_RemoveLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_CopyLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_CopyLayerSelectedState {
				 get { return "esri_mapping_CopyLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_diagramLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_diagramLayerSelectedState {
				 get { return "esri_mapping_diagramLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TOCSupportsGroupLayersState&quot; (State, Mapping)</summary>
			public static string esri_mapping_TOCSupportsGroupLayersState {
				 get { return "esri_mapping_TOCSupportsGroupLayersState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_selectedLayersCanBeGroupedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_selectedLayersCanBeGroupedState {
				 get { return "esri_mapping_selectedLayersCanBeGroupedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layersWithDifferentParentsSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_layersWithDifferentParentsSelectedState {
				 get { return "esri_mapping_layersWithDifferentParentsSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapSelectedState {
				 get { return "esri_mapping_mapSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_emptyGroupLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_emptyGroupLayerSelectedState {
				 get { return "esri_mapping_emptyGroupLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_allOidTablesSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_allOidTablesSelectedState {
				 get { return "esri_mapping_allOidTablesSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_validMapMemberSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_validMapMemberSelectedState {
				 get { return "esri_mapping_validMapMemberSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_standaloneVideoSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_standaloneVideoSelectedState {
				 get { return "esri_mapping_standaloneVideoSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_legendClassSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_legendClassSelectedState {
				 get { return "esri_mapping_legendClassSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_symbologyPaneVisibility&quot; (State, Mapping)</summary>
			public static string esri_mapping_symbologyPaneVisibility {
				 get { return "esri_mapping_symbologyPaneVisibility"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labelingPaneVisibility&quot; (State, Mapping)</summary>
			public static string esri_mapping_labelingPaneVisibility {
				 get { return "esri_mapping_labelingPaneVisibility"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapTypeMapState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapTypeMapState {
				 get { return "esri_mapping_mapTypeMapState"; }
			}
			///<summary>Returns the id string for &quot;esri_core_previewShowBasemapState&quot; (State, Mapping)</summary>
			public static string esri_core_previewShowBasemapState {
				 get { return "esri_core_previewShowBasemapState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_hasEditsState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_hasEditsState {
				 get { return "esri_mapping_fieldsView_hasEditsState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_selectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_selectedState {
				 get { return "esri_mapping_fieldsView_selectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_copiedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_copiedState {
				 get { return "esri_mapping_fieldsView_copiedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_cutState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_cutState {
				 get { return "esri_mapping_fieldsView_cutState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_deleteState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_deleteState {
				 get { return "esri_mapping_fieldsView_deleteState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_undoState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_undoState {
				 get { return "esri_mapping_fieldsView_undoState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_fieldsView_redoState&quot; (State, Mapping)</summary>
			public static string esri_mapping_fieldsView_redoState {
				 get { return "esri_mapping_fieldsView_redoState"; }
			}
			///<summary>Returns the id string for &quot;esri_subtypes_canManageState&quot; (State, Mapping)</summary>
			public static string esri_subtypes_canManageState {
				 get { return "esri_subtypes_canManageState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_hasEditsState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_hasEditsState {
				 get { return "esri_mapping_subtypesView_hasEditsState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_selectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_selectedState {
				 get { return "esri_mapping_subtypesView_selectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_copiedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_copiedState {
				 get { return "esri_mapping_subtypesView_copiedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_cutState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_cutState {
				 get { return "esri_mapping_subtypesView_cutState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_deleteState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_deleteState {
				 get { return "esri_mapping_subtypesView_deleteState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_undoState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_undoState {
				 get { return "esri_mapping_subtypesView_undoState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_subtypesView_redoState&quot; (State, Mapping)</summary>
			public static string esri_mapping_subtypesView_redoState {
				 get { return "esri_mapping_subtypesView_redoState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_domainsView_canEditDomains&quot; (State, Mapping)</summary>
			public static string esri_mapping_domainsView_canEditDomains {
				 get { return "esri_mapping_domainsView_canEditDomains"; }
			}
			///<summary>Returns the id string for &quot;esri_dataSource_isFileGDBState&quot; (State, Mapping)</summary>
			public static string esri_dataSource_isFileGDBState {
				 get { return "esri_dataSource_isFileGDBState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_domainsView_selectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_domainsView_selectedState {
				 get { return "esri_mapping_domainsView_selectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_domainsView_copiedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_domainsView_copiedState {
				 get { return "esri_mapping_domainsView_copiedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_domainsView_cutState&quot; (State, Mapping)</summary>
			public static string esri_mapping_domainsView_cutState {
				 get { return "esri_mapping_domainsView_cutState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_domainsView_deleteState&quot; (State, Mapping)</summary>
			public static string esri_mapping_domainsView_deleteState {
				 get { return "esri_mapping_domainsView_deleteState"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportsfieldediting&quot; (State, Mapping)</summary>
			public static string esri_designview_supportsfieldediting {
				 get { return "esri_designview_supportsfieldediting"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportsfieldviewing&quot; (State, Mapping)</summary>
			public static string esri_designview_supportsfieldviewing {
				 get { return "esri_designview_supportsfieldviewing"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportssubtypeediting&quot; (State, Mapping)</summary>
			public static string esri_designview_supportssubtypeediting {
				 get { return "esri_designview_supportssubtypeediting"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportssubtypeviewing&quot; (State, Mapping)</summary>
			public static string esri_designview_supportssubtypeviewing {
				 get { return "esri_designview_supportssubtypeviewing"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportsdomainediting&quot; (State, Mapping)</summary>
			public static string esri_designview_supportsdomainediting {
				 get { return "esri_designview_supportsdomainediting"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportsdomainviewing&quot; (State, Mapping)</summary>
			public static string esri_designview_supportsdomainviewing {
				 get { return "esri_designview_supportsdomainviewing"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_domainsView_hasEditsState&quot; (State, Mapping)</summary>
			public static string esri_mapping_domainsView_hasEditsState {
				 get { return "esri_mapping_domainsView_hasEditsState"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportsattributerulesediting&quot; (State, Mapping)</summary>
			public static string esri_designview_supportsattributerulesediting {
				 get { return "esri_designview_supportsattributerulesediting"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportsattributerulesviewing&quot; (State, Mapping)</summary>
			public static string esri_designview_supportsattributerulesviewing {
				 get { return "esri_designview_supportsattributerulesviewing"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_readOnly&quot; (State, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_readOnly {
				 get { return "esri_mapping_attributeRulesView_readOnly"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesPane_ruleSelected&quot; (State, Mapping)</summary>
			public static string esri_mapping_attributeRulesPane_ruleSelected {
				 get { return "esri_mapping_attributeRulesPane_ruleSelected"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesPane_canExport&quot; (State, Mapping)</summary>
			public static string esri_mapping_attributeRulesPane_canExport {
				 get { return "esri_mapping_attributeRulesPane_canExport"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_disabled&quot; (State, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_disabled {
				 get { return "esri_mapping_attributeRulesView_disabled"; }
			}
			///<summary>Returns the id string for &quot;esri_license_hasReviewerExtensionLicenseState&quot; (State, Mapping)</summary>
			public static string esri_license_hasReviewerExtensionLicenseState {
				 get { return "esri_license_hasReviewerExtensionLicenseState"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportscontingentvaluesediting&quot; (State, Mapping)</summary>
			public static string esri_designview_supportscontingentvaluesediting {
				 get { return "esri_designview_supportscontingentvaluesediting"; }
			}
			///<summary>Returns the id string for &quot;esri_designview_supportscontingentvaluesviewing&quot; (State, Mapping)</summary>
			public static string esri_designview_supportscontingentvaluesviewing {
				 get { return "esri_designview_supportscontingentvaluesviewing"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_versionsView_hasEditsState&quot; (State, Mapping)</summary>
			public static string esri_mapping_versionsView_hasEditsState {
				 get { return "esri_mapping_versionsView_hasEditsState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_versionsView_hasSelectionState&quot; (State, Mapping)</summary>
			public static string esri_mapping_versionsView_hasSelectionState {
				 get { return "esri_mapping_versionsView_hasSelectionState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_versionsView_branchClientServerState&quot; (State, Mapping)</summary>
			public static string esri_mapping_versionsView_branchClientServerState {
				 get { return "esri_mapping_versionsView_branchClientServerState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_versionsView_deleteState&quot; (State, Mapping)</summary>
			public static string esri_mapping_versionsView_deleteState {
				 get { return "esri_mapping_versionsView_deleteState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_attributeRulesView_hasEditsState&quot; (State, Mapping)</summary>
			public static string esri_mapping_attributeRulesView_hasEditsState {
				 get { return "esri_mapping_attributeRulesView_hasEditsState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_contingentValuesView_hasEditsState&quot; (State, Mapping)</summary>
			public static string esri_mapping_contingentValuesView_hasEditsState {
				 get { return "esri_mapping_contingentValuesView_hasEditsState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_contingentValuesView_canRetireContingentValueState&quot; (State, Mapping)</summary>
			public static string esri_mapping_contingentValuesView_canRetireContingentValueState {
				 get { return "esri_mapping_contingentValuesView_canRetireContingentValueState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_contingentValuesView_canAddContingentValueState&quot; (State, Mapping)</summary>
			public static string esri_mapping_contingentValuesView_canAddContingentValueState {
				 get { return "esri_mapping_contingentValuesView_canAddContingentValueState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_contingentValuesView_canOpenSubtypes&quot; (State, Mapping)</summary>
			public static string esri_mapping_contingentValuesView_canOpenSubtypes {
				 get { return "esri_mapping_contingentValuesView_canOpenSubtypes"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_imageServiceLayerWithTableSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerWithTableSelectedState {
				 get { return "esri_mapping_imageServiceLayerWithTableSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamLayersSupportTrackLinesSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_streamLayersSupportTrackLinesSelectedState {
				 get { return "esri_mapping_streamLayersSupportTrackLinesSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_dimensionLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_dimensionLayerSelectedState {
				 get { return "esri_mapping_dimensionLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_KMLLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_KMLLayerSelectedState {
				 get { return "esri_mapping_KMLLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sceneLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_sceneLayerSelectedState {
				 get { return "esri_mapping_sceneLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_buildingSceneLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayerSelectedState {
				 get { return "esri_mapping_buildingSceneLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_voxelLayerSelectedState {
				 get { return "esri_mapping_voxelLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_streamLayersWithTrackIdSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_streamLayersWithTrackIdSelectedState {
				 get { return "esri_mapping_streamLayersWithTrackIdSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_cadLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_cadLayerSelectedState {
				 get { return "esri_mapping_cadLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TOCLabelingViewSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_TOCLabelingViewSelectedState {
				 get { return "esri_mapping_TOCLabelingViewSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_singleLabelClassSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_singleLabelClassSelectedState {
				 get { return "esri_mapping_singleLabelClassSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_all2DLayersSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_all2DLayersSelectedState {
				 get { return "esri_mapping_all2DLayersSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_isSubtypeValueLayerIn2DCategoryState&quot; (State, Mapping)</summary>
			public static string esri_mapping_isSubtypeValueLayerIn2DCategoryState {
				 get { return "esri_mapping_isSubtypeValueLayerIn2DCategoryState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerExtrusionDisabled&quot; (State, Mapping)</summary>
			public static string esri_mapping_layerExtrusionDisabled {
				 get { return "esri_mapping_layerExtrusionDisabled"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_netcdfStandardDataConnectionSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_netcdfStandardDataConnectionSelectedState {
				 get { return "esri_mapping_netcdfStandardDataConnectionSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_netcdfRasterDataConnectionSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_netcdfRasterDataConnectionSelectedState {
				 get { return "esri_mapping_netcdfRasterDataConnectionSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mdimRasterLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mdimRasterLayerSelectedState {
				 get { return "esri_mapping_mdimRasterLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mosaicImageSublayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mosaicImageSublayerSelectedState {
				 get { return "esri_mapping_mosaicImageSublayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_cachedImageServiceLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_cachedImageServiceLayerSelectedState {
				 get { return "esri_mapping_cachedImageServiceLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterSymbologyPaneVisibility&quot; (State, Mapping)</summary>
			public static string esri_mapping_rasterSymbologyPaneVisibility {
				 get { return "esri_mapping_rasterSymbologyPaneVisibility"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterHasSensorModelState&quot; (State, Mapping)</summary>
			public static string esri_mapping_rasterHasSensorModelState {
				 get { return "esri_mapping_rasterHasSensorModelState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_imageServiceLayerDownloadEnabledState&quot; (State, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerDownloadEnabledState {
				 get { return "esri_mapping_imageServiceLayerDownloadEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerStretchTypeState&quot; (State, Mapping)</summary>
			public static string esri_mapping_rasterLayerStretchTypeState {
				 get { return "esri_mapping_rasterLayerStretchTypeState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rasterLayerBandCombinationState&quot; (State, Mapping)</summary>
			public static string esri_mapping_rasterLayerBandCombinationState {
				 get { return "esri_mapping_rasterLayerBandCombinationState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_TiledServiceLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_TiledServiceLayerSelectedState {
				 get { return "esri_mapping_TiledServiceLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_DynamicServiceLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_DynamicServiceLayerSelectedState {
				 get { return "esri_mapping_DynamicServiceLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_VectorTileLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_VectorTileLayerSelectedState {
				 get { return "esri_mapping_VectorTileLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_simpleLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_simpleLayerSelectedState {
				 get { return "esri_mapping_simpleLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_geostatistics_gaLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_geostatistics_gaLayerSelectedState {
				 get { return "esri_geostatistics_gaLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_activeMapView_hasFeatureSelectionState&quot; (State, Mapping)</summary>
			public static string esri_mapping_activeMapView_hasFeatureSelectionState {
				 get { return "esri_mapping_activeMapView_hasFeatureSelectionState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_timeEnabledState&quot; (State, Mapping)</summary>
			public static string esri_mapping_timeEnabledState {
				 get { return "esri_mapping_timeEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rangeEnabledState&quot; (State, Mapping)</summary>
			public static string esri_mapping_rangeEnabledState {
				 get { return "esri_mapping_rangeEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_animationEnabledState&quot; (State, Mapping)</summary>
			public static string esri_mapping_animationEnabledState {
				 get { return "esri_mapping_animationEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_sceneLayerHasBuddyServiceState&quot; (State, Mapping)</summary>
			public static string esri_mapping_sceneLayerHasBuddyServiceState {
				 get { return "esri_mapping_sceneLayerHasBuddyServiceState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapHasAtLeastOneSyncEnabledLayerState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapHasAtLeastOneSyncEnabledLayerState {
				 get { return "esri_mapping_mapHasAtLeastOneSyncEnabledLayerState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapHasAtLeastOneSyncableLayerState&quot; (State, Mapping)</summary>
			public static string esri_mapping_mapHasAtLeastOneSyncableLayerState {
				 get { return "esri_mapping_mapHasAtLeastOneSyncableLayerState"; }
			}
			///<summary>Returns the id string for &quot;esri_activeGeoreferenceSessionState&quot; (State, Mapping)</summary>
			public static string esri_activeGeoreferenceSessionState {
				 get { return "esri_activeGeoreferenceSessionState"; }
			}
			///<summary>Returns the id string for &quot;esri_activeGeoreferenceSessionStateVisible&quot; (State, Mapping)</summary>
			public static string esri_activeGeoreferenceSessionStateVisible {
				 get { return "esri_activeGeoreferenceSessionStateVisible"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_bimLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_bimLayerSelectedState {
				 get { return "esri_mapping_bimLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_bimCompositeLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_bimCompositeLayerSelectedState {
				 get { return "esri_mapping_bimCompositeLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_binningLayerSelectedState&quot; (State, Mapping)</summary>
			public static string esri_mapping_binningLayerSelectedState {
				 get { return "esri_mapping_binningLayerSelectedState"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_activeMapHasBookmarksState&quot; (State, Mapping)</summary>
			public static string esri_mapping_activeMapHasBookmarksState {
				 get { return "esri_mapping_activeMapHasBookmarksState"; }
			}
		}
		public static partial class Subgroup {
			///<summary>Returns the id string for &quot;esri_mapping_mapSubGroup&quot; (Subgroup, Mapping)</summary>
			public static string esri_mapping_mapSubGroup {
				 get { return "esri_mapping_mapSubGroup"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_designView_editBtns&quot; (Subgroup, Mapping)</summary>
			public static string esri_mapping_designView_editBtns {
				 get { return "esri_mapping_designView_editBtns"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Styles&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_StylesTab {
				 get { return "esri_mapping_StylesTab"; }
			}
			///<summary>Returns the id string for &quot;Mapping&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_MapContainer {
				 get { return "esri_mapping_MapContainer"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_tableTab {
				 get { return "esri_mapping_tableTab"; }
			}
			///<summary>Returns the id string for &quot;Fields&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeDesignViewTab {
				 get { return "esri_mapping_homeDesignViewTab"; }
			}
			///<summary>Returns the id string for &quot;Subtypes&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeSubtypesViewTab {
				 get { return "esri_mapping_homeSubtypesViewTab"; }
			}
			///<summary>Returns the id string for &quot;Domains&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeDomainsViewTab {
				 get { return "esri_mapping_homeDomainsViewTab"; }
			}
			///<summary>Returns the id string for &quot;Versions&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeVersionManagerViewTab {
				 get { return "esri_mapping_homeVersionManagerViewTab"; }
			}
			///<summary>Returns the id string for &quot;Attribute Rules&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeAttributeRulesViewTab {
				 get { return "esri_mapping_homeAttributeRulesViewTab"; }
			}
			///<summary>Returns the id string for &quot;Contingent Values&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeContingentValuesViewTab {
				 get { return "esri_mapping_homeContingentValuesViewTab"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_homeTab {
				 get { return "esri_mapping_homeTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_insertTab {
				 get { return "esri_mapping_insertTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_analysisTab {
				 get { return "esri_mapping_analysisTab"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_viewTab {
				 get { return "esri_mapping_viewTab"; }
			}
			///<summary>Returns the id string for &quot;Animation&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_animationTab {
				 get { return "esri_mapping_animationTab"; }
			}
			///<summary>Returns the id string for &quot;Range&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_rangeTab {
				 get { return "esri_mapping_rangeTab"; }
			}
			///<summary>Returns the id string for &quot;Time&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_timeTab {
				 get { return "esri_mapping_timeTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerAppearanceTab {
				 get { return "esri_mapping_subtypeGroupLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerDataTab {
				 get { return "esri_mapping_subtypeGroupLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_streamLayerAppearanceTab {
				 get { return "esri_mapping_streamLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_streamLayerWithTrackIdAppearanceTab {
				 get { return "esri_mapping_streamLayerWithTrackIdAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Labeling&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_streamLayerLabelingTab {
				 get { return "esri_mapping_streamLayerLabelingTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_streamLayerDataTab {
				 get { return "esri_mapping_streamLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_featureLayerAppearanceTab {
				 get { return "esri_mapping_featureLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Labeling&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_labelingTab {
				 get { return "esri_mapping_labelingTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_featureLayerDataTab {
				 get { return "esri_mapping_featureLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_dataLayerDataTab {
				 get { return "esri_mapping_dataLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_annotationLayerAppearanceTab {
				 get { return "esri_mapping_annotationLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_annotationLayerDataTab {
				 get { return "esri_mapping_annotationLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_dimensionLayerAppearanceTab {
				 get { return "esri_mapping_dimensionLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_dimensionLayerDataTab {
				 get { return "esri_mapping_dimensionLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_rasterLayerAppearanceTab {
				 get { return "esri_mapping_rasterLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_rasterLayerDataTab {
				 get { return "esri_mapping_rasterLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Multidimensional&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_rasterLayerMdimTab {
				 get { return "esri_mapping_rasterLayerMdimTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mosaicLayerAppearanceTab {
				 get { return "esri_mapping_mosaicLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mosaicLayerDataTab {
				 get { return "esri_mapping_mosaicLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Multidimensional&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mosaicLayerMdimTab {
				 get { return "esri_mapping_mosaicLayerMdimTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mosaicImageSubLayerAppearanceTab {
				 get { return "esri_mapping_mosaicImageSubLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mosaicImageSubLayerDataTab {
				 get { return "esri_mapping_mosaicImageSubLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Multidimensional&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mosaicImageSubLayerMdimTab {
				 get { return "esri_mapping_mosaicImageSubLayerMdimTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerAppearanceTab {
				 get { return "esri_mapping_imageServiceLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerDataTab {
				 get { return "esri_mapping_imageServiceLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Multidimensional&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerMdimTab {
				 get { return "esri_mapping_imageServiceLayerMdimTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_mixedLayerAppearanceTab {
				 get { return "esri_mapping_mixedLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_wmsSubLayerAppearanceTab {
				 get { return "esri_mapping_wmsSubLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Versioning&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_datasourceVersionTab {
				 get { return "esri_mapping_datasourceVersionTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_kmlLayerAppearanceTab {
				 get { return "esri_mapping_kmlLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Labeling&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_kmlLayerLabelingTab {
				 get { return "esri_mapping_kmlLayerLabelingTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_vectorTileLayerAppearanceTab {
				 get { return "esri_mapping_vectorTileLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayerDataTab {
				 get { return "esri_mapping_buildingSceneLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_sceneLayerAppearanceTab {
				 get { return "esri_mapping_sceneLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_sceneLayerDataTab {
				 get { return "esri_mapping_sceneLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_integratedMeshLayerAppearanceTab {
				 get { return "esri_mapping_integratedMeshLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_voxelLayerAppearanceTab {
				 get { return "esri_mapping_voxelLayerAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_voxelLayerDataTab {
				 get { return "esri_mapping_voxelLayerDataTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_elevationSurfacesAppearanceTab {
				 get { return "esri_mapping_elevationSurfacesAppearanceTab"; }
			}
			///<summary>Returns the id string for &quot;Georeference&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_georeference_GeoreferenceTab {
				 get { return "esri_mapping_georeference_GeoreferenceTab"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_featureLayerCadTab {
				 get { return "esri_mapping_featureLayerCadTab"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_BimContextualTab {
				 get { return "esri_mapping_BimContextualTab"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_BimCompositeContextualTab {
				 get { return "esri_mapping_BimCompositeContextualTab"; }
			}
			///<summary>Returns the id string for &quot;Bin&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_binContextualTab {
				 get { return "esri_mapping_binContextualTab"; }
			}
			///<summary>Returns the id string for &quot;Appearance&quot; (Tab, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerAppearanceTab {
				 get { return "esri_mapping_pointCloudLayerAppearanceTab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Point Cloud Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_pointCloudLayerTabGroup {
				 get { return "esri_mapping_pointCloudLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Table&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_TableViewTabGroup {
				 get { return "esri_mapping_TableViewTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Standalone Table&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_tableLayerTabGroup {
				 get { return "esri_mapping_tableLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Feature Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_featureLayerTabGroup {
				 get { return "esri_mapping_featureLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Stream Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_streamLayerTabGroup {
				 get { return "esri_mapping_streamLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Subtype Group Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_subtypeGroupLayerTabGroup {
				 get { return "esri_mapping_subtypeGroupLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Data Source&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_DataSourceTabGroup {
				 get { return "esri_mapping_DataSourceTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Raster Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_rasterLayerTabGroup {
				 get { return "esri_mapping_rasterLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Annotation Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_annotationLayerTabGroup {
				 get { return "esri_mapping_annotationLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Dimension Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_dimensionLayerTabGroup {
				 get { return "esri_mapping_dimensionLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Mosaic Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_mosaicLayerTabGroup {
				 get { return "esri_mapping_mosaicLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Image Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_mosaicImageSubLayerTabGroup {
				 get { return "esri_mapping_mosaicImageSubLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Image Service Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_imageServiceLayerTabGroup {
				 get { return "esri_mapping_imageServiceLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_mixedLayerTabGroup {
				 get { return "esri_mapping_mixedLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_wmsSubLayerTabGroup {
				 get { return "esri_mapping_wmsSubLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Legend Class&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_legendClassTabGroup {
				 get { return "esri_mapping_legendClassTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_mapTabGroup {
				 get { return "esri_mapping_mapTabGroup"; }
			}
			///<summary>Returns the id string for &quot;KML Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_kmlLayerTabGroup {
				 get { return "esri_mapping_kmlLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Vector Tile Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_vectorTileLayerTabGroup {
				 get { return "esri_mapping_vectorTileLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Building Scene Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_buildingSceneLayerTabGroup {
				 get { return "esri_mapping_buildingSceneLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Scene Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_sceneLayerTabGroup {
				 get { return "esri_mapping_sceneLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Voxel Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_voxelLayerTabGroup {
				 get { return "esri_mapping_voxelLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Elevation Surface&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_elevationSurfaceTabGroup {
				 get { return "esri_mapping_elevationSurfaceTabGroup"; }
			}
			///<summary>Returns the id string for &quot;CAD Layer&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_cadLayerTabGroup {
				 get { return "esri_mapping_cadLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Building&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_bimLayerTabGroup {
				 get { return "esri_mapping_bimLayerTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_StyleTabGroup {
				 get { return "esri_mapping_StyleTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_MappingTabGroup {
				 get { return "esri_mapping_MappingTabGroup"; }
			}
			///<summary>Returns the id string for &quot;Binning&quot; (Tabgroup, Mapping)</summary>
			public static string esri_mapping_BinningTabGroup {
				 get { return "esri_mapping_BinningTabGroup"; }
			}
		}
		public static partial class Tool {
			///<summary>Returns the id string for &quot;Explore&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.ExploreTool, Mapping)</summary>
			public static string esri_mapping_exploreTool {
				 get { return "esri_mapping_exploreTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle Zoom&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.RectangleZoomTool, Mapping)</summary>
			public static string esri_mapping_rectangleZoom {
				 get { return "esri_mapping_rectangleZoom"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectTool, Mapping)</summary>
			public static string esri_mapping_selectByRectangleTool {
				 get { return "esri_mapping_selectByRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectByPolygonTool, Mapping)</summary>
			public static string esri_mapping_selectByPolygonTool {
				 get { return "esri_mapping_selectByPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectByLassoTool, Mapping)</summary>
			public static string esri_mapping_selectByLassoTool {
				 get { return "esri_mapping_selectByLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectByCircleTool, Mapping)</summary>
			public static string esri_mapping_selectByCircleTool {
				 get { return "esri_mapping_selectByCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectByLineTool, Mapping)</summary>
			public static string esri_mapping_selectByLineTool {
				 get { return "esri_mapping_selectByLineTool"; }
			}
			///<summary>Returns the id string for &quot;Trace&quot; (ArcGIS.Desktop.Editing.SelectByTraceTool, Mapping)</summary>
			public static string esri_mapping_selectByTraceTool {
				 get { return "esri_mapping_selectByTraceTool"; }
			}
			///<summary>Returns the id string for &quot;Rectangle&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectLasPointsTool, Mapping)</summary>
			public static string esri_mapping_selectLasPointsByRectangleTool {
				 get { return "esri_mapping_selectLasPointsByRectangleTool"; }
			}
			///<summary>Returns the id string for &quot;Polygon&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectLasPointsByPolygonTool, Mapping)</summary>
			public static string esri_mapping_selectLasPointsByPolygonTool {
				 get { return "esri_mapping_selectLasPointsByPolygonTool"; }
			}
			///<summary>Returns the id string for &quot;Lasso&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectLasPointsByLassoTool, Mapping)</summary>
			public static string esri_mapping_selectLasPointsByLassoTool {
				 get { return "esri_mapping_selectLasPointsByLassoTool"; }
			}
			///<summary>Returns the id string for &quot;Circle&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectLasPointsByCircleTool, Mapping)</summary>
			public static string esri_mapping_selectLasPointsByCircleTool {
				 get { return "esri_mapping_selectLasPointsByCircleTool"; }
			}
			///<summary>Returns the id string for &quot;Line&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.SelectLasPointsByLineTool, Mapping)</summary>
			public static string esri_mapping_selectLasPointsByLineTool {
				 get { return "esri_mapping_selectLasPointsByLineTool"; }
			}
			///<summary>Returns the id string for &quot;Measure Distance&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MeasureDistanceTool, Mapping)</summary>
			public static string esri_mapping_measureDistanceTool {
				 get { return "esri_mapping_measureDistanceTool"; }
			}
			///<summary>Returns the id string for &quot;Measure Area&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MeasureAreaTool, Mapping)</summary>
			public static string esri_mapping_measureAreaTool {
				 get { return "esri_mapping_measureAreaTool"; }
			}
			///<summary>Returns the id string for &quot;Measure Features&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MeasureFeaturesTool, Mapping)</summary>
			public static string esri_mapping_measureFeaturesTool {
				 get { return "esri_mapping_measureFeaturesTool"; }
			}
			///<summary>Returns the id string for &quot;Measure Vertical&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MeasureVerticalTool, Mapping)</summary>
			public static string esri_mapping_measureVerticalTool {
				 get { return "esri_mapping_measureVerticalTool"; }
			}
			///<summary>Returns the id string for &quot;Measure Terrain Distance&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.MeasureTerrainDistanceTool, Mapping)</summary>
			public static string esri_mapping_measureTerrainDistanceTool {
				 get { return "esri_mapping_measureTerrainDistanceTool"; }
			}
			///<summary>Returns the id string for &quot;Address Inspector&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.AddressInspectorTool, Mapping)</summary>
			public static string esri_mapping_addressInspectorTool {
				 get { return "esri_mapping_addressInspectorTool"; }
			}
			///<summary>Returns the id string for &quot;Exploratory Analysis&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveAnalysisTool, Mapping)</summary>
			public static string esri_mapping_exploratoryAnalysisTool {
				 get { return "esri_mapping_exploratoryAnalysisTool"; }
			}
			///<summary>Returns the id string for &quot;Exploratory Analysis&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveItemsTool, Mapping)</summary>
			public static string esri_mapping_exploratoryAnalysisInteractionTool {
				 get { return "esri_mapping_exploratoryAnalysisInteractionTool"; }
			}
			///<summary>Returns the id string for &quot;Viewshed&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveViewshedTool, Mapping)</summary>
			public static string esri_mapping_viewshedTool {
				 get { return "esri_mapping_viewshedTool"; }
			}
			///<summary>Returns the id string for &quot;Line of Sight&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveLineOfSightTool, Mapping)</summary>
			public static string esri_mapping_lineOfSightTool {
				 get { return "esri_mapping_lineOfSightTool"; }
			}
			///<summary>Returns the id string for &quot;Threat Dome&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveThreatDomeTool, Mapping)</summary>
			public static string esri_mapping_threatDomeTool {
				 get { return "esri_mapping_threatDomeTool"; }
			}
			///<summary>Returns the id string for &quot;Slice Rectangle&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveSliceRectTool, Mapping)</summary>
			public static string esri_mapping_sliceRectTool {
				 get { return "esri_mapping_sliceRectTool"; }
			}
			///<summary>Returns the id string for &quot;Slice Box&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveSliceBoxTool, Mapping)</summary>
			public static string esri_mapping_sliceBoxTool {
				 get { return "esri_mapping_sliceBoxTool"; }
			}
			///<summary>Returns the id string for &quot;Slice Cylinder&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveSliceCylinderTool, Mapping)</summary>
			public static string esri_mapping_sliceCylinderTool {
				 get { return "esri_mapping_sliceCylinderTool"; }
			}
			///<summary>Returns the id string for &quot;Slice Sphere&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveSliceSphereTool, Mapping)</summary>
			public static string esri_mapping_sliceSphereTool {
				 get { return "esri_mapping_sliceSphereTool"; }
			}
			///<summary>Returns the id string for &quot;Cut and Fill&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InteractiveCutFillTool, Mapping)</summary>
			public static string esri_mapping_cutFillTool {
				 get { return "esri_mapping_cutFillTool"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.CreateProfileTool, Mapping)</summary>
			public static string esri_mapping_createProfileViewTool {
				 get { return "esri_mapping_createProfileViewTool"; }
			}
			///<summary>Returns the id string for &quot;Create&quot; (ArcGIS.Desktop.Internal.Mapping.Voxel.Ribbon.SliceTool, Mapping)</summary>
			public static string esri_mapping_voxelLayer_sliceTool {
				 get { return "esri_mapping_voxelLayer_sliceTool"; }
			}
			///<summary>Returns the id string for &quot;Rotate&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.RotateTool, Mapping)</summary>
			public static string esri_mapping_rasterViewRotate {
				 get { return "esri_mapping_rasterViewRotate"; }
			}
			///<summary>Returns the id string for &quot;Flicker&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.SwipeTool, Mapping)</summary>
			public static string esri_mapping_FlickerTool {
				 get { return "esri_mapping_FlickerTool"; }
			}
			///<summary>Returns the id string for &quot;Swipe&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.SwipeTool, Mapping)</summary>
			public static string esri_mapping_layerSwipeTool {
				 get { return "esri_mapping_layerSwipeTool"; }
			}
			///<summary>Returns the id string for &quot;Swipe&quot; (ArcGIS.Desktop.Internal.Mapping.FeatureLayers.Ribbon.SwipeTool, Mapping)</summary>
			public static string esri_mapping_elevationSurfaceSwipeTool {
				 get { return "esri_mapping_elevationSurfaceSwipeTool"; }
			}
			///<summary>Returns the id string for &quot;Infographics&quot; (ArcGIS.Desktop.Internal.Mapping.Ribbon.InfographicTool, Mapping)</summary>
			public static string esri_mapping_infographicTool {
				 get { return "esri_mapping_infographicTool"; }
			}
			///<summary>Returns the id string for &quot;Move&quot; (Georeference.Tools.MoveTool, Mapping)</summary>
			public static string esri_mapping_georeference_MoveButton {
				 get { return "esri_mapping_georeference_MoveButton"; }
			}
			///<summary>Returns the id string for &quot;Scale&quot; (Georeference.Tools.ScaleTool, Mapping)</summary>
			public static string esri_mapping_georeference_ScaleButton {
				 get { return "esri_mapping_georeference_ScaleButton"; }
			}
			///<summary>Returns the id string for &quot;Rotate&quot; (Georeference.Tools.RotateTool, Mapping)</summary>
			public static string esri_mapping_georeference_RotateButton {
				 get { return "esri_mapping_georeference_RotateButton"; }
			}
		}
		public static partial class Toolbar {
			///<summary>Returns the id string for &quot;esri_mapping_kmlLabelTextSymbolFontToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_kmlLabelTextSymbolFontToolbar {
				 get { return "esri_mapping_kmlLabelTextSymbolFontToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labelTextSymbolFontToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_labelTextSymbolFontToolbar {
				 get { return "esri_mapping_labelTextSymbolFontToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labelClassNameToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_labelClassNameToolbar {
				 get { return "esri_mapping_labelClassNameToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labelLockPauseToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_labelLockPauseToolbar {
				 get { return "esri_mapping_labelLockPauseToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_labelClassExpressionToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_labelClassExpressionToolbar {
				 get { return "esri_mapping_labelClassExpressionToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerTransparencyToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_layerTransparencyToolbar {
				 get { return "esri_mapping_layerTransparencyToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerFlickerToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_layerFlickerToolbar {
				 get { return "esri_mapping_layerFlickerToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_layerExtrusionToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_layerExtrusionToolbar {
				 get { return "esri_mapping_layerExtrusionToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rangeNameToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_rangeNameToolbar {
				 get { return "esri_mapping_rangeNameToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_rangeAliasLayerSourceToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_rangeAliasLayerSourceToolbar {
				 get { return "esri_mapping_rangeAliasLayerSourceToolbar"; }
			}
			///<summary>Returns the id string for &quot;elevationSurfaceDrawingToolbar&quot; (Toolbar, Mapping)</summary>
			public static string elevationSurfaceDrawingToolbar {
				 get { return "elevationSurfaceDrawingToolbar"; }
			}
			///<summary>Returns the id string for &quot;elevationSurfaceRibbonToolbar&quot; (Toolbar, Mapping)</summary>
			public static string elevationSurfaceRibbonToolbar {
				 get { return "elevationSurfaceRibbonToolbar"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_voxelLayerVariableToolbar&quot; (Toolbar, Mapping)</summary>
			public static string esri_mapping_voxelLayerVariableToolbar {
				 get { return "esri_mapping_voxelLayerVariableToolbar"; }
			}
		}
		public static partial class Toolpalette {
			///<summary>Returns the id string for &quot;Select&quot; (Toolpalette, Mapping)</summary>
			public static string esri_mapping_selectToolPalette {
				 get { return "esri_mapping_selectToolPalette"; }
			}
			///<summary>Returns the id string for &quot;New Map&quot; (Toolpalette, Mapping)</summary>
			public static string esri_mapping_newMapPalette {
				 get { return "esri_mapping_newMapPalette"; }
			}
			///<summary>Returns the id string for &quot;Select&quot; (Toolpalette, Mapping)</summary>
			public static string esri_mapping_rasterLayerSelectionMenu {
				 get { return "esri_mapping_rasterLayerSelectionMenu"; }
			}
			///<summary>Returns the id string for &quot;Operations&quot; (Toolpalette, Mapping)</summary>
			public static string esri_mapping_rasterLayerSelectionOperationMenu {
				 get { return "esri_mapping_rasterLayerSelectionOperationMenu"; }
			}
			///<summary>Returns the id string for &quot;New Item&quot; (Toolpalette, Mapping)</summary>
			public static string esri_mapping_newStyleItem {
				 get { return "esri_mapping_newStyleItem"; }
			}
			///<summary>Returns the id string for &quot;Measure&quot; (Toolpalette, Mapping)</summary>
			public static string esri_mapping_measureToolPalette {
				 get { return "esri_mapping_measureToolPalette"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Current extent&quot; (esri_networkanalysis_utility_module:BuildAsyncCurrentExtent, Facility)</summary>
			public static string esri_networkanalysis_un_validate_current_BuildTools_Btn {
				 get { return "esri_networkanalysis_un_validate_current_BuildTools_Btn"; }
			}
			///<summary>Returns the id string for &quot;Entire extent&quot; (esri_networkanalysis_utility_module:BuildAsyncFullExtent, Facility)</summary>
			public static string esri_networkanalysis_un_validate_entire_BuildTools_Btn {
				 get { return "esri_networkanalysis_un_validate_entire_BuildTools_Btn"; }
			}
			///<summary>Returns the id string for &quot;Current extent&quot; (esri_networkanalysis_utility_module:BuildTraceNetworkCurrentExtent, Facility)</summary>
			public static string esri_networkanalysis_tn_validate_current_BuildTools_Btn {
				 get { return "esri_networkanalysis_tn_validate_current_BuildTools_Btn"; }
			}
			///<summary>Returns the id string for &quot;Entire extent&quot; (esri_networkanalysis_utility_module:BuildTraceNetworkFullExtent, Facility)</summary>
			public static string esri_networkanalysis_tn_validate_entire_BuildTools_Btn {
				 get { return "esri_networkanalysis_tn_validate_entire_BuildTools_Btn"; }
			}
			///<summary>Returns the id string for &quot;Modify&quot; (esri_networkanalysis_utility_module:ShowModifyAssociationsWindow, Facility)</summary>
			public static string esri_networkanalysis_ShowModifyAssociationsBtn {
				 get { return "esri_networkanalysis_ShowModifyAssociationsBtn"; }
			}
			///<summary>Returns the id string for &quot;Show&quot; (esri_networkanalysis_utility_module:DisableDisplayFilters, Facility)</summary>
			public static string esri_networkanalysis_ShowContentBtn {
				 get { return "esri_networkanalysis_ShowContentBtn"; }
			}
			///<summary>Returns the id string for &quot;Hide&quot; (esri_networkanalysis_utility_module:EnableDisplayFilters, Facility)</summary>
			public static string esri_networkanalysis_HideContentBtn {
				 get { return "esri_networkanalysis_HideContentBtn"; }
			}
			///<summary>Returns the id string for &quot;Customize...&quot; (Ribbon.UtilityNetworkGalleryCustomizeButton, Facility)</summary>
			public static string esri_utilitynetwork_ShowCustomizeGallery {
				 get { return "esri_utilitynetwork_ShowCustomizeGallery"; }
			}
			///<summary>Returns the id string for &quot;Find&quot; (esri_networkanalysis_utility_module:ShowFindSubnetworksWindow, Facility)</summary>
			public static string esri_networkanalysis_utility_FindSubnetworks_Btn {
				 get { return "esri_networkanalysis_utility_FindSubnetworks_Btn"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (ArcGIS.Desktop.NetworkAnalysis.Facility.Tools.ViewSubnetworksButton, Facility)</summary>
			public static string esri_networkanalysis_utility_ViewSubnetworks_Btn {
				 get { return "esri_networkanalysis_utility_ViewSubnetworks_Btn"; }
			}
			///<summary>Returns the id string for &quot;Modify Controller&quot; (esri_networkanalysis_utility_module:ShowModifySourceWindow, Facility)</summary>
			public static string esri_networkanalysis_utility_ShowModifySourceBtn {
				 get { return "esri_networkanalysis_utility_ShowModifySourceBtn"; }
			}
			///<summary>Returns the id string for &quot;Exit Containment&quot; (ArcGIS.Desktop.NetworkAnalysis.Facility.EnableContainerEditModeButton, Facility)</summary>
			public static string esri_networkanalysis_utility_Container_EditMode_Btn {
				 get { return "esri_networkanalysis_utility_Container_EditMode_Btn"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (ArcGIS.Desktop.NetworkAnalysis.Facility.ViewAssociationsModeButton, Facility)</summary>
			public static string esri_networkanalysis_utility_View_Associations_Mode_Btn {
				 get { return "esri_networkanalysis_utility_View_Associations_Mode_Btn"; }
			}
			///<summary>Returns the id string for &quot;View Associations Options&quot; (ArcGIS.Desktop.NetworkAnalysis.Facility.ViewAssociationsSettingsButton, Facility)</summary>
			public static string esri_networkanalysis_utility_View_Associations_Settings_Btn {
				 get { return "esri_networkanalysis_utility_View_Associations_Settings_Btn"; }
			}
			///<summary>Returns the id string for &quot;Zoom&quot; (Tools.ZoomToNetworkElement, Facility)</summary>
			public static string esri_networkanalysis_utility_ZoomTo_NetworkElement {
				 get { return "esri_networkanalysis_utility_ZoomTo_NetworkElement"; }
			}
			///<summary>Returns the id string for &quot;Starting Points&quot; (esri_networkanalysis_utility_module:ShowModifyStartingPointsWindow, Facility)</summary>
			public static string esri_networkanalysis_trace_ShowSetStartingPointsBtn {
				 get { return "esri_networkanalysis_trace_ShowSetStartingPointsBtn"; }
			}
			///<summary>Returns the id string for &quot;Barriers&quot; (esri_networkanalysis_utility_module:ShowModifyBarriersWindow, Facility)</summary>
			public static string esri_networkanalysis_trace_ShowSetBarriersBtn {
				 get { return "esri_networkanalysis_trace_ShowSetBarriersBtn"; }
			}
			///<summary>Returns the id string for &quot;Clear All&quot; (esri_networkanalysis_utility_module:ClearAllTraceLocations, Facility)</summary>
			public static string esri_networkanalysis_trace_ClearAllBtn {
				 get { return "esri_networkanalysis_trace_ClearAllBtn"; }
			}
			///<summary>Returns the id string for &quot;Apply To Maps&quot; (Tools.PropagateSelectionButton, Facility)</summary>
			public static string esri_networkanalysis_utility_ApplySelection_Btn {
				 get { return "esri_networkanalysis_utility_ApplySelection_Btn"; }
			}
			///<summary>Returns the id string for &quot;Terminal Paths&quot; (esri_networkanalysis_utility_module:ShowModifyDeviceTerminalWindow, Facility)</summary>
			public static string esri_networkanalysis_ShowModifyDeviceBtn {
				 get { return "esri_networkanalysis_ShowModifyDeviceBtn"; }
			}
			///<summary>Returns the id string for &quot;Terminal Connections&quot; (esri_networkanalysis_utility_module:ShowModifyTerminalConnectionsWindow, Facility)</summary>
			public static string esri_networkanalysis_ShowModifyConnectionBtn {
				 get { return "esri_networkanalysis_ShowModifyConnectionBtn"; }
			}
		}
		public static partial class Buttonpalette {
			///<summary>Returns the id string for &quot;Cross Section&quot; (Buttonpalette, Facility)</summary>
			public static string esri_networkanalysis_utility_CrossSection_BtnPalette {
				 get { return "esri_networkanalysis_utility_CrossSection_BtnPalette"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Modify Associations&quot; (ModifyAssociationsViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ModifyAssociationsPane {
				 get { return "esri_networkanalysis_utility_ModifyAssociationsPane"; }
			}
			///<summary>Returns the id string for &quot;Trace Locations&quot; (ModifyStartingPointsAndBarriersViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ModifyStartingPointsAndBarriersPane {
				 get { return "esri_networkanalysis_utility_ModifyStartingPointsAndBarriersPane"; }
			}
			///<summary>Returns the id string for &quot;Modify Subnetwork Controller&quot; (ModifySourceViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ModifySourcePane {
				 get { return "esri_networkanalysis_utility_ModifySourcePane"; }
			}
			///<summary>Returns the id string for &quot;Modify Terminal Paths&quot; (ModifyDeviceTerminalViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ModifyDeviceTerminalPane {
				 get { return "esri_networkanalysis_utility_ModifyDeviceTerminalPane"; }
			}
			///<summary>Returns the id string for &quot;Modify Terminal Connections&quot; (ModifyTerminalConnectionsViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ModifyTerminalConnectionsPane {
				 get { return "esri_networkanalysis_utility_ModifyTerminalConnectionsPane"; }
			}
			///<summary>Returns the id string for &quot;Find Subnetworks&quot; (FindSubnetworkViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_FindSubnetworkPane {
				 get { return "esri_networkanalysis_utility_FindSubnetworkPane"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;Utility Network Tool Gallery&quot; (Ribbon.UtilityNetworkGalleryViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ToolsGallery {
				 get { return "esri_networkanalysis_utility_ToolsGallery"; }
			}
			///<summary>Returns the id string for &quot;Trace Network Tool Gallery&quot; (Ribbon.TraceNetworkGalleryViewModel, Facility)</summary>
			public static string esri_networkanalysis_trace_ToolsGallery {
				 get { return "esri_networkanalysis_trace_ToolsGallery"; }
			}
			///<summary>Returns the id string for &quot;Propagate Selection Gallery&quot; (Ribbon.NetworkToNetworkGalleryViewModel, Facility)</summary>
			public static string esri_networkanalysis_utility_ApplySelectionGallery {
				 get { return "esri_networkanalysis_utility_ApplySelectionGallery"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_utility_Tools_Group {
				 get { return "esri_networkanalysis_utility_Tools_Group"; }
			}
			///<summary>Returns the id string for &quot;Network Topology&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_utility_Validate_Group {
				 get { return "esri_networkanalysis_utility_Validate_Group"; }
			}
			///<summary>Returns the id string for &quot;Associations&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_utility_Associations_Group {
				 get { return "esri_networkanalysis_utility_Associations_Group"; }
			}
			///<summary>Returns the id string for &quot;Subnetwork&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_utility_SubnetworkManagement_Group {
				 get { return "esri_networkanalysis_utility_SubnetworkManagement_Group"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_utility_Selection_Group {
				 get { return "esri_networkanalysis_utility_Selection_Group"; }
			}
			///<summary>Returns the id string for &quot;Tools&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_trace_Tools_Group {
				 get { return "esri_networkanalysis_trace_Tools_Group"; }
			}
			///<summary>Returns the id string for &quot;Network Topology&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_trace_Validate_Group {
				 get { return "esri_networkanalysis_trace_Validate_Group"; }
			}
			///<summary>Returns the id string for &quot;Associations&quot; (Group, Facility)</summary>
			public static string esri_networkanalysis_trace_Associations_Group {
				 get { return "esri_networkanalysis_trace_Associations_Group"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_mapping_containmentView&quot; (ArcGIS.Desktop.NetworkAnalysis.Facility.ContainmentView, Facility)</summary>
			public static string esri_mapping_containmentView {
				 get { return "esri_mapping_containmentView"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is selected&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_TerminalConnections_Condition {
				 get { return "esri_networkanalysis_utility_TerminalConnections_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is selected&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_ModifyAssociations_Condition {
				 get { return "esri_networkanalysis_utility_ModifyAssociations_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is selected&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_not_trace_ModifyAssociations_Condition {
				 get { return "esri_networkanalysis_utility_not_trace_ModifyAssociations_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is selected&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_DisplayContent_Condition {
				 get { return "esri_networkanalysis_utility_DisplayContent_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is selected&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_ConnectivityInfoTool_Condition {
				 get { return "esri_networkanalysis_utility_ConnectivityInfoTool_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is feature service&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_ValidateTool_Condition {
				 get { return "esri_networkanalysis_utility_ValidateTool_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and trace network layer is available&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_trace_ValidateTool_Condition {
				 get { return "esri_networkanalysis_trace_ValidateTool_Condition"; }
			}
			///<summary>Returns the id string for &quot;Geographic map is active and utility network layer is feature service&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_TraceTool_Condition {
				 get { return "esri_networkanalysis_utility_TraceTool_Condition"; }
			}
			///<summary>Returns the id string for &quot;Utility network layer is active and a selection exists&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_OpenContainer_Condition {
				 get { return "esri_networkanalysis_utility_OpenContainer_Condition"; }
			}
			///<summary>Returns the id string for &quot;Utility network layer has an active container&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_Container_Activated_Condition {
				 get { return "esri_networkanalysis_utility_Container_Activated_Condition"; }
			}
			///<summary>Returns the id string for &quot;Utility network layer is active and a selection exists&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_PropagateSelection_Condition {
				 get { return "esri_networkanalysis_utility_PropagateSelection_Condition"; }
			}
			///<summary>Returns the id string for &quot;Utility network layer is active and the map scale is valid.&quot; (Condition, Facility)</summary>
			public static string esri_networkanalysis_utility_ViewAssociations_Condition {
				 get { return "esri_networkanalysis_utility_ViewAssociations_Condition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;GDB Networks&quot; (NetworkAnalysisFacilityModule, Facility)</summary>
			public static string esri_networkanalysis_utility_module {
				 get { return "esri_networkanalysis_utility_module"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Utility Network Options&quot; (Sheet, Facility)</summary>
			public static string esri_utilityNetwork_optionsPropertySheet {
				 get { return "esri_utilityNetwork_optionsPropertySheet"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Network Diagrams&quot; (ArcGIS.Desktop.NetworkAnalysis.NetworkDiagrams.NetworkDiagramsOptionsViewModel, Facility)</summary>
			public static string esri_networkDiagrams_optionsPropertyPage {
				 get { return "esri_networkDiagrams_optionsPropertyPage"; }
			}
			///<summary>Returns the id string for &quot;Associations&quot; (AssociationsViewModel, Facility)</summary>
			public static string esri_networkanalysis_optionsPropertyPage {
				 get { return "esri_networkanalysis_optionsPropertyPage"; }
			}
		}
		public static partial class Splitbutton {
			///<summary>Returns the id string for &quot;esri_networkanalysis_utility_ApplySelectionSplitButton&quot; (Splitbutton, Facility)</summary>
			public static string esri_networkanalysis_utility_ApplySelectionSplitButton {
				 get { return "esri_networkanalysis_utility_ApplySelectionSplitButton"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_map_utilityNetworkFeatureService&quot; (State, Facility)</summary>
			public static string esri_map_utilityNetworkFeatureService {
				 get { return "esri_map_utilityNetworkFeatureService"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_mapMemberSelectedIsVersionedState&quot; (State, Facility)</summary>
			public static string esri_mapping_mapMemberSelectedIsVersionedState {
				 get { return "esri_mapping_mapMemberSelectedIsVersionedState"; }
			}
			///<summary>Returns the id string for &quot;esri_networkanalysis_utility_active_container_state&quot; (State, Facility)</summary>
			public static string esri_networkanalysis_utility_active_container_state {
				 get { return "esri_networkanalysis_utility_active_container_state"; }
			}
			///<summary>Returns the id string for &quot;esri_networkanalysis_utility_comingSoonState&quot; (State, Facility)</summary>
			public static string esri_networkanalysis_utility_comingSoonState {
				 get { return "esri_networkanalysis_utility_comingSoonState"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Facility)</summary>
			public static string esri_networkanalysis_utility_Data_Tab {
				 get { return "esri_networkanalysis_utility_Data_Tab"; }
			}
			///<summary>Returns the id string for &quot;Data&quot; (Tab, Facility)</summary>
			public static string esri_networkanalysis_trace_Data_Tab {
				 get { return "esri_networkanalysis_trace_Data_Tab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Utility Network&quot; (Tabgroup, Facility)</summary>
			public static string esri_networkanalysis_utility_TabGroup {
				 get { return "esri_networkanalysis_utility_TabGroup"; }
			}
			///<summary>Returns the id string for &quot;Trace Network&quot; (Tabgroup, Facility)</summary>
			public static string esri_networkanalysis_trace_TabGroup {
				 get { return "esri_networkanalysis_trace_TabGroup"; }
			}
		}
		public static partial class Tool {
			///<summary>Returns the id string for &quot;Select junctions&quot; (Tools.SelectConnectionsTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectConnectionsTool {
				 get { return "esri_networkanalysis_utility_associations_SelectConnectionsTool"; }
			}
			///<summary>Returns the id string for &quot;Select junctions&quot; (Tools.SelectChildConnectionsTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectChildConnectionsTool {
				 get { return "esri_networkanalysis_utility_associations_SelectChildConnectionsTool"; }
			}
			///<summary>Returns the id string for &quot;Select containers&quot; (Tools.SelectContainersTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectContainersTool {
				 get { return "esri_networkanalysis_utility_associations_SelectContainersTool"; }
			}
			///<summary>Returns the id string for &quot;Select content&quot; (Tools.SelectContentTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectContentTool {
				 get { return "esri_networkanalysis_utility_associations_SelectContentTool"; }
			}
			///<summary>Returns the id string for &quot;Select structures&quot; (Tools.SelectStructuresTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectStructuresTool {
				 get { return "esri_networkanalysis_utility_associations_SelectStructuresTool"; }
			}
			///<summary>Returns the id string for &quot;Select attachments&quot; (Tools.SelectAttachmentsTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectAttachmentsTool {
				 get { return "esri_networkanalysis_utility_associations_SelectAttachmentsTool"; }
			}
			///<summary>Returns the id string for &quot;Select source feature&quot; (Tools.SelectSourceFeatureTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectSourceFeatureTool {
				 get { return "esri_networkanalysis_utility_associations_SelectSourceFeatureTool"; }
			}
			///<summary>Returns the id string for &quot;Select Terminal&quot; (Tools.SelectTerminalFeatureTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectTerminalFeatureTool {
				 get { return "esri_networkanalysis_utility_associations_SelectTerminalFeatureTool"; }
			}
			///<summary>Returns the id string for &quot;Select Device&quot; (Tools.SelectConnectionDeviceFeatureTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectConnectionDeviceFeatureTool {
				 get { return "esri_networkanalysis_utility_associations_SelectConnectionDeviceFeatureTool"; }
			}
			///<summary>Returns the id string for &quot;Select Line&quot; (Tools.SelectConnectionLineFeatureTool, Facility)</summary>
			public static string esri_networkanalysis_utility_associations_SelectConnectionLineFeatureTool {
				 get { return "esri_networkanalysis_utility_associations_SelectConnectionLineFeatureTool"; }
			}
			///<summary>Returns the id string for &quot;Enter Containment&quot; (ArcGIS.Desktop.NetworkAnalysis.Facility.Tools.ContainmentViewTool, Facility)</summary>
			public static string esri_networkanalysis_utility_Containment_Btn {
				 get { return "esri_networkanalysis_utility_Containment_Btn"; }
			}
			///<summary>Returns the id string for &quot;Select starting points&quot; (Tools.SelectStartingPointsTool, Facility)</summary>
			public static string esri_networkanalysis_trace_SelectStartingPointsTool {
				 get { return "esri_networkanalysis_trace_SelectStartingPointsTool"; }
			}
			///<summary>Returns the id string for &quot;Select barriers&quot; (Tools.SelectBarriersTool, Facility)</summary>
			public static string esri_networkanalysis_trace_SelectBarriersTool {
				 get { return "esri_networkanalysis_trace_SelectBarriersTool"; }
			}
		}
		public static partial class Toolpalette {
			///<summary>Returns the id string for &quot;Trace Locations&quot; (Toolpalette, Facility)</summary>
			public static string esri_networkanalysis_utility_SetTracingLocationsBtnPalette {
				 get { return "esri_networkanalysis_utility_SetTracingLocationsBtnPalette"; }
			}
			///<summary>Returns the id string for &quot;Validate&quot; (Toolpalette, Facility)</summary>
			public static string esri_networkanalysis_utility_ValidateBtnPalette {
				 get { return "esri_networkanalysis_utility_ValidateBtnPalette"; }
			}
			///<summary>Returns the id string for &quot;Display Content&quot; (Toolpalette, Facility)</summary>
			public static string esri_networkanalysis_utility_DisplayFilterBtnPalette {
				 get { return "esri_networkanalysis_utility_DisplayFilterBtnPalette"; }
			}
			///<summary>Returns the id string for &quot;Build&quot; (Toolpalette, Facility)</summary>
			public static string esri_networkanalysis_trace_BuildBtnPalette {
				 get { return "esri_networkanalysis_trace_BuildBtnPalette"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;Tasks&quot; (esri_taskassistant_TaskAssistantModule:ShowTaskAssistant, TaskAssistant)</summary>
			public static string esri_tasks_ShowTasks {
				 get { return "esri_tasks_ShowTasks"; }
			}
			///<summary>Returns the id string for &quot;Task File&quot; (esri_taskassistant_TaskAssistantModule:SaveTaskItemAsTaskFile, TaskAssistant)</summary>
			public static string esri_tasks_SaveAsTaskFile {
				 get { return "esri_tasks_SaveAsTaskFile"; }
			}
			///<summary>Returns the id string for &quot;New Task Item&quot; (ArcGIS.Desktop.Internal.TaskAssistant.CreateNewTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_NewProjectTaskItem {
				 get { return "esri_tasks_NewProjectTaskItem"; }
			}
			///<summary>Returns the id string for &quot;Import And Open Task&quot; (ArcGIS.Desktop.Internal.TaskAssistant.ImportTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ImportTaskFile {
				 get { return "esri_tasks_ImportTaskFile"; }
			}
			///<summary>Returns the id string for &quot;Browse...&quot; (ArcGIS.Desktop.Internal.TaskAssistant.ImportTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ImportTaskFileBrowse {
				 get { return "esri_tasks_ImportTaskFileBrowse"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (ArcGIS.Desktop.Internal.TaskAssistant.OpenTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_OpenProjectTaskItem {
				 get { return "esri_tasks_OpenProjectTaskItem"; }
			}
			///<summary>Returns the id string for &quot;Edit In Designer&quot; (ArcGIS.Desktop.Internal.TaskAssistant.EditTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_EditProjectTaskItem {
				 get { return "esri_tasks_EditProjectTaskItem"; }
			}
			///<summary>Returns the id string for &quot;Check For Updates&quot; (ArcGIS.Desktop.Internal.TaskAssistant.UpdateTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_UpdateProjectTaskItem {
				 get { return "esri_tasks_UpdateProjectTaskItem"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (ArcGIS.Desktop.Internal.TaskAssistant.RemoveTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_RemoveProjectTaskItem {
				 get { return "esri_tasks_RemoveProjectTaskItem"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (ArcGIS.Desktop.Internal.TaskAssistant.TaskItemPropertiesContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ProjectTaskItemProperties {
				 get { return "esri_tasks_ProjectTaskItemProperties"; }
			}
			///<summary>Returns the id string for &quot;Email&quot; (ArcGIS.Desktop.Internal.TaskAssistant.SendToMailContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_SendProjectTaskItemToMail {
				 get { return "esri_tasks_SendProjectTaskItemToMail"; }
			}
			///<summary>Returns the id string for &quot;Save As...&quot; (ArcGIS.Desktop.Internal.TaskAssistant.SendToFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_SendProjectTaskItemToFile {
				 get { return "esri_tasks_SendProjectTaskItemToFile"; }
			}
			///<summary>Returns the id string for &quot;Import And Open&quot; (ArcGIS.Desktop.Internal.TaskAssistant.ImportOpenTaskFileContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ImportOpenTaskFile {
				 get { return "esri_tasks_ImportOpenTaskFile"; }
			}
			///<summary>Returns the id string for &quot;Properties&quot; (ArcGIS.Desktop.Internal.TaskAssistant.TaskFilePropertiesContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ProjectTaskFileProperties {
				 get { return "esri_tasks_ProjectTaskFileProperties"; }
			}
			///<summary>Returns the id string for &quot;Edit In Designer&quot; (ArcGIS.Desktop.Internal.TaskAssistant.DesignerContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_Designer {
				 get { return "esri_tasks_Designer"; }
			}
			///<summary>Returns the id string for &quot;Exit Designer&quot; (ArcGIS.Desktop.Internal.TaskAssistant.ExitDesignerContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ExitDesigner {
				 get { return "esri_tasks_ExitDesigner"; }
			}
			///<summary>Returns the id string for &quot;Task Group&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.NewTaskGroupContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_NewTaskGroup {
				 get { return "esri_tasks_NewTaskGroup"; }
			}
			///<summary>Returns the id string for &quot;Task&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.NewTaskContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_NewTask {
				 get { return "esri_tasks_NewTask"; }
			}
			///<summary>Returns the id string for &quot;Step&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.NewStepContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_NewStep {
				 get { return "esri_tasks_NewStep"; }
			}
			///<summary>Returns the id string for &quot;Create Palette&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.NewPaletteContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_NewPalette {
				 get { return "esri_tasks_NewPalette"; }
			}
			///<summary>Returns the id string for &quot;Step in Palette&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.NewPaletteStepContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_NewPaletteStep {
				 get { return "esri_tasks_NewPaletteStep"; }
			}
			///<summary>Returns the id string for &quot;Open&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.OpenItemContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_OpenItem {
				 get { return "esri_tasks_OpenItem"; }
			}
			///<summary>Returns the id string for &quot;Cut&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.CutItemContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_Cut {
				 get { return "esri_tasks_Cut"; }
			}
			///<summary>Returns the id string for &quot;Copy&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.CopyItemContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_Copy {
				 get { return "esri_tasks_Copy"; }
			}
			///<summary>Returns the id string for &quot;Paste&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.PasteItemContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_Paste {
				 get { return "esri_tasks_Paste"; }
			}
			///<summary>Returns the id string for &quot;Rename&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.RenameItemContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_Rename {
				 get { return "esri_tasks_Rename"; }
			}
			///<summary>Returns the id string for &quot;Delete&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.DeleteItemContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_Delete {
				 get { return "esri_tasks_Delete"; }
			}
			///<summary>Returns the id string for &quot;Visible&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.SetVisibleContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ContentsVisible {
				 get { return "esri_tasks_ContentsVisible"; }
			}
			///<summary>Returns the id string for &quot;Selectable&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.SetSelectableContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ContentsSelectable {
				 get { return "esri_tasks_ContentsSelectable"; }
			}
			///<summary>Returns the id string for &quot;Editable&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.SetEditableContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ContentsEditable {
				 get { return "esri_tasks_ContentsEditable"; }
			}
			///<summary>Returns the id string for &quot;Snappable&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.SetSnappableContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ContentsSnappable {
				 get { return "esri_tasks_ContentsSnappable"; }
			}
			///<summary>Returns the id string for &quot;Selected&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.SetSelectedContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ContentsSelected {
				 get { return "esri_tasks_ContentsSelected"; }
			}
			///<summary>Returns the id string for &quot;Labelled&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.SetLabelledContextCommand, TaskAssistant)</summary>
			public static string esri_tasks_ContentsLabelled {
				 get { return "esri_tasks_ContentsLabelled"; }
			}
			///<summary>Returns the id string for &quot;Skip Step&quot; (ArcGIS.Desktop.Internal.TaskAssistant.SkipStepCommand, TaskAssistant)</summary>
			public static string esri_tasks_SkipStep {
				 get { return "esri_tasks_SkipStep"; }
			}
			///<summary>Returns the id string for &quot;Run Step&quot; (ArcGIS.Desktop.Internal.TaskAssistant.RunStepCommand, TaskAssistant)</summary>
			public static string esri_tasks_RunStep {
				 get { return "esri_tasks_RunStep"; }
			}
			///<summary>Returns the id string for &quot;Move to Next Step&quot; (ArcGIS.Desktop.Internal.TaskAssistant.MoveToNextStepCommand, TaskAssistant)</summary>
			public static string esri_tasks_MoveToNextStep {
				 get { return "esri_tasks_MoveToNextStep"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_projectGDBItemRename&quot; (Component, TaskAssistant)</summary>
			public static string esri_projectGDBItemRename {
				 get { return "esri_projectGDBItemRename"; }
			}
			///<summary>Returns the id string for &quot;esri_mapping_showRasterProcessDockPaneButton&quot; (Component, TaskAssistant)</summary>
			public static string esri_mapping_showRasterProcessDockPaneButton {
				 get { return "esri_mapping_showRasterProcessDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;esri_sharing_PackagingProjectPaneBtn&quot; (Component, TaskAssistant)</summary>
			public static string esri_sharing_PackagingProjectPaneBtn {
				 get { return "esri_sharing_PackagingProjectPaneBtn"; }
			}
			///<summary>Returns the id string for &quot;esri_sharing_PackagingMapPaneBtn&quot; (Component, TaskAssistant)</summary>
			public static string esri_sharing_PackagingMapPaneBtn {
				 get { return "esri_sharing_PackagingMapPaneBtn"; }
			}
			///<summary>Returns the id string for &quot;esri_sharing_PackagingLayersPaneBtn&quot; (Component, TaskAssistant)</summary>
			public static string esri_sharing_PackagingLayersPaneBtn {
				 get { return "esri_sharing_PackagingLayersPaneBtn"; }
			}
			///<summary>Returns the id string for &quot;esri_sharing_SharingAsWebMapPaneBtn&quot; (Component, TaskAssistant)</summary>
			public static string esri_sharing_SharingAsWebMapPaneBtn {
				 get { return "esri_sharing_SharingAsWebMapPaneBtn"; }
			}
			///<summary>Returns the id string for &quot;esri_sharing_SaveAsMapFileBtn&quot; (Component, TaskAssistant)</summary>
			public static string esri_sharing_SaveAsMapFileBtn {
				 get { return "esri_sharing_SaveAsMapFileBtn"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowConnectionContextMenu&quot; (Component, TaskAssistant)</summary>
			public static string esri_workflow_workflowConnectionContextMenu {
				 get { return "esri_workflow_workflowConnectionContextMenu"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Tasks&quot; (ArcGIS.Desktop.Internal.TaskAssistant.TaskAssistantViewModel, TaskAssistant)</summary>
			public static string esri_taskassistant_TaskAssistantDockPane {
				 get { return "esri_taskassistant_TaskAssistantDockPane"; }
			}
			///<summary>Returns the id string for &quot;Task Designer&quot; (ArcGIS.Desktop.Internal.TaskAssistant.Designer.DesignerViewModel, TaskAssistant)</summary>
			public static string esri_taskassistant_TaskDesignerDockPane {
				 get { return "esri_taskassistant_TaskDesignerDockPane"; }
			}
		}
		public static partial class Dynamicmenu {
			///<summary>Returns the id string for &quot;Import&quot; (ArcGIS.Desktop.Internal.TaskAssistant.ImportDynamicMenu, TaskAssistant)</summary>
			public static string esri_tasks_ImportMenu {
				 get { return "esri_tasks_ImportMenu"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_tasks_recordingCommandSkipList&quot; (Category, TaskAssistant)</summary>
			public static string esri_tasks_recordingCommandSkipList {
				 get { return "esri_tasks_recordingCommandSkipList"; }
			}
			///<summary>Returns the id string for &quot;esri_tasks_paneCleanupList&quot; (Category, TaskAssistant)</summary>
			public static string esri_tasks_paneCleanupList {
				 get { return "esri_tasks_paneCleanupList"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_tasks_TaskContainer&quot; (ArcGIS.Desktop.Internal.TaskAssistant.TaskContainer, TaskAssistant)</summary>
			public static string esri_tasks_TaskContainer {
				 get { return "esri_tasks_TaskContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_tasks_TaskProjectItem&quot; (ArcGIS.Desktop.TaskAssistant.TaskProjectItem, TaskAssistant)</summary>
			public static string esri_tasks_TaskProjectItem {
				 get { return "esri_tasks_TaskProjectItem"; }
			}
			///<summary>Returns the id string for &quot;esri_taskassistant_GpEmbedded&quot; (ArcGIS.Desktop.Internal.TaskAssistant.GpEmbeddedViewModel, TaskAssistant)</summary>
			public static string esri_taskassistant_GpEmbedded {
				 get { return "esri_taskassistant_GpEmbedded"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;Disabled condition&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_disabledCondition {
				 get { return "esri_tasks_disabledCondition"; }
			}
			///<summary>Returns the id string for &quot;Task pane is in Design mode&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_DesignerEnabledCondition {
				 get { return "esri_tasks_DesignerEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;Task pane is in Execute mode&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_ExecuteOnlyCondition {
				 get { return "esri_tasks_ExecuteOnlyCondition"; }
			}
			///<summary>Returns the id string for &quot;Are there task items associated with the current project&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_HasProjectTasksCondition {
				 get { return "esri_tasks_HasProjectTasksCondition"; }
			}
			///<summary>Returns the id string for &quot;Is there a task item currently loaded&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_IsTaskFileLoadedCondition {
				 get { return "esri_tasks_IsTaskFileLoadedCondition"; }
			}
			///<summary>Returns the id string for &quot;Is there an open project&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_openProjectCondition {
				 get { return "esri_tasks_openProjectCondition"; }
			}
			///<summary>Returns the id string for &quot;Is there a task item currently loaded (and not in Design mode)&quot; (Condition, TaskAssistant)</summary>
			public static string esri_tasks_IsTaskFileLoadedExecuteOnlyCondition {
				 get { return "esri_tasks_IsTaskFileLoadedExecuteOnlyCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Tasks&quot; (TaskAssistantModule, TaskAssistant)</summary>
			public static string esri_taskassistant_TaskAssistantModule {
				 get { return "esri_taskassistant_TaskAssistantModule"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;Tasks&quot; (ArcGIS.Desktop.Internal.TaskAssistant.ProjectSettingsViewModel, TaskAssistant)</summary>
			public static string esri_tasks_PropertyPageProjectSettings {
				 get { return "esri_tasks_PropertyPageProjectSettings"; }
			}
		}
		public static partial class Sheet {
			///<summary>Returns the id string for &quot;Task Item Properties&quot; (Sheet, TaskAssistant)</summary>
			public static string esri_tasks_propertySheet {
				 get { return "esri_tasks_propertySheet"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;Import and Open Task File&quot; (Menu, TaskAssistant)</summary>
			public static string esri_tasks_ImportTaskFileMenu {
				 get { return "esri_tasks_ImportTaskFileMenu"; }
			}
			///<summary>Returns the id string for &quot;Task&quot; (Menu, TaskAssistant)</summary>
			public static string esri_task_insertMenu {
				 get { return "esri_task_insertMenu"; }
			}
			///<summary>Returns the id string for &quot;Tasks Container&quot; (Menu, TaskAssistant)</summary>
			public static string TaskAssistantFileContainerContextMenu {
				 get { return "TaskAssistantFileContainerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Task Item&quot; (Menu, TaskAssistant)</summary>
			public static string TaskAssistantProjectItemContextMenu {
				 get { return "TaskAssistantProjectItemContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Task File&quot; (Menu, TaskAssistant)</summary>
			public static string TaskAssistantFileItemContextMenu {
				 get { return "TaskAssistantFileItemContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Task Options&quot; (Menu, TaskAssistant)</summary>
			public static string esri_taskassistant_BurgerMenu {
				 get { return "esri_taskassistant_BurgerMenu"; }
			}
			///<summary>Returns the id string for &quot;Task Designer Options&quot; (Menu, TaskAssistant)</summary>
			public static string esri_taskassistant_DesignerBurgerMenu {
				 get { return "esri_taskassistant_DesignerBurgerMenu"; }
			}
			///<summary>Returns the id string for &quot;New&quot; (Menu, TaskAssistant)</summary>
			public static string esri_tasks_NewContextMenu {
				 get { return "esri_tasks_NewContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Export To File&quot; (Menu, TaskAssistant)</summary>
			public static string esri_tasks_ShareProjectItemContextMenu {
				 get { return "esri_tasks_ShareProjectItemContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Designer Options&quot; (Menu, TaskAssistant)</summary>
			public static string esri_taskassistant_DesignerContextMenu {
				 get { return "esri_taskassistant_DesignerContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Options&quot; (Menu, TaskAssistant)</summary>
			public static string esri_taskassistant_ContextMenu {
				 get { return "esri_taskassistant_ContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Only make this&quot; (Menu, TaskAssistant)</summary>
			public static string esri_tasks_ContentsContextMenu {
				 get { return "esri_tasks_ContentsContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Contents&quot; (Menu, TaskAssistant)</summary>
			public static string esri_taskassistant_DesignerContentsContextMenu {
				 get { return "esri_taskassistant_DesignerContentsContextMenu"; }
			}
		}
		public static partial class Page {
			///<summary>Returns the id string for &quot;General&quot; (ArcGIS.Desktop.Internal.TaskAssistant.GeneralPropertiesPageViewModel, TaskAssistant)</summary>
			public static string esri_tasks_generalTaskFileProperties {
				 get { return "esri_tasks_generalTaskFileProperties"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_taskassistant_state&quot; (State, TaskAssistant)</summary>
			public static string esri_taskassistant_state {
				 get { return "esri_taskassistant_state"; }
			}
			///<summary>Returns the id string for &quot;esri_taskassistant_DesignerEnabled&quot; (State, TaskAssistant)</summary>
			public static string esri_taskassistant_DesignerEnabled {
				 get { return "esri_taskassistant_DesignerEnabled"; }
			}
			///<summary>Returns the id string for &quot;esri_taskassistant_locked&quot; (State, TaskAssistant)</summary>
			public static string esri_taskassistant_locked {
				 get { return "esri_taskassistant_locked"; }
			}
			///<summary>Returns the id string for &quot;esri_taskassistant_hasProjectTaskFiles&quot; (State, TaskAssistant)</summary>
			public static string esri_taskassistant_hasProjectTaskFiles {
				 get { return "esri_taskassistant_hasProjectTaskFiles"; }
			}
			///<summary>Returns the id string for &quot;esri_taskassistant_IsTaskFileLoaded&quot; (State, TaskAssistant)</summary>
			public static string esri_taskassistant_IsTaskFileLoaded {
				 get { return "esri_taskassistant_IsTaskFileLoaded"; }
			}
		}
		public static partial class Button {
			///<summary>Returns the id string for &quot;New Workflow Connection&quot; (workflow_module:ConnectToWorkflowAsync, Workflow)</summary>
			public static string esri_workflow_workflowConnectionButton {
				 get { return "esri_workflow_workflowConnectionButton"; }
			}
			///<summary>Returns the id string for &quot;Add Workflow Connection&quot; (workflow_module:ConnectToWorkflowAsync, Workflow)</summary>
			public static string esri_workflow_workflowConnectionContextMenuButton {
				 get { return "esri_workflow_workflowConnectionContextMenuButton"; }
			}
			///<summary>Returns the id string for &quot;Add Workflow Server Connection&quot; (workflow_module:ConnectToOnlineWorkflow, Workflow)</summary>
			public static string esri_workflow_workflowConnectionOnlineButton {
				 get { return "esri_workflow_workflowConnectionOnlineButton"; }
			}
			///<summary>Returns the id string for &quot;Job Properties&quot; (WorkflowPane.Ribbon.OpenJobPropertiesDockPaneButton, Workflow)</summary>
			public static string esri_workflow_openJobPropertiesDockPaneButton {
				 get { return "esri_workflow_openJobPropertiesDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Workflow Pane&quot; (ArcGIS.Desktop.Internal.Workflow.WorkerPane.Ribbon.OpenWorkerDockPaneButton, Workflow)</summary>
			public static string esri_workflow_openWorkerDockPaneButton {
				 get { return "esri_workflow_openWorkerDockPaneButton"; }
			}
			///<summary>Returns the id string for &quot;Workflow View&quot; (ArcGIS.Desktop.Internal.Workflow.WorkerPane.Ribbon.OpenWorkflowViewButton, Workflow)</summary>
			public static string esri_workflow_workflowView {
				 get { return "esri_workflow_workflowView"; }
			}
			///<summary>Returns the id string for &quot;Close&quot; (WorkflowPane.Ribbon.CloseJobButton, Workflow)</summary>
			public static string esri_workflow_closeJobButton {
				 get { return "esri_workflow_closeJobButton"; }
			}
			///<summary>Returns the id string for &quot;Export to CSV&quot; (esri_workflow_workflowPane:ExportCSV, Workflow)</summary>
			public static string esri_workflow_exportCSVButton {
				 get { return "esri_workflow_exportCSVButton"; }
			}
			///<summary>Returns the id string for &quot;Export Job&quot; (esri_workflow_workflowPane:ExportJob, Workflow)</summary>
			public static string esri_workflow_exportJobButton {
				 get { return "esri_workflow_exportJobButton"; }
			}
			///<summary>Returns the id string for &quot;Export Query&quot; (esri_workflow_workflowPane:ExportQuery, Workflow)</summary>
			public static string esri_workflow_exportQueryResultsButton {
				 get { return "esri_workflow_exportQueryResultsButton"; }
			}
			///<summary>Returns the id string for &quot;Export Report&quot; (esri_workflow_workflowPane:Report, Workflow)</summary>
			public static string esri_workflow_exportReportButton {
				 get { return "esri_workflow_exportReportButton"; }
			}
			///<summary>Returns the id string for &quot;Parent Child Relationship&quot; (esri_workflow_workflowPane:ViewJobParentChildRelationship, Workflow)</summary>
			public static string esri_workflow_jobParentChildRelationshipButton {
				 get { return "esri_workflow_jobParentChildRelationshipButton"; }
			}
			///<summary>Returns the id string for &quot;Dependent On&quot; (esri_workflow_workflowPane:ViewJobDependentOn, Workflow)</summary>
			public static string esri_workflow_jobDependentOnRelationshipButton {
				 get { return "esri_workflow_jobDependentOnRelationshipButton"; }
			}
			///<summary>Returns the id string for &quot;Dependent To&quot; (esri_workflow_workflowPane:ViewJobDependentTo, Workflow)</summary>
			public static string esri_workflow_jobDependentToRelationshipButton {
				 get { return "esri_workflow_jobDependentToRelationshipButton"; }
			}
			///<summary>Returns the id string for &quot;Take Offline&quot; (WorkflowPane.Ribbon.TakeJobsOfflineButton, Workflow)</summary>
			public static string esri_workflow_takeJobsOfflineButton {
				 get { return "esri_workflow_takeJobsOfflineButton"; }
			}
			///<summary>Returns the id string for &quot;Bring Online&quot; (WorkflowPane.Ribbon.BringJobsOnlineButton, Workflow)</summary>
			public static string esri_workflow_bringJobsOnlineButton {
				 get { return "esri_workflow_bringJobsOnlineButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Jobs&quot; (WorkflowPane.Ribbon.DeleteJobButton, Workflow)</summary>
			public static string esri_workflow_deleteJobsButton {
				 get { return "esri_workflow_deleteJobsButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Version&quot; (WorkflowPane.Ribbon.DeleteVersionButton, Workflow)</summary>
			public static string esri_workflow_deleteVersionsButton {
				 get { return "esri_workflow_deleteVersionsButton"; }
			}
			///<summary>Returns the id string for &quot;Delete Map&quot; (WorkflowPane.Ribbon.DeleteMapButton, Workflow)</summary>
			public static string esri_workflow_deleteMapsButton {
				 get { return "esri_workflow_deleteMapsButton"; }
			}
			///<summary>Returns the id string for &quot;Subscribe&quot; (esri_workflow_workflowPane:SubscribeToNotifications, Workflow)</summary>
			public static string esri_workflow_subscribeToNotificationsButton {
				 get { return "esri_workflow_subscribeToNotificationsButton"; }
			}
			///<summary>Returns the id string for &quot;Remove&quot; (esri_core_module:RemoveProjectItem, Workflow)</summary>
			public static string esri_workflow_workflowConnectionContextMenuRemoveButton {
				 get { return "esri_workflow_workflowConnectionContextMenuRemoveButton"; }
			}
			///<summary>Returns the id string for &quot;Open Workflow Connection&quot; (workflow_module:OpenWorkflow, Workflow)</summary>
			public static string esri_workflow_workflowConnectionContextMenuOpenButton {
				 get { return "esri_workflow_workflowConnectionContextMenuOpenButton"; }
			}
			///<summary>Returns the id string for &quot;Update Data Workspace Login&quot; (workflow_module:SetDWLogin, Workflow)</summary>
			public static string esri_workflow_workflowConnectionContextMenuDataWorkspaceLoginButton {
				 get { return "esri_workflow_workflowConnectionContextMenuDataWorkspaceLoginButton"; }
			}
			///<summary>Returns the id string for &quot;Update Users and Groups&quot; (workflow_module:OpenUserConfiguration, Workflow)</summary>
			public static string esri_workflow_workflowConnectionContextMenuAddUserToGroupButton {
				 get { return "esri_workflow_workflowConnectionContextMenuAddUserToGroupButton"; }
			}
			///<summary>Returns the id string for &quot;Current User&quot; (JobPane.Ribbon.AssignJobButton, Workflow)</summary>
			public static string esri_workflow_assignToCurrentUser {
				 get { return "esri_workflow_assignToCurrentUser"; }
			}
			///<summary>Returns the id string for &quot;Execute Step&quot; (JobPane.Ribbon.ExecuteStepButton, Workflow)</summary>
			public static string esri_workflow_executionExecute {
				 get { return "esri_workflow_executionExecute"; }
			}
			///<summary>Returns the id string for &quot;Mark Step Complete&quot; (JobPane.Ribbon.CompleteStepButton, Workflow)</summary>
			public static string esri_workflow_executionMarkAsComplete {
				 get { return "esri_workflow_executionMarkAsComplete"; }
			}
			///<summary>Returns the id string for &quot;Refresh&quot; (JobPane.Ribbon.RefreshJob, Workflow)</summary>
			public static string esri_workflow_jobRefresh {
				 get { return "esri_workflow_jobRefresh"; }
			}
			///<summary>Returns the id string for &quot;Take Offline&quot; (JobPane.Ribbon.TakeJobOfflineButton, Workflow)</summary>
			public static string esri_workflow_takeJobOfflineButton {
				 get { return "esri_workflow_takeJobOfflineButton"; }
			}
			///<summary>Returns the id string for &quot;Bring Online&quot; (JobPane.Ribbon.BringJobOnlineButton, Workflow)</summary>
			public static string esri_workflow_bringJobOnlineButton {
				 get { return "esri_workflow_bringJobOnlineButton"; }
			}
			///<summary>Returns the id string for &quot;Clone Job&quot; (JobPane.Ribbon.CloneJobButton, Workflow)</summary>
			public static string esri_workflow_cloneJobButton {
				 get { return "esri_workflow_cloneJobButton"; }
			}
			///<summary>Returns the id string for &quot;Clear LOI&quot; (DefineAOI.Ribbon.ClearAOIButton, Workflow)</summary>
			public static string esri_workflow_clearAOI {
				 get { return "esri_workflow_clearAOI"; }
			}
			///<summary>Returns the id string for &quot;Close&quot; (DefineAOI.Ribbon.CloseAOIButton, Workflow)</summary>
			public static string esri_workflow_defineAOIClose {
				 get { return "esri_workflow_defineAOIClose"; }
			}
			///<summary>Returns the id string for &quot;Save and Close&quot; (DefineAOI.Ribbon.SaveAndCloseAOIButton, Workflow)</summary>
			public static string esri_workflow_defineAOISaveAndClose {
				 get { return "esri_workflow_defineAOISaveAndClose"; }
			}
			///<summary>Returns the id string for &quot;Execute Step&quot; (JobPane.JobPanels.RunStepButton, Workflow)</summary>
			public static string esri_workflow_workflowDiagramContextMenuRunButton {
				 get { return "esri_workflow_workflowDiagramContextMenuRunButton"; }
			}
			///<summary>Returns the id string for &quot;Mark Step Complete&quot; (JobPane.JobPanels.CheckAsDoneButton, Workflow)</summary>
			public static string esri_workflow_workflowDiagramContextMenuCheckButton {
				 get { return "esri_workflow_workflowDiagramContextMenuCheckButton"; }
			}
			///<summary>Returns the id string for &quot;Set as Current Step&quot; (JobPane.JobPanels.SetAsCurrentButton, Workflow)</summary>
			public static string esri_workflow_workflowDiagramContextMenuSetCurrentButton {
				 get { return "esri_workflow_workflowDiagramContextMenuSetCurrentButton"; }
			}
			///<summary>Returns the id string for &quot;Open Step Help&quot; (JobPane.JobPanels.OpenStepHelpButton, Workflow)</summary>
			public static string esri_workflow_workflowDiagramContextMenuOpenStepHelp {
				 get { return "esri_workflow_workflowDiagramContextMenuOpenStepHelp"; }
			}
			///<summary>Returns the id string for &quot;Workflow Manager&quot; (workflow_module:AddTaskFileAsync, Workflow)</summary>
			public static string esri_workflow_addTaskFileContextMenuButton {
				 get { return "esri_workflow_addTaskFileContextMenuButton"; }
			}
			///<summary>Returns the id string for &quot;New Attachment...&quot; (JobPane.Ribbon.NewAttachment, Workflow)</summary>
			public static string esri_workflow_createAttachment {
				 get { return "esri_workflow_createAttachment"; }
			}
			///<summary>Returns the id string for &quot;Manage Attachments&quot; (JobPane.Ribbon.ManageAttachments, Workflow)</summary>
			public static string esri_workflow_manageAttachments {
				 get { return "esri_workflow_manageAttachments"; }
			}
			///<summary>Returns the id string for &quot;Add to Favorites&quot; (WorkflowPane.Ribbon.AddToFavorites, Workflow)</summary>
			public static string esri_workflow_createJobContextMenuFavorite {
				 get { return "esri_workflow_createJobContextMenuFavorite"; }
			}
			///<summary>Returns the id string for &quot;Remove from Favorites&quot; (WorkflowPane.Ribbon.RemoveFromFavorites, Workflow)</summary>
			public static string esri_workflow_createJobContextMenuUnfavorite {
				 get { return "esri_workflow_createJobContextMenuUnfavorite"; }
			}
			///<summary>Returns the id string for &quot;Advanced...&quot; (WorkflowPane.Ribbon.OpenCreateJobsGP, Workflow)</summary>
			public static string esri_workflow_createJobsGP {
				 get { return "esri_workflow_createJobsGP"; }
			}
			///<summary>Returns the id string for &quot;Fit To Window&quot; (JobPane.Ribbon.FitToWindowButton, Workflow)</summary>
			public static string esri_workflow_canvas_fitToWindowButton {
				 get { return "esri_workflow_canvas_fitToWindowButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom to Current Step&quot; (JobPane.Ribbon.ZoomToCurStepButton, Workflow)</summary>
			public static string esri_workflow_canvas_zoomToCurStepButton {
				 get { return "esri_workflow_canvas_zoomToCurStepButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom in&quot; (JobPane.Ribbon.ZoomInButton, Workflow)</summary>
			public static string esri_workflow_canvas_zoomInButton {
				 get { return "esri_workflow_canvas_zoomInButton"; }
			}
			///<summary>Returns the id string for &quot;Zoom out&quot; (JobPane.Ribbon.ZoomOutButton, Workflow)</summary>
			public static string esri_workflow_canvas_zoomOutButton {
				 get { return "esri_workflow_canvas_zoomOutButton"; }
			}
			///<summary>Returns the id string for &quot;Pan&quot; (JobPane.Ribbon.PanButton, Workflow)</summary>
			public static string esri_workflow_canvas_panButton {
				 get { return "esri_workflow_canvas_panButton"; }
			}
			///<summary>Returns the id string for &quot;Map&quot; (ArcGIS.Desktop.Internal.Workflow.MapPane.Ribbon.ExportMapButton, Workflow)</summary>
			public static string esri_workflow_exportMap {
				 get { return "esri_workflow_exportMap"; }
			}
		}
		public static partial class Checkbox {
			///<summary>Returns the id string for &quot;Buffer Points/Lines&quot; (DefineAOI.Ribbon.BufferCheckbox, Workflow)</summary>
			public static string esri_workflow_bufferCheckBox {
				 get { return "esri_workflow_bufferCheckBox"; }
			}
			///<summary>Returns the id string for &quot;Merge Features&quot; (ArcGIS.Desktop.Internal.Workflow.MapPane.Ribbon.MergeCheckbox, Workflow)</summary>
			public static string esri_workflow_mergeCheckBox {
				 get { return "esri_workflow_mergeCheckBox"; }
			}
		}
		public static partial class Combobox {
			///<summary>Returns the id string for &quot;Buffer Units&quot; (DefineAOI.Ribbon.BufferUnitsComboBox, Workflow)</summary>
			public static string esri_workflow_bufferUnitsComboBox {
				 get { return "esri_workflow_bufferUnitsComboBox"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;esri_workflow_userProfileView&quot; (ArcGIS.Desktop.Internal.Workflow.Configuration.UserProfileViewModel, Workflow)</summary>
			public static string esri_workflow_userProfileView {
				 get { return "esri_workflow_userProfileView"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_userGroupsView&quot; (ArcGIS.Desktop.Internal.Workflow.Configuration.UserGroupsViewModel, Workflow)</summary>
			public static string esri_workflow_userGroupsView {
				 get { return "esri_workflow_userGroupsView"; }
			}
		}
		public static partial class Dockpane {
			///<summary>Returns the id string for &quot;Job Attachments&quot; (AttachmentsDockPaneViewModel, Workflow)</summary>
			public static string esri_workflow_attachmentsDockPane {
				 get { return "esri_workflow_attachmentsDockPane"; }
			}
			///<summary>Returns the id string for &quot;Job Properties&quot; (WorkflowPane.JobPropertiesDockPaneViewModel, Workflow)</summary>
			public static string esri_workflow_jobPropertiesDockPane {
				 get { return "esri_workflow_jobPropertiesDockPane"; }
			}
			///<summary>Returns the id string for &quot;Update Users and Groups&quot; (ArcGIS.Desktop.Internal.Workflow.Configuration.UserConfigurationDockPaneViewModel, Workflow)</summary>
			public static string esri_workflow_userConfigurationDockPane {
				 get { return "esri_workflow_userConfigurationDockPane"; }
			}
			///<summary>Returns the id string for &quot;Workflow&quot; (ArcGIS.Desktop.Internal.Workflow.WorkerPane.WorkerDockPaneViewModel, Workflow)</summary>
			public static string esri_workflow_workerDockPane {
				 get { return "esri_workflow_workerDockPane"; }
			}
		}
		public static partial class Editbox {
			///<summary>Returns the id string for &quot;Buffer Distance&quot; (DefineAOI.Ribbon.BufferDistanceEditBox, Workflow)</summary>
			public static string esri_workflow_bufferDistanceEditBox {
				 get { return "esri_workflow_bufferDistanceEditBox"; }
			}
		}
		public static partial class Gallery {
			///<summary>Returns the id string for &quot;New Job&quot; (WorkflowPane.Ribbon.CreateJobGalleryViewModel, Workflow)</summary>
			public static string esri_workflow_createJobGallery {
				 get { return "esri_workflow_createJobGallery"; }
			}
			///<summary>Returns the id string for &quot;Attachments&quot; (JobPane.Ribbon.ModifyAttachmentGalleryViewModel, Workflow)</summary>
			public static string esri_workflow_jobModifyAttachments {
				 get { return "esri_workflow_jobModifyAttachments"; }
			}
		}
		public static partial class Group {
			///<summary>Returns the id string for &quot;DB Connection&quot; (Group, Workflow)</summary>
			public static string esri_workflow_workflowDBConnectionGroup {
				 get { return "esri_workflow_workflowDBConnectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Navigate&quot; (Group, Workflow)</summary>
			public static string esri_workflow_navigateGroup {
				 get { return "esri_workflow_navigateGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Workflow)</summary>
			public static string esri_workflow_selectionGroup {
				 get { return "esri_workflow_selectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Create Jobs&quot; (Group, Workflow)</summary>
			public static string esri_workflow_createJobGroup {
				 get { return "esri_workflow_createJobGroup"; }
			}
			///<summary>Returns the id string for &quot;Actions&quot; (Group, Workflow)</summary>
			public static string esri_workflow_actionsGroup {
				 get { return "esri_workflow_actionsGroup"; }
			}
			///<summary>Returns the id string for &quot;Offline&quot; (Group, Workflow)</summary>
			public static string esri_workflow_offlineGroup {
				 get { return "esri_workflow_offlineGroup"; }
			}
			///<summary>Returns the id string for &quot;Windows&quot; (Group, Workflow)</summary>
			public static string esri_workflow_dockWindows {
				 get { return "esri_workflow_dockWindows"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Workflow)</summary>
			public static string esri_workflow_job_selectionGroup {
				 get { return "esri_workflow_job_selectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Assign&quot; (Group, Workflow)</summary>
			public static string esri_workflow_jobAssignGroup {
				 get { return "esri_workflow_jobAssignGroup"; }
			}
			///<summary>Returns the id string for &quot;Workflow&quot; (Group, Workflow)</summary>
			public static string esri_workflow_jobWorkflowExecutionGroup {
				 get { return "esri_workflow_jobWorkflowExecutionGroup"; }
			}
			///<summary>Returns the id string for &quot;Job&quot; (Group, Workflow)</summary>
			public static string esri_workflow_jobGroup {
				 get { return "esri_workflow_jobGroup"; }
			}
			///<summary>Returns the id string for &quot;Manage&quot; (Group, Workflow)</summary>
			public static string esri_workflow_jobManageGroup {
				 get { return "esri_workflow_jobManageGroup"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Group, Workflow)</summary>
			public static string esri_workflow_jobWorkflowViewGroup {
				 get { return "esri_workflow_jobWorkflowViewGroup"; }
			}
			///<summary>Returns the id string for &quot;Draw LOI&quot; (Group, Workflow)</summary>
			public static string esri_workflow_defineAOIDrawGroup {
				 get { return "esri_workflow_defineAOIDrawGroup"; }
			}
			///<summary>Returns the id string for &quot;Selection&quot; (Group, Workflow)</summary>
			public static string esri_workflow_aoiSelectionGroup {
				 get { return "esri_workflow_aoiSelectionGroup"; }
			}
			///<summary>Returns the id string for &quot;Close&quot; (Group, Workflow)</summary>
			public static string esri_workflow_defineAOICloseGroup {
				 get { return "esri_workflow_defineAOICloseGroup"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Group, Workflow)</summary>
			public static string esri_workflow_exportGroup {
				 get { return "esri_workflow_exportGroup"; }
			}
			///<summary>Returns the id string for &quot;Define Job Location&quot; (Group, Workflow)</summary>
			public static string esri_workflow_defineJobLocation {
				 get { return "esri_workflow_defineJobLocation"; }
			}
		}
		public static partial class Category {
			///<summary>Returns the id string for &quot;esri_workflow_userConfigurationViews&quot; (Category, Workflow)</summary>
			public static string esri_workflow_userConfigurationViews {
				 get { return "esri_workflow_userConfigurationViews"; }
			}
		}
		public static partial class Component {
			///<summary>Returns the id string for &quot;WorkflowConnectionContainer&quot; (ArcGIS.Desktop.Internal.Workflow.WorkflowConnectionContainer, Workflow)</summary>
			public static string WorkflowConnectionContainer {
				 get { return "WorkflowConnectionContainer"; }
			}
			///<summary>Returns the id string for &quot;esri_itemInfoType_WorkflowProjectItem&quot; (ArcGIS.Desktop.Internal.Workflow.WorkflowConnectionItem, Workflow)</summary>
			public static string esri_itemInfoType_WorkflowProjectItem {
				 get { return "esri_itemInfoType_WorkflowProjectItem"; }
			}
		}
		public static partial class Condition {
			///<summary>Returns the id string for &quot;In a map pane&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_mapPaneCondition {
				 get { return "esri_workflow_mapPaneCondition"; }
			}
			///<summary>Returns the id string for &quot;Map not open by step&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_ExportMapCondition {
				 get { return "esri_workflow_ExportMapCondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow Connection can be opened&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_canAddOnlineWorkflowConnectionCondition {
				 get { return "esri_workflow_canAddOnlineWorkflowConnectionCondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow Connection can be added&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_canAddWorkflowConnectionCondition {
				 get { return "esri_workflow_canAddWorkflowConnectionCondition"; }
			}
			///<summary>Returns the id string for &quot;A Task item can be added to the Workflow Repository&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_canAddTaskFileCondition {
				 get { return "esri_workflow_canAddTaskFileCondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow Connection is online and the user is an administrator&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowConnectionOnlineAndAdminUserCondition {
				 get { return "esri_workflow_workflowConnectionOnlineAndAdminUserCondition"; }
			}
			///<summary>Returns the id string for &quot;Pro is connected to server&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_isNotServerConnection {
				 get { return "esri_workflow_isNotServerConnection"; }
			}
			///<summary>Returns the id string for &quot;User has administrator privileges&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowAdministratorUserPrivilegeCondition {
				 get { return "esri_workflow_workflowAdministratorUserPrivilegeCondition"; }
			}
			///<summary>Returns the id string for &quot;Configuration has an individual data workspace&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowIndividualDataWorkspaceCondition {
				 get { return "esri_workflow_workflowIndividualDataWorkspaceCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job can be created&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowCreateJobUserPrivilegeCondition {
				 get { return "esri_workflow_workflowCreateJobUserPrivilegeCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job can be assigned&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowAssignAnyJobUserPrivilegeCondition {
				 get { return "esri_workflow_workflowAssignAnyJobUserPrivilegeCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job can be exported&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowExportJobsUserPrivilegeCondition {
				 get { return "esri_workflow_workflowExportJobsUserPrivilegeCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job can be closed&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowCloseJobUserPrivilegeCondition {
				 get { return "esri_workflow_workflowCloseJobUserPrivilegeCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow user can subscribe to notifications&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowCanSubscribeToNotificationsUserPrivilegeCondition {
				 get { return "esri_workflow_workflowCanSubscribeToNotificationsUserPrivilegeCondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow user can update job properties&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_updateJobPropertiesCondition {
				 get { return "esri_workflow_updateJobPropertiesCondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow user can update the LOI&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowManageAOICondition {
				 get { return "esri_workflow_workflowManageAOICondition"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_CloseJobEnabledCondition&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_CloseJobEnabledCondition {
				 get { return "esri_workflow_CloseJobEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_ExportCSVEnabledCondition&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_ExportCSVEnabledCondition {
				 get { return "esri_workflow_ExportCSVEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow user is defining an LOI&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_defineAOICondition {
				 get { return "esri_workflow_defineAOICondition"; }
			}
			///<summary>Returns the id string for &quot;A Workflow user is buffering points/lines while defining an LOI&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_defineAOIBufferCondition {
				 get { return "esri_workflow_defineAOIBufferCondition"; }
			}
			///<summary>Returns the id string for &quot;Unimplemented functionality that should always be disabled&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_unimplementedCondition {
				 get { return "esri_workflow_unimplementedCondition"; }
			}
			///<summary>Returns the id string for &quot;The user can assign the job to themself&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_assignJobToSelfCondition {
				 get { return "esri_workflow_assignJobToSelfCondition"; }
			}
			///<summary>Returns the id string for &quot;A job is executing&quot; (Condition, Workflow)</summary>
			public static string esri_worklflow_jobNotExecutingCondition {
				 get { return "esri_worklflow_jobNotExecutingCondition"; }
			}
			///<summary>Returns the id string for &quot;Connected to an online workflow repository and user can take jobs offline&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_takeOfflineCondition {
				 get { return "esri_workflow_takeOfflineCondition"; }
			}
			///<summary>Returns the id string for &quot;Connected to an online workflow repository&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_onlineCondition {
				 get { return "esri_workflow_onlineCondition"; }
			}
			///<summary>Returns the id string for &quot;The user can use workflow diagram navigation tool&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_inWorkflowTabCondition {
				 get { return "esri_workflow_inWorkflowTabCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job can be deleted&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_DeleteJobsEnabledCondition {
				 get { return "esri_workflow_DeleteJobsEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job version can be deleted&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_DeleteVersionEnabledCondition {
				 get { return "esri_workflow_DeleteVersionEnabledCondition"; }
			}
			///<summary>Returns the id string for &quot;A Worflow job map can be deleted&quot; (Condition, Workflow)</summary>
			public static string esri_workflow_workflowDeleteMXDUserPrivilegeCondition {
				 get { return "esri_workflow_workflowDeleteMXDUserPrivilegeCondition"; }
			}
		}
		public static partial class Module {
			///<summary>Returns the id string for &quot;Workflow Manager&quot; (WorkflowModule, Workflow)</summary>
			public static string workflow_module {
				 get { return "workflow_module"; }
			}
		}
		public static partial class Product {
			///<summary>Returns the id string for &quot;Workflow Manager&quot; (Product, Workflow)</summary>
			public static string esri_product_workflow {
				 get { return "esri_product_workflow"; }
			}
		}
		public static partial class Menu {
			///<summary>Returns the id string for &quot;WorkflowConnections&quot; (Menu, Workflow)</summary>
			public static string esri_workflow_workflowFolderContextMenu {
				 get { return "esri_workflow_workflowFolderContextMenu"; }
			}
			///<summary>Returns the id string for &quot;Export&quot; (Menu, Workflow)</summary>
			public static string esri_workflow_exportMenu {
				 get { return "esri_workflow_exportMenu"; }
			}
			///<summary>Returns the id string for &quot;WorkflowStepAction&quot; (Menu, Workflow)</summary>
			public static string esri_workflow_workflowDiagramContextMenu {
				 get { return "esri_workflow_workflowDiagramContextMenu"; }
			}
			///<summary>Returns the id string for &quot;CreateJob&quot; (Menu, Workflow)</summary>
			public static string esri_workflow_createJobContextMenu {
				 get { return "esri_workflow_createJobContextMenu"; }
			}
			///<summary>Returns the id string for &quot;CreateJobFavorite&quot; (Menu, Workflow)</summary>
			public static string esri_workflow_createJobFavContextMenu {
				 get { return "esri_workflow_createJobFavContextMenu"; }
			}
		}
		public static partial class Pane {
			///<summary>Returns the id string for &quot; &quot; (WorkflowPaneViewModel, Workflow)</summary>
			public static string esri_workflow_workflowPane {
				 get { return "esri_workflow_workflowPane"; }
			}
			///<summary>Returns the id string for &quot; &quot; (JobViewModel, Workflow)</summary>
			public static string esri_workflow_jobView {
				 get { return "esri_workflow_jobView"; }
			}
		}
		public static partial class State {
			///<summary>Returns the id string for &quot;esri_workflow_workflowConnectionExistsState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowConnectionExistsState {
				 get { return "esri_workflow_workflowConnectionExistsState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_defineAOIState&quot; (State, Workflow)</summary>
			public static string esri_workflow_defineAOIState {
				 get { return "esri_workflow_defineAOIState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_wmxStepState&quot; (State, Workflow)</summary>
			public static string esri_workflow_wmxStepState {
				 get { return "esri_workflow_wmxStepState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowAdministratorUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowAdministratorUserPrivilegeState {
				 get { return "esri_workflow_workflowAdministratorUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_core_isSignedIn&quot; (State, Workflow)</summary>
			public static string esri_core_isSignedIn {
				 get { return "esri_core_isSignedIn"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_allowOnlineConnections&quot; (State, Workflow)</summary>
			public static string esri_workflow_allowOnlineConnections {
				 get { return "esri_workflow_allowOnlineConnections"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_onlineState&quot; (State, Workflow)</summary>
			public static string esri_workflow_onlineState {
				 get { return "esri_workflow_onlineState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_isServerConnectionState&quot; (State, Workflow)</summary>
			public static string esri_workflow_isServerConnectionState {
				 get { return "esri_workflow_isServerConnectionState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowIndividualDataWorkspaceState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowIndividualDataWorkspaceState {
				 get { return "esri_workflow_workflowIndividualDataWorkspaceState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowCreateJobUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowCreateJobUserPrivilegeState {
				 get { return "esri_workflow_workflowCreateJobUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowAssignAnyJobUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowAssignAnyJobUserPrivilegeState {
				 get { return "esri_workflow_workflowAssignAnyJobUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowExportJobsUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowExportJobsUserPrivilegeState {
				 get { return "esri_workflow_workflowExportJobsUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowCloseJobUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowCloseJobUserPrivilegeState {
				 get { return "esri_workflow_workflowCloseJobUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowCanSubscribeToNotificationsUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowCanSubscribeToNotificationsUserPrivilegeState {
				 get { return "esri_workflow_workflowCanSubscribeToNotificationsUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowUpdatePropertiesUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowUpdatePropertiesUserPrivilegeState {
				 get { return "esri_workflow_workflowUpdatePropertiesUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowManagerAOIUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowManagerAOIUserPrivilegeState {
				 get { return "esri_workflow_workflowManagerAOIUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_CloseJobEnabledState&quot; (State, Workflow)</summary>
			public static string esri_workflow_CloseJobEnabledState {
				 get { return "esri_workflow_CloseJobEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_ExportCSVEnabledState&quot; (State, Workflow)</summary>
			public static string esri_workflow_ExportCSVEnabledState {
				 get { return "esri_workflow_ExportCSVEnabledState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_defineAOIBufferState&quot; (State, Workflow)</summary>
			public static string esri_workflow_defineAOIBufferState {
				 get { return "esri_workflow_defineAOIBufferState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_unimplementedState&quot; (State, Workflow)</summary>
			public static string esri_workflow_unimplementedState {
				 get { return "esri_workflow_unimplementedState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_assignJobToSelfState&quot; (State, Workflow)</summary>
			public static string esri_workflow_assignJobToSelfState {
				 get { return "esri_workflow_assignJobToSelfState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_jobExecutingState&quot; (State, Workflow)</summary>
			public static string esri_workflow_jobExecutingState {
				 get { return "esri_workflow_jobExecutingState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowCanTakeJobsOfflineUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowCanTakeJobsOfflineUserPrivilegeState {
				 get { return "esri_workflow_workflowCanTakeJobsOfflineUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_inWorkflowTabState&quot; (State, Workflow)</summary>
			public static string esri_workflow_inWorkflowTabState {
				 get { return "esri_workflow_inWorkflowTabState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowDeleteJobsUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowDeleteJobsUserPrivilegeState {
				 get { return "esri_workflow_workflowDeleteJobsUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowDeleteVersionUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowDeleteVersionUserPrivilegeState {
				 get { return "esri_workflow_workflowDeleteVersionUserPrivilegeState"; }
			}
			///<summary>Returns the id string for &quot;esri_workflow_workflowDeleteMXDUserPrivilegeState&quot; (State, Workflow)</summary>
			public static string esri_workflow_workflowDeleteMXDUserPrivilegeState {
				 get { return "esri_workflow_workflowDeleteMXDUserPrivilegeState"; }
			}
		}
		public static partial class Tab {
			///<summary>Returns the id string for &quot;View&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_viewTab {
				 get { return "esri_workflow_viewTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_analysisTab {
				 get { return "esri_workflow_analysisTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_insertTab {
				 get { return "esri_workflow_insertTab"; }
			}
			///<summary>Returns the id string for &quot;Workflow&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_homeTab {
				 get { return "esri_workflow_homeTab"; }
			}
			///<summary>Returns the id string for &quot;View&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_jobViewTab {
				 get { return "esri_workflow_jobViewTab"; }
			}
			///<summary>Returns the id string for &quot;Analysis&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_jobAnalysisTab {
				 get { return "esri_workflow_jobAnalysisTab"; }
			}
			///<summary>Returns the id string for &quot;Insert&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_jobInsertTab {
				 get { return "esri_workflow_jobInsertTab"; }
			}
			///<summary>Returns the id string for &quot;Job&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_jobHomeTab {
				 get { return "esri_workflow_jobHomeTab"; }
			}
			///<summary>Returns the id string for &quot;Define LOI&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_defineAOITab {
				 get { return "esri_workflow_defineAOITab"; }
			}
			///<summary>Returns the id string for &quot;Workflow&quot; (Tab, Workflow)</summary>
			public static string esri_workflow_mapPaneTab {
				 get { return "esri_workflow_mapPaneTab"; }
			}
		}
		public static partial class Tabgroup {
			///<summary>Returns the id string for &quot;Workflow&quot; (Tabgroup, Workflow)</summary>
			public static string esri_workflow_workflowTabGroup {
				 get { return "esri_workflow_workflowTabGroup"; }
			}
		}
		public static partial class Toolbar {
			///<summary>Returns the id string for &quot;esri_workflow_bufferToolbar&quot; (Toolbar, Workflow)</summary>
			public static string esri_workflow_bufferToolbar {
				 get { return "esri_workflow_bufferToolbar"; }
			}
		}
		public static partial class Toolpalette {
			///<summary>Returns the id string for &quot;Delete&quot; (Toolpalette, Workflow)</summary>
			public static string esri_workflow_deleteJobsPalette {
				 get { return "esri_workflow_deleteJobsPalette"; }
			}
			///<summary>Returns the id string for &quot;Workflow Manager&quot; (Toolpalette, Workflow)</summary>
			public static string esri_workflow_workflowViewPalette {
				 get { return "esri_workflow_workflowViewPalette"; }
			}
		}
	}

}
